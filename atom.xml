<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>计算机电子书</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://it-ebooks.flygon.net/"/>
  <updated>2016-03-19T08:08:25.196Z</updated>
  <id>http://it-ebooks.flygon.net/</id>
  
  <author>
    <name>Flygon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>简明 Python 教程</title>
    <link href="http://it-ebooks.flygon.net/a-byte-of-python/"/>
    <id>http://it-ebooks.flygon.net/a-byte-of-python/</id>
    <published>2016-03-19T08:07:17.000Z</published>
    <updated>2016-03-19T08:08:25.196Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s28291750.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/a-byte-of-python/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/a-byte-of-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/a-byte-of-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/a-byte-of-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s28291750.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Dive Into Python3 中文版</title>
    <link href="http://it-ebooks.flygon.net/dive-into-python3/"/>
    <id>http://it-ebooks.flygon.net/dive-into-python3/</id>
    <published>2016-03-19T07:02:40.000Z</published>
    <updated>2016-03-19T07:04:22.710Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img1.doubanio.com/lpic/s4059293.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/dive-into-python3/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/dive-into-python3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/dive-into-python3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/dive-into-python3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img1.doubanio.com/lpic/s4059293.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Introduction To Tornado 中文版</title>
    <link href="http://it-ebooks.flygon.net/introduction-to-tornado/"/>
    <id>http://it-ebooks.flygon.net/introduction-to-tornado/</id>
    <published>2016-03-19T04:02:01.000Z</published>
    <updated>2016-03-19T04:02:58.606Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://box.kancloud.cn/cover_2015-09-02_55e6e8dc790a_800x1068.jpg?imageMogr2/thumbnail/173x231!/interlace/1/quality/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/kancloud/introduction_to_tornado&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/kancloud/introduction_to_tornado&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://box.kancloud.cn/cover_2015-09-02_55e6e8dc790a_800x1068.jpg?imageMogr2/thumbnail/173x231!/interlace/1/quality/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="tornado" scheme="http://it-ebooks.flygon.net/tags/tornado/"/>
    
  </entry>
  
  <entry>
    <title>Dive Into Python 中文版</title>
    <link href="http://it-ebooks.flygon.net/dive-into-python/"/>
    <id>http://it-ebooks.flygon.net/dive-into-python/</id>
    <published>2016-03-19T04:00:23.000Z</published>
    <updated>2016-03-19T04:01:27.403Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s4180565.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/dive-into-python/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/dive-into-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/dive-into-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/dive-into-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s4180565.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 漫游指南</title>
    <link href="http://it-ebooks.flygon.net/gitHub-%E6%BC%AB%E6%B8%B8%E6%8C%87%E5%8D%97/"/>
    <id>http://it-ebooks.flygon.net/gitHub-漫游指南/</id>
    <published>2016-03-16T10:19:11.000Z</published>
    <updated>2016-03-16T10:20:34.707Z</updated>
    
    <content type="html">&lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/github-roam&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github-roam&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://github.phodal.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phodal/github-roam/raw/gh-pages/github-roam.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phodal/github-roam/raw/gh-pages/github-roam.epub&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phodal/github-roam/raw/gh-pages/github-roam.mobi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/github-roam&quot;&gt;github-roam&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://it-ebooks.flygon.net/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>RePractise</title>
    <link href="http://it-ebooks.flygon.net/repractise/"/>
    <id>http://it-ebooks.flygon.net/repractise/</id>
    <published>2016-03-16T10:16:06.000Z</published>
    <updated>2016-03-16T10:23:15.349Z</updated>
    
    <content type="html">&lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/repractise&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;repractise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-nd/3.0/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CC BY-NC-ND 3.0&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://repractise.phodal.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/repractise&quot;&gt;repractise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-nd/3.0/cn/&quot;&gt;CC BY-NC-ND 3.0&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="工程" scheme="http://it-ebooks.flygon.net/tags/%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>CoffeeScript 小书</title>
    <link href="http://it-ebooks.flygon.net/coffeescript-%E5%B0%8F%E4%B9%A6/"/>
    <id>http://it-ebooks.flygon.net/coffeescript-小书/</id>
    <published>2016-03-14T10:07:24.000Z</published>
    <updated>2016-03-14T10:18:10.345Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1wk7eb5vxj20e60iwt9q.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href=&quot;http://island205.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;寸志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://island205.com/tlboc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CoffeeScript 小书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pan.baidu.com/s/1dDkUyCp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度云下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/CeFLYiTngI9wb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1000eb.com/1j11x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;千易下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1wk7eb5vxj20e60iwt9q.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href=&quot;http://island205.com&quot;&gt;寸志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://island205.com/tlboc&quot;&gt;CoffeeScript 小书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
    
    </summary>
    
    
      <category term="coffeescript" scheme="http://it-ebooks.flygon.net/tags/coffeescript/"/>
    
  </entry>
  
  <entry>
    <title>CoffeeScript Coobook 中文版</title>
    <link href="http://it-ebooks.flygon.net/coffeescript-cookbook-zh/"/>
    <id>http://it-ebooks.flygon.net/coffeescript-cookbook-zh/</id>
    <published>2016-03-14T10:01:22.000Z</published>
    <updated>2016-03-14T10:02:22.783Z</updated>
    
    <content type="html">&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/coffeescript/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/download/coffeescript/pdf/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/download/coffeescript/epub/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/coffeescrip
    
    </summary>
    
    
      <category term="coffeescript" scheme="http://it-ebooks.flygon.net/tags/coffeescript/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin for android Developers 中文翻译</title>
    <link href="http://it-ebooks.flygon.net/kotlin-for-android-developers-zh/"/>
    <id>http://it-ebooks.flygon.net/kotlin-for-android-developers-zh/</id>
    <published>2016-03-14T06:49:59.000Z</published>
    <updated>2016-03-14T06:54:05.508Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1web1pkp3j20ar0dw74r.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/wangjiegulu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wangjiegulu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kotlin-for-android-developers-zh&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wangjiegulu/kotlin-for-android-developers-zh/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1web1pkp3j20ar0dw74r.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/wangjiegulu&quot;&gt;wangjiegulu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/wangjiegulu/kotlin-for-android-developers-zh&quot;&gt;kotlin-for-android-developers-zh&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="android" scheme="http://it-ebooks.flygon.net/tags/android/"/>
    
      <category term="kotlin" scheme="http://it-ebooks.flygon.net/tags/kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib 教程</title>
    <link href="http://it-ebooks.flygon.net/matplotlib-%E6%95%99%E7%A8%8B/"/>
    <id>http://it-ebooks.flygon.net/matplotlib-教程/</id>
    <published>2016-03-14T03:40:33.000Z</published>
    <updated>2016-03-14T02:46:13.261Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://www.labri.fr/perso/nrougier/teaching/matplotlib/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matplotlib tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matplotlib 教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Matplotlib 可能是 Python 2D-绘图领域使用最广泛的套件。它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。这里将会探索 matplotlib 的常见用法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;IPython-以及-pylab-模式&quot;&gt;&lt;a href=&quot;#IPython-以及-pylab-模式&quot; class=&quot;headerlink&quot; title=&quot;IPython 以及 pylab 模式&quot;&gt;&lt;/a&gt;IPython 以及 pylab 模式&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://ipython.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IPython&lt;/a&gt; 是 Python 的一个增强版本。它在下列方面有所增强：命名输入输出、使用系统命令（shell commands）、排错（debug）能力。我们在命令行终端给 IPython 加上参数 &lt;code&gt;-pylab&lt;/code&gt; （0.12 以后的版本是 &lt;code&gt;--pylab&lt;/code&gt;）之后，就可以像 Matlab 或者 Mathematica 那样以交互的方式绘图。&lt;/p&gt;
&lt;h4 id=&quot;pylab&quot;&gt;&lt;a href=&quot;#pylab&quot; class=&quot;headerlink&quot; title=&quot;pylab&quot;&gt;&lt;/a&gt;pylab&lt;/h4&gt;&lt;p&gt;pylab 是 matplotlib 面向对象绘图库的一个接口。它的语法和 Matlab 十分相近。也就是说，它主要的绘图命令和 Matlab 对应的命令有相似的参数。&lt;/p&gt;
&lt;h3 id=&quot;初级绘制&quot;&gt;&lt;a href=&quot;#初级绘制&quot; class=&quot;headerlink&quot; title=&quot;初级绘制&quot;&gt;&lt;/a&gt;初级绘制&lt;/h3&gt;&lt;p&gt;这一节中，我们将从简到繁：先尝试用默认配置在同一张图上绘制正弦和余弦函数图像，然后逐步美化它。&lt;/p&gt;
&lt;p&gt;第一步，是取得正弦函数和预先函数的值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;X&lt;/code&gt; 是一个 &lt;code&gt;numpy&lt;/code&gt; 数组，包含了从 &lt;code&gt;-π&lt;/code&gt; 到 &lt;code&gt;+π&lt;/code&gt; 等间隔的 256 个值。&lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;S&lt;/code&gt; 则分别是这 256 个值对应的余弦和正弦函数值组成的 &lt;code&gt;numpy&lt;/code&gt; 数组。&lt;/p&gt;
&lt;p&gt;你可以在 IPython 的交互模式下测试代码，也可以下载代码（下载链接就是这些示例图），然后执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python exercise_1.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用默认配置&quot;&gt;&lt;a href=&quot;#使用默认配置&quot; class=&quot;headerlink&quot; title=&quot;使用默认配置&quot;&gt;&lt;/a&gt;使用默认配置&lt;/h4&gt;&lt;p&gt;Matplotlib 的默认配置都允许用户自定义。你可以调整大多数的默认配置：图片大小和分辨率（dpi）、线宽、颜色、风格、坐标轴、坐标轴以及网格的属性、文字与字体属性等。不过，matplotlib 的默认配置在大多数情况下已经做得足够好，你可能只在很少的情况下才会想更改这些默认配置。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X,C)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X,S)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_1.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_1.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;默认配置的具体内容&quot;&gt;&lt;a href=&quot;#默认配置的具体内容&quot; class=&quot;headerlink&quot; title=&quot;默认配置的具体内容&quot;&gt;&lt;/a&gt;默认配置的具体内容&lt;/h4&gt;&lt;p&gt;下面的代码中，我们展现了 matplotlib 的默认配置并辅以注释说明，这部分配置包含了有关绘图样式的所有配置。代码中的配置与默认配置完全相同，你可以在交互模式中修改其中的值来观察效果。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 导入 matplotlib 的所有内容（nympy 可以用 np 这个名字来使用）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个 8 * 6 点（point）的图，并设置分辨率为 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;figure(figsize=(8,6), dpi=80)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(1,1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制余弦曲线，使用蓝色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, C, color=&amp;quot;blue&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制正弦曲线，使用绿色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, S, color=&amp;quot;green&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(-4.0,4.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks(np.linspace(-4,4,9,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(-1.0,1.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks(np.linspace(-1,1,5,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 以分辨率 72 来保存图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# savefig(&amp;quot;exercice_2.png&amp;quot;,dpi=72)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在屏幕上显示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_2.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_2.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;改变线条的颜色和粗细&quot;&gt;&lt;a href=&quot;#改变线条的颜色和粗细&quot; class=&quot;headerlink&quot; title=&quot;改变线条的颜色和粗细&quot;&gt;&lt;/a&gt;改变线条的颜色和粗细&lt;/h4&gt;&lt;p&gt;首先，我们以蓝色和红色分别表示余弦和正弦函数，而后将线条变粗一点。接下来，我们在水平方向拉伸一下整个图。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 导入 matplotlib 的所有内容（nympy 可以用 np 这个名字来使用）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个 8 * 6 点（point）的图，并设置分辨率为 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;figure(figsize=(8,6), dpi=80)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(1,1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制余弦曲线，使用蓝色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, C, color=&amp;quot;blue&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制正弦曲线，使用绿色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, S, color=&amp;quot;green&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(-4.0,4.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks(np.linspace(-4,4,9,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(-1.0,1.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks(np.linspace(-1,1,5,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 以分辨率 72 来保存图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# savefig(&amp;quot;exercice_2.png&amp;quot;,dpi=72)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在屏幕上显示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_3.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_3.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;设置图片边界&quot;&gt;&lt;a href=&quot;#设置图片边界&quot; class=&quot;headerlink&quot; title=&quot;设置图片边界&quot;&gt;&lt;/a&gt;设置图片边界&lt;/h4&gt;&lt;p&gt;当前的图片边界设置得不好，所以有些地方看得不是很清楚。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(X.min()*1.1, X.max()*1.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(C.min()*1.1, C.max()*1.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更好的方式是这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xmin ,xmax = X.min(), X.max()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ymin, ymax = Y.min(), Y.max()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dx = (xmax - xmin) * 0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dy = (ymax - ymin) * 0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(xmin - dx, xmax + dx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(ymin - dy, ymax + dy)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_4.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_4.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;设置记号&quot;&gt;&lt;a href=&quot;#设置记号&quot; class=&quot;headerlink&quot; title=&quot;设置记号&quot;&gt;&lt;/a&gt;设置记号&lt;/h4&gt;&lt;p&gt;我们讨论正弦和余弦函数的时候，通常希望知道函数在 &lt;code&gt;±π&lt;/code&gt; 和 &lt;code&gt;±π/2&lt;/code&gt; 的值。这样看来，当前的设置就不那么理想了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks( [-np.pi, -np.pi/2, 0, np.pi/2, np.pi])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks([-1, 0, +1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_5.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_5.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;设置记号的标签&quot;&gt;&lt;a href=&quot;#设置记号的标签&quot; class=&quot;headerlink&quot; title=&quot;设置记号的标签&quot;&gt;&lt;/a&gt;设置记号的标签&lt;/h4&gt;&lt;p&gt;记号现在没问题了，不过标签却不大符合期望。我们可以把 3.142 当做是 &lt;code&gt;π&lt;/code&gt;，但毕竟不够精确。当我们设置记号的时候，我们可以同时设置记号的标签。注意这里使用了 LaTeX。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [r&amp;apos;$-\pi$&amp;apos;, r&amp;apos;$-\pi/2$&amp;apos;, r&amp;apos;$0$&amp;apos;, r&amp;apos;$+\pi/2$&amp;apos;, r&amp;apos;$+\pi$&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks([-1, 0, +1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [r&amp;apos;$-1$&amp;apos;, r&amp;apos;$0$&amp;apos;, r&amp;apos;$+1$&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_6.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_6.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;移动脊柱&quot;&gt;&lt;a href=&quot;#移动脊柱&quot; class=&quot;headerlink&quot; title=&quot;移动脊柱&quot;&gt;&lt;/a&gt;移动脊柱&lt;/h4&gt;&lt;p&gt;坐标轴线和上面的记号连在一起就形成了脊柱（Spines，一条线段上有一系列的凸起，是不是很像脊柱骨啊~），它记录了数据区域的范围。它们可以放在任意位置，不过至今为止，我们都把它放在图的四边。&lt;/p&gt;
&lt;p&gt;实际上每幅图有四条脊柱（上下左右），为了将脊柱放在图的中间，我们必须将其中的两条（上和右）设置为无色，然后调整剩下的两条到合适的位置——数据空间的 0 点。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax = gca()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;right&amp;apos;].set_color(&amp;apos;none&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;top&amp;apos;].set_color(&amp;apos;none&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.xaxis.set_ticks_position(&amp;apos;bottom&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;bottom&amp;apos;].set_position((&amp;apos;data&amp;apos;,0))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.yaxis.set_ticks_position(&amp;apos;left&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;left&amp;apos;].set_position((&amp;apos;data&amp;apos;,0))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_7.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_7.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;添加图例&quot;&gt;&lt;a href=&quot;#添加图例&quot; class=&quot;headerlink&quot; title=&quot;添加图例&quot;&gt;&lt;/a&gt;添加图例&lt;/h4&gt;&lt;p&gt;我们在图的左上角添加一个图例。为此，我们只需要在 &lt;code&gt;plot&lt;/code&gt; 函数里以「键 - 值」的形式增加一个参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, C, color=&amp;quot;blue&amp;quot;, linewidth=2.5, linestyle=&amp;quot;-&amp;quot;, label=&amp;quot;cosine&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, S, color=&amp;quot;red&amp;quot;,  linewidth=2.5, linestyle=&amp;quot;-&amp;quot;, label=&amp;quot;sine&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;legend(loc=&amp;apos;upper left&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_8.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_8.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;给一些特殊点做注释&quot;&gt;&lt;a href=&quot;#给一些特殊点做注释&quot; class=&quot;headerlink&quot; title=&quot;给一些特殊点做注释&quot;&gt;&lt;/a&gt;给一些特殊点做注释&lt;/h4&gt;&lt;p&gt;我们希望在 &lt;code&gt;2π/3&lt;/code&gt; 的位置给两条函数曲线加上一个注释。首先，我们在对应的函数图像位置上画一个点；然后，向横轴引一条垂线，以虚线标记；最后，写上标签。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = 2*np.pi/3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot([t,t],[0,np.cos(t)], color =&amp;apos;blue&amp;apos;, linewidth=2.5, linestyle=&amp;quot;--&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scatter([t,],[np.cos(t),], 50, color =&amp;apos;blue&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;annotate(r&amp;apos;$\sin(\frac&amp;#123;2\pi&amp;#125;&amp;#123;3&amp;#125;)=\frac&amp;#123;\sqrt&amp;#123;3&amp;#125;&amp;#125;&amp;#123;2&amp;#125;$&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xy=(t, np.sin(t)), xycoords=&amp;apos;data&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xytext=(+10, +30), textcoords=&amp;apos;offset points&amp;apos;, fontsize=16,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         arrowprops=dict(arrowstyle=&amp;quot;-&amp;gt;&amp;quot;, connectionstyle=&amp;quot;arc3,rad=.2&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot([t,t],[0,np.sin(t)], color =&amp;apos;red&amp;apos;, linewidth=2.5, linestyle=&amp;quot;--&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scatter([t,],[np.sin(t),], 50, color =&amp;apos;red&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;annotate(r&amp;apos;$\cos(\frac&amp;#123;2\pi&amp;#125;&amp;#123;3&amp;#125;)=-\frac&amp;#123;1&amp;#125;&amp;#123;2&amp;#125;$&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xy=(t, np.cos(t)), xycoords=&amp;apos;data&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xytext=(-90, -50), textcoords=&amp;apos;offset points&amp;apos;, fontsize=16,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         arrowprops=dict(arrowstyle=&amp;quot;-&amp;gt;&amp;quot;, connectionstyle=&amp;quot;arc3,rad=.2&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_9.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_9.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;精益求精&quot;&gt;&lt;a href=&quot;#精益求精&quot; class=&quot;headerlink&quot; title=&quot;精益求精&quot;&gt;&lt;/a&gt;精益求精&lt;/h4&gt;&lt;p&gt;坐标轴上的记号标签被曲线挡住了，作为强迫症患者（雾）这是不能忍的。我们可以把它们放大，然后添加一个白色的半透明底色。这样可以保证标签和曲线同时可见。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for label in ax.get_xticklabels() + ax.get_yticklabels():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_fontsize(16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_bbox(dict(facecolor=&amp;apos;white&amp;apos;, edgecolor=&amp;apos;None&amp;apos;, alpha=0.65 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_10.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_10.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;图像、子图、坐标轴和记号&quot;&gt;&lt;a href=&quot;#图像、子图、坐标轴和记号&quot; class=&quot;headerlink&quot; title=&quot;图像、子图、坐标轴和记号&quot;&gt;&lt;/a&gt;图像、子图、坐标轴和记号&lt;/h3&gt;&lt;p&gt;到目前为止，我们都用隐式的方法来绘制图像和坐标轴。快速绘图中，这是很方便的。我们也可以显式地控制图像、子图、坐标轴。Matplotlib 中的「图像」指的是用户界面看到的整个窗口内容。在图像里面有所谓「子图」。子图的位置是由坐标网格确定的，而「坐标轴」却不受此限制，可以放在图像的任意位置。我们已经隐式地使用过图像和子图：当我们调用 &lt;code&gt;plot&lt;/code&gt; 函数的时候，matplotlib 调用 &lt;code&gt;gca()&lt;/code&gt; 函数以及 &lt;code&gt;gcf()&lt;/code&gt; 函数来获取当前的坐标轴和图像；如果无法获取图像，则会调用 &lt;code&gt;figure()&lt;/code&gt; 函数来创建一个——严格地说，是用 &lt;code&gt;subplot(1,1,1)&lt;/code&gt; 创建一个只有一个子图的图像。&lt;/p&gt;
&lt;h4 id=&quot;图像&quot;&gt;&lt;a href=&quot;#图像&quot; class=&quot;headerlink&quot; title=&quot;图像&quot;&gt;&lt;/a&gt;图像&lt;/h4&gt;&lt;p&gt;所谓「图像」就是 GUI 里以「Figure #」为标题的那些窗口。图像编号从 1 开始，与 MATLAB 的风格一致，而于 Python 从 0 开始编号的风格不同。以下参数是图像的属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;num&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;图像的数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;figsize&lt;/td&gt;
&lt;td&gt;figure.figsize&lt;/td&gt;
&lt;td&gt;图像的长和宽（英寸）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dpi&lt;/td&gt;
&lt;td&gt;figure.dpi&lt;/td&gt;
&lt;td&gt;分辨率（点/英寸）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;facecolor&lt;/td&gt;
&lt;td&gt;figure.facecolor&lt;/td&gt;
&lt;td&gt;绘图区域的背景颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edgecolor&lt;/td&gt;
&lt;td&gt;figure.edgecolor&lt;/td&gt;
&lt;td&gt;绘图区域边缘的颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frameon&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;是否绘制图像边缘&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这些默认值可以在源文件中指明。不过除了图像数量这个参数，其余的参数都很少修改。&lt;/p&gt;
&lt;p&gt;你在图形界面中可以按下右上角的 X 来关闭窗口（OS X 系统是左上角）。Matplotlib 也提供了名为 &lt;code&gt;close&lt;/code&gt; 的函数来关闭这个窗口。&lt;code&gt;close&lt;/code&gt; 函数的具体行为取决于你提供的参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不传递参数：关闭当前窗口；&lt;/li&gt;
&lt;li&gt;传递窗口编号或窗口实例（instance）作为参数：关闭指定的窗口；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;all&lt;/code&gt;：关闭所有窗口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;和其他对象一样，你可以使用 &lt;code&gt;setp&lt;/code&gt; 或者是 &lt;code&gt;set_something&lt;/code&gt; 这样的方法来设置图像的属性。&lt;/p&gt;
&lt;h4 id=&quot;子图&quot;&gt;&lt;a href=&quot;#子图&quot; class=&quot;headerlink&quot; title=&quot;子图&quot;&gt;&lt;/a&gt;子图&lt;/h4&gt;&lt;p&gt;你可以用子图来将图样（plot）放在均匀的坐标网格中。用 &lt;code&gt;subplot&lt;/code&gt; 函数的时候，你需要指明网格的行列数量，以及你希望将图样放在哪一个网格区域中。此外，&lt;a href=&quot;http://matplotlib.sourceforge.net/users/gridspec.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;gridspec&lt;/code&gt;&lt;/a&gt; 的功能更强大，你也可以选择它来实现这个功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-horizontal.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/subplot-horizontal.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-vertical.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/subplot-vertical.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-grid.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/subplot-grid.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/gridspec.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/gridspec.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;坐标轴&quot;&gt;&lt;a href=&quot;#坐标轴&quot; class=&quot;headerlink&quot; title=&quot;坐标轴&quot;&gt;&lt;/a&gt;坐标轴&lt;/h4&gt;&lt;p&gt;坐标轴和子图功能类似，不过它可以放在图像的任意位置。因此，如果你希望在一副图中绘制一个小图，就可以用这个功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/axes.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/axes.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/axes-2.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/axes-2.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;记号&quot;&gt;&lt;a href=&quot;#记号&quot; class=&quot;headerlink&quot; title=&quot;记号&quot;&gt;&lt;/a&gt;记号&lt;/h4&gt;&lt;p&gt;良好的记号是图像的重要组成部分。Matplotlib 里的记号系统里的各个细节都是可以由用户个性化配置的。你可以用 Tick Locators 来指定在那些位置放置记号，用 Tick Formatters 来调整记号的样式。主要和次要的记号可以以不同的方式呈现。默认情况下，每一个次要的记号都是隐藏的，也就是说，默认情况下的次要记号列表是空的——&lt;code&gt;NullLocator&lt;/code&gt;。&lt;/p&gt;
&lt;h5 id=&quot;Tick-Locators&quot;&gt;&lt;a href=&quot;#Tick-Locators&quot; class=&quot;headerlink&quot; title=&quot;Tick Locators&quot;&gt;&lt;/a&gt;Tick Locators&lt;/h5&gt;&lt;p&gt;下面有为不同需求设计的一些 Locators。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NullLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No ticks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-NullLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-NullLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IndexLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Place a tick on every multiple of some base number of points plotted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-IndexLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-IndexLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FixedLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tick locations are fixed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-FixedLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-FixedLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LinearLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Determine the tick locations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-LinearLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-LinearLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MultipleLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set a tick on every integer that is multiple of some base.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-MultipleLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-MultipleLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AutoLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Select no more than n intervals at nice locations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-AutoLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-AutoLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LogLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Determine the tick locations for log axes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-LogLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-LogLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这些 Locators 都是 &lt;code&gt;matplotlib.ticker.Locator&lt;/code&gt; 的子类，你可以据此定义自己的 Locator。以日期为 ticks 特别复杂，因此 Matplotlib 提供了 &lt;code&gt;matplotlib.dates&lt;/code&gt; 来实现这一功能。&lt;/p&gt;
&lt;h3 id=&quot;其他类型的图&quot;&gt;&lt;a href=&quot;#其他类型的图&quot; class=&quot;headerlink&quot; title=&quot;其他类型的图&quot;&gt;&lt;/a&gt;其他类型的图&lt;/h3&gt;&lt;p&gt;接下来的内容是练习。请运用你学到的知识，从提供的代码开始，实现配图所示的效果。具体的答案可以点击配图下载。&lt;/p&gt;
&lt;h4 id=&quot;普通图&quot;&gt;&lt;a href=&quot;#普通图&quot; class=&quot;headerlink&quot; title=&quot;普通图&quot;&gt;&lt;/a&gt;普通图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for label in ax.get_xticklabels() + ax.get_yticklabels():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_fontsize(16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_bbox(dict(facecolor=&amp;apos;white&amp;apos;, edgecolor=&amp;apos;None&amp;apos;, alpha=0.65 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/plot_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/plot_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;散点图&quot;&gt;&lt;a href=&quot;#散点图&quot; class=&quot;headerlink&quot; title=&quot;散点图&quot;&gt;&lt;/a&gt;散点图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 1024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.random.normal(0,1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y = np.random.normal(0,1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scatter(X,Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/scatter_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/scatter_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;条形图&quot;&gt;&lt;a href=&quot;#条形图&quot; class=&quot;headerlink&quot; title=&quot;条形图&quot;&gt;&lt;/a&gt;条形图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.arange(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y1 = (1-X/float(n)) * np.random.uniform(0.5,1.0,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y2 = (1-X/float(n)) * np.random.uniform(0.5,1.0,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(X, +Y1, facecolor=&amp;apos;#9999ff&amp;apos;, edgecolor=&amp;apos;white&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(X, -Y2, facecolor=&amp;apos;#ff9999&amp;apos;, edgecolor=&amp;apos;white&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for x,y in zip(X,Y1):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text(x+0.4, y+0.05, &amp;apos;%.2f&amp;apos; % y, ha=&amp;apos;center&amp;apos;, va= &amp;apos;bottom&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(-1.25,+1.25)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/bar_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/bar_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;等高线图&quot;&gt;&lt;a href=&quot;#等高线图&quot; class=&quot;headerlink&quot; title=&quot;等高线图&quot;&gt;&lt;/a&gt;等高线图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def f(x,y): return (1-x/2+x**5+y**3)*np.exp(-x**2-y**2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = np.linspace(-3,3,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = np.linspace(-3,3,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X,Y = np.meshgrid(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;contourf(X, Y, f(X,Y), 8, alpha=.75, cmap=&amp;apos;jet&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C = contour(X, Y, f(X,Y), 8, colors=&amp;apos;black&amp;apos;, linewidth=.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/contour_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/contour_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;灰度图（Imshow）&quot;&gt;&lt;a href=&quot;#灰度图（Imshow）&quot; class=&quot;headerlink&quot; title=&quot;灰度图（Imshow）&quot;&gt;&lt;/a&gt;灰度图（Imshow）&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def f(x,y): return (1-x/2+x**5+y**3)*np.exp(-x**2-y**2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = np.linspace(-3,3,4*n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = np.linspace(-3,3,3*n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X,Y = np.meshgrid(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imshow(f(X,Y)), show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/imshow_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/imshow_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;饼状图&quot;&gt;&lt;a href=&quot;#饼状图&quot; class=&quot;headerlink&quot; title=&quot;饼状图&quot;&gt;&lt;/a&gt;饼状图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Z = np.random.uniform(0,1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pie(Z), show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/pie_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/pie_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;量场图（Quiver-Plots）&quot;&gt;&lt;a href=&quot;#量场图（Quiver-Plots）&quot; class=&quot;headerlink&quot; title=&quot;量场图（Quiver Plots）&quot;&gt;&lt;/a&gt;量场图（Quiver Plots）&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X,Y = np.mgrid[0:n,0:n]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quiver(X,Y), show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/quiver_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/quiver_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;网格&quot;&gt;&lt;a href=&quot;#网格&quot; class=&quot;headerlink&quot; title=&quot;网格&quot;&gt;&lt;/a&gt;网格&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes = gca()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_xlim(0,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_ylim(0,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_xticklabels([])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_yticklabels([])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/grid_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/grid_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;多重网格&quot;&gt;&lt;a href=&quot;#多重网格&quot; class=&quot;headerlink&quot; title=&quot;多重网格&quot;&gt;&lt;/a&gt;多重网格&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(2,2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(2,2,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(2,2,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/multiplot_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/multiplot_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;极轴图&quot;&gt;&lt;a href=&quot;#极轴图&quot; class=&quot;headerlink&quot; title=&quot;极轴图&quot;&gt;&lt;/a&gt;极轴图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes([0,0,1,1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N = 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theta = np.arange(0.0, 2*np.pi, 2*np.pi/N)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radii = 10*np.random.rand(N)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;width = np.pi/4*np.random.rand(N)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bars = bar(theta, radii, width=width, bottom=0.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for r,bar in zip(radii, bars):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bar.set_facecolor( cm.jet(r/10.))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bar.set_alpha(0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/polar_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/polar_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;3D-图&quot;&gt;&lt;a href=&quot;#3D-图&quot; class=&quot;headerlink&quot; title=&quot;3D 图&quot;&gt;&lt;/a&gt;3D 图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from mpl_toolkits.mplot3d import Axes3D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fig = figure()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax = Axes3D(fig)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.arange(-4, 4, 0.25)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y = np.arange(-4, 4, 0.25)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X, Y = np.meshgrid(X, Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;R = np.sqrt(X**2 + Y**2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Z = np.sin(R)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=&amp;apos;hot&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/plot3d_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/plot3d_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;手稿&quot;&gt;&lt;a href=&quot;#手稿&quot; class=&quot;headerlink&quot; title=&quot;手稿&quot;&gt;&lt;/a&gt;手稿&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/text_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/text_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;结束篇&quot;&gt;&lt;a href=&quot;#结束篇&quot; class=&quot;headerlink&quot; title=&quot;结束篇&quot;&gt;&lt;/a&gt;结束篇&lt;/h3&gt;&lt;p&gt;Matplotlib 能有今天这样强大的功能和广泛的使用得益于大量的文档和社区开发者。这里提供一些有益的链接。&lt;/p&gt;
&lt;h4 id=&quot;入门教程&quot;&gt;&lt;a href=&quot;#入门教程&quot; class=&quot;headerlink&quot; title=&quot;入门教程&quot;&gt;&lt;/a&gt;入门教程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/pyplot_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pyplot tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/image_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Image tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/index_text.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Text tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/artists.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Artist tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/path_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Path tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/transforms_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Transforms tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Matplotlib-文档&quot;&gt;&lt;a href=&quot;#Matplotlib-文档&quot; class=&quot;headerlink&quot; title=&quot;Matplotlib 文档&quot;&gt;&lt;/a&gt;Matplotlib 文档&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/faq/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常见问题及回答&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/screenshots.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;截屏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;随代码分发的文档&quot;&gt;&lt;a href=&quot;#随代码分发的文档&quot; class=&quot;headerlink&quot; title=&quot;随代码分发的文档&quot;&gt;&lt;/a&gt;随代码分发的文档&lt;/h4&gt;&lt;p&gt;Matplotlib 的代码是自文档（Self-documented）的。你可以在 Python 中快速查询某个命令的用法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; help(plot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Help on function plot in module matplotlib.pyplot:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(*args, **kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Plot lines and/or markers to the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   :class:`~matplotlib.axes.Axes`.  *args* is a variable length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   argument, allowing for multiple *x*, *y* pairs with an&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   optional format string.  For example, each of the following is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   legal::&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(x, y)         # plot x and y using default line style and color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(x, y, &amp;apos;bo&amp;apos;)   # plot x and y using blue circle markers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(y)            # plot y using x as index array 0..N-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(y, &amp;apos;r+&amp;apos;)      # ditto, but with red plusses&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   If *x* and/or *y* is 2-dimensional, then the corresponding columns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   will be plotted.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;画廊&quot;&gt;&lt;a href=&quot;#画廊&quot; class=&quot;headerlink&quot; title=&quot;画廊&quot;&gt;&lt;/a&gt;画廊&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/gallery.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matplotlib 画廊&lt;/a&gt; 也非常有用。其中的例子都有配图和对应的代码，当你不知道某一个效果如何实现的时候，你可以在这里找找。&lt;/p&gt;
&lt;p&gt;哦，这里还有一个&lt;a href=&quot;http://www.loria.fr/~rougier/coding/gallery/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小一点的画廊&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;邮件列表&quot;&gt;&lt;a href=&quot;#邮件列表&quot; class=&quot;headerlink&quot; title=&quot;邮件列表&quot;&gt;&lt;/a&gt;邮件列表&lt;/h4&gt;&lt;p&gt;你可以在&lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/matplotlib-users&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户邮件列表&lt;/a&gt;提问，或者在&lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/matplotlib-devel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者邮件列表&lt;/a&gt;里交流技术。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注：邮件列表是一个很正式的交流平台，其内的每一封邮件，列表的收听者都会看到，所以请不要在邮件列表灌水或发表质量低劣的文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;快速查询&quot;&gt;&lt;a href=&quot;#快速查询&quot; class=&quot;headerlink&quot; title=&quot;快速查询&quot;&gt;&lt;/a&gt;快速查询&lt;/h4&gt;&lt;p&gt;你可以在&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/#id12&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;找到 Matplotlib 主要的属性表，以便按照需求个性化配置你的输出图样。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://www.labri.fr/perso/nrougier/teaching/matplotlib/&quot;&gt;Matplotlib tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/&quot;&gt;Matplotlib 教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Matplotlib 可能是 Python 2D-绘图领域使用最广泛的套件。它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。这里将会探索 matplotlib 的常见用法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="matplotlib" scheme="http://it-ebooks.flygon.net/tags/matplotlib/"/>
    
      <category term="科学计算" scheme="http://it-ebooks.flygon.net/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>试验性 Numpy 教程</title>
    <link href="http://it-ebooks.flygon.net/%E8%AF%95%E9%AA%8C%E6%80%A7-numpy-%E6%95%99%E7%A8%8B/"/>
    <id>http://it-ebooks.flygon.net/试验性-numpy-教程/</id>
    <published>2016-03-14T02:45:44.000Z</published>
    <updated>2016-03-14T02:45:53.555Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://scipy.org/Tentative_NumPy_Tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tentative NumPy Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://reverland.org/python/2012/08/22/numpy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;试验性NumPy教程(译)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;先决条件&quot;&gt;&lt;a href=&quot;#先决条件&quot; class=&quot;headerlink&quot; title=&quot;先决条件&quot;&gt;&lt;/a&gt;先决条件&lt;/h2&gt;&lt;p&gt;在阅读这个教程之前，你多少需要知道点python。如果你想重新回忆下，请看看&lt;a href=&quot;http://docs.python.org/tut/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;如果你想要运行教程中的示例，你至少需要在你的电脑上安装了以下一些软件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.python.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://numpy.scipy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些是可能对你有帮助的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ipython.scipy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ipython&lt;/a&gt;是一个净强化的交互Python Shell，对探索NumPy的特性非常方便。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;matplotlib&lt;/a&gt;将允许你绘图&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scipy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scipy&lt;/a&gt;在NumPy的基础上提供了很多科学模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h2&gt;&lt;p&gt;NumPy的主要对象是同种元素的多维数组。这是一个所有的元素都是一种类型、通过一个正整数元组索引的元素表格(通常是元素是数字)。在NumPy中维度(dimensions)叫做轴(axes)，轴的个数叫做秩(rank)。&lt;/p&gt;
&lt;p&gt;例如，在3D空间一个点的坐标&lt;code&gt;[1, 2, 3]&lt;/code&gt;是一个秩为1的数组，因为它只有一个轴。那个轴长度为3.又例如，在以下例子中，数组的秩为2(它有两个维度).第一个维度长度为2,第二个维度长度为3.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[ 1., 0., 0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 0., 1., 2.]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;NumPy的数组类被称作&lt;em&gt;ndarray&lt;/em&gt;。通常被称作数组。注意numpy.array和标准Python库类array.array并不相同，后者只处理一维数组和提供少量功能。更多重要ndarray对象属性有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ndarray.ndim&lt;/p&gt;
&lt;p&gt;数组轴的个数，在python的世界中，轴的个数被称作秩&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.shape&lt;/p&gt;
&lt;p&gt;数组的维度。这是一个指示数组在每个维度上大小的整数元组。例如一个n排m列的矩阵，它的shape属性将是(2,3),这个元组的长度显然是秩，即维度或者ndim属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.size&lt;/p&gt;
&lt;p&gt;数组元素的总个数，等于shape属性中元组元素的乘积。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.dtype&lt;/p&gt;
&lt;p&gt;一个用来描述数组中元素类型的对象，可以通过创造或指定dtype使用标准Python类型。另外NumPy提供它自己的数据类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.itemsize&lt;/p&gt;
&lt;p&gt;数组中每个元素的字节大小。例如，一个元素类型为float64的数组itemsiz属性值为8(=64/8),又如，一个元素类型为complex32的数组item属性为4(=32/8).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.data&lt;/p&gt;
&lt;p&gt;包含实际数组元素的缓冲区，通常我们不需要使用这个属性，因为我们总是通过索引来使用数组中的元素。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;一个例子-1-在python的交互环境或ipython中&quot;&gt;&lt;a href=&quot;#一个例子-1-在python的交互环境或ipython中&quot; class=&quot;headerlink&quot; title=&quot;一个例子[1](在python的交互环境或ipython中)&quot;&gt;&lt;/a&gt;一个例子[1](在python的交互环境或ipython中)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy  import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(15).reshape(3, 5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3,  4],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5,  6,  7,  8,  9],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11, 12, 13, 14]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.ndim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;int32&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.itemsize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numpy.ndarray&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array([6, 7, 8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([6, 7, 8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numpy.ndarray&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建数组&quot;&gt;&lt;a href=&quot;#创建数组&quot; class=&quot;headerlink&quot; title=&quot;创建数组&quot;&gt;&lt;/a&gt;创建数组&lt;/h3&gt;&lt;p&gt;有好几种创建数组的方法。&lt;/p&gt;
&lt;p&gt;例如，你可以使用&lt;code&gt;array&lt;/code&gt;函数从常规的Python列表和元组创造数组。所创建的数组类型由原序列中的元素类型推导而来。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy  import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array( [2,3,4] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([2, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.dtype&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dtype(&amp;apos;int32&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array([1.2, 3.5, 5.1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.dtype&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dtype(&amp;apos;float64&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个常见的错误包括用多个数值参数调用&lt;code&gt;array&lt;/code&gt;而不是提供一个由数值组成的列表作为一个参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array(1,2,3,4)    # WRONG&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array([1,2,3,4])  # RIGHT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组将序列包含序列转化成二维的数组，序列包含序列包含序列转化成三维数组等等。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array( [ (1.5,2,3), (4,5,6) ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.5,  2. ,  3. ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4. ,  5. ,  6. ]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组类型可以在创建时显示指定&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = array( [ [1,2], [3,4] ], dtype=complex )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.+0.j,  2.+0.j],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.+0.j,  4.+0.j]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通常，数组的元素开始都是未知的，但是它的大小已知。因此，NumPy提供了一些使用占位符创建数组的函数。这最小化了扩展数组的需要和高昂的运算代价。&lt;/p&gt;
&lt;p&gt;函数&lt;code&gt;function&lt;/code&gt;创建一个全是0的数组，函数&lt;code&gt;ones&lt;/code&gt;创建一个全1的数组，函数&lt;code&gt;empty&lt;/code&gt;创建一个内容随机并且依赖与内存状态的数组。默认创建的数组类型(dtype)都是float64。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zeros( (3,4) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[0.,  0.,  0.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0.,  0.,  0.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0.,  0.,  0.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ones( (2,3,4), dtype=int16 )                # dtype can also be specified&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1]]], dtype=int16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; empty( (2,3) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[  3.73603959e-262,   6.02658058e-154,   6.55490914e-260],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [  5.30498948e-313,   3.14673309e-307,   1.00000000e+000]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了创建一个数列，NumPy提供一个类似arange的函数返回数组而不是列表:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; arange( 10, 30, 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([10, 15, 20, 25])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; arange( 0, 2, 0.3 )                 # it accepts float arguments&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0. ,  0.3,  0.6,  0.9,  1.2,  1.5,  1.8])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当&lt;code&gt;arange&lt;/code&gt;使用浮点数参数时，由于有限的浮点数精度，通常无法预测获得的元素个数。因此，最好使用函数&lt;code&gt;linspace&lt;/code&gt;去接收我们想要的元素个数来代替用range来指定步长。&lt;/p&gt;
&lt;p&gt;其它函数array, zeros, zeros_like, ones, ones_like, empty, empty_like, arange, linspace, rand, randn, fromfunction, fromfile参考：&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;打印数组&quot;&gt;&lt;a href=&quot;#打印数组&quot; class=&quot;headerlink&quot; title=&quot;打印数组&quot;&gt;&lt;/a&gt;打印数组&lt;/h3&gt;&lt;p&gt;当你打印一个数组，NumPy以类似嵌套列表的形式显示它，但是呈以下布局：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最后的轴从左到右打印&lt;/li&gt;
&lt;li&gt;次后的轴从顶向下打印&lt;/li&gt;
&lt;li&gt;剩下的轴从顶向下打印，每个切片通过一个空行与下一个隔开&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一维数组被打印成行，二维数组成矩阵，三维数组成矩阵列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(6)                         # 1d array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0 1 2 3 4 5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = arange(12).reshape(4,3)           # 2d array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 3  4  5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 6  7  8]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = arange(24).reshape(2,3,4)         # 3d array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [[12 13 14 15]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [16 17 18 19]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [20 21 22 23]]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看形状操作一节获得有关reshape的更多细节&lt;/p&gt;
&lt;p&gt;如果一个数组用来打印太大了，NumPy自动省略中间部分而只打印角落&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print arange(10000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[   0    1    2 ..., 9997 9998 9999]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print arange(10000).reshape(100,100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[   0    1    2 ...,   97   98   99]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 100  101  102 ...,  197  198  199]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 200  201  202 ...,  297  298  299]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ...,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9700 9701 9702 ..., 9797 9798 9799]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9800 9801 9802 ..., 9897 9898 9899]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9900 9901 9902 ..., 9997 9998 9999]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;禁用NumPy的这种行为并强制打印整个数组，你可以设置printoptions参数来更改打印选项。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; set_printoptions(threshold=&amp;apos;nan&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;基本运算&quot;&gt;&lt;a href=&quot;#基本运算&quot; class=&quot;headerlink&quot; title=&quot;基本运算&quot;&gt;&lt;/a&gt;基本运算&lt;/h3&gt;&lt;p&gt;数组的算术运算是按元素的。新的数组被创建并且被结果填充。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array( [20,30,40,50] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = arange( 4 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 2, 3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([20, 29, 38, 47])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b**2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 4, 9])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 10*sin(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 9.12945251, -9.88031624,  7.4511316 , -2.62374854])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&amp;lt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([True, True, False, False], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不像许多矩阵语言，NumPy中的乘法运算符&lt;code&gt;*&lt;/code&gt;指示按元素计算，矩阵乘法可以使用&lt;code&gt;dot&lt;/code&gt;函数或创建矩阵对象实现(参见教程中的矩阵章节)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A = array( [[1,1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             [0,1]] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; B = array( [[2,0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             [3,4]] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A*B                         # elementwise product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[2, 0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0, 4]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dot(A,B)                    # matrix product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[5, 4],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [3, 4]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有些操作符像&lt;code&gt;+=&lt;/code&gt;和&lt;code&gt;*=&lt;/code&gt;被用来更改已存在数组而不创建一个新的数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = ones((2,3), dtype=int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = random.random((2,3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a *= 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[3, 3, 3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [3, 3, 3]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b += a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 3.69092703,  3.8324276 ,  3.0114541 ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.18679111,  3.3039349 ,  3.37600289]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a += b                                  # b is converted to integer type&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[6, 6, 6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [6, 6, 6]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当运算的是不同类型的数组时，结果数组和更普遍和精确的已知(这种行为叫做upcast)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = ones(3, dtype=int32)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = linspace(0,pi,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;float64&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1.        ,  2.57079633,  4.14159265])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;float64&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d = exp(c*1j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0.54030231+0.84147098j, -0.84147098+0.54030231j,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       -0.54030231-0.84147098j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;complex128&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;许多非数组运算，如计算数组所有元素之和，被作为ndarray类的方法实现&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = random.random((2,3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0.6903007 ,  0.39168346,  0.16524769],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.48819875,  0.77188505,  0.94792155]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.sum()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.4552372100521485&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.min()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.16524768654743593&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.max()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.9479215542670073&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这些运算默认应用到数组好像它就是一个数字组成的列表，无关数组的形状。然而，指定&lt;code&gt;axis&lt;/code&gt;参数你可以吧运算应用到数组指定的轴上：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.sum(axis=0)                            # sum of each column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([12, 15, 18, 21])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.min(axis=1)                            # min of each row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 4, 8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.cumsum(axis=1)                         # cumulative sum along each row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  3,  6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  9, 15, 22],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8, 17, 27, 38]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;通用函数-ufunc&quot;&gt;&lt;a href=&quot;#通用函数-ufunc&quot; class=&quot;headerlink&quot; title=&quot;通用函数(ufunc)&quot;&gt;&lt;/a&gt;通用函数(ufunc)&lt;/h3&gt;&lt;p&gt;NumPy提供常见的数学函数如&lt;code&gt;sin&lt;/code&gt;,&lt;code&gt;cos&lt;/code&gt;和&lt;code&gt;exp&lt;/code&gt;。在NumPy中，这些叫作“通用函数”(ufunc)。在NumPy里这些函数作用按数组的元素运算，产生一个数组作为输出。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; B = arange(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; exp(B)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1.        ,  2.71828183,  7.3890561 ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; sqrt(B)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0.        ,  1.        ,  1.41421356])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; C = array([2., -1., 4.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; add(B, C)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 2.,  0.,  6.])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多函数all, alltrue, any, apply along axis, argmax, argmin, argsort, average, bincount, ceil, clip, conj, conjugate, corrcoef, cov, cross, cumprod, cumsum, diff, dot, floor, inner, inv, lexsort, max, maximum, mean, median, min, minimum, nonzero, outer, prod, re, round, sometrue, sort, std, sum, trace, transpose, var, vdot, vectorize, where 参见:&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;索引，切片和迭代&quot;&gt;&lt;a href=&quot;#索引，切片和迭代&quot; class=&quot;headerlink&quot; title=&quot;索引，切片和迭代&quot;&gt;&lt;/a&gt;索引，切片和迭代&lt;/h3&gt;&lt;p&gt;&lt;em&gt;一维&lt;/em&gt;数组可以被索引、切片和迭代，就像&lt;a href=&quot;http://docs.python.org/tutorial/introduction.html#SECTION005140000000000000000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;列表&lt;/a&gt;和其它Python序列。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(10)**3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  0,   1,   8,  27,  64, 125, 216, 343, 512, 729])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[2:5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 8, 27, 64])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:6:2] = -1000    # equivalent to a[0:6:2] = -1000; from start to position 6, exclusive, set every 2nd element to -1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([-1000,     1, -1000,    27, -1000,   125,   216,   343,   512,   729])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[ : :-1]                                 # reversed a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  729,   512,   343,   216,   125, -1000,    27, -1000,     1, -1000])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for i in a:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         print i**(1/3.),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nan 1.0 nan 3.0 nan 5.0 6.0 7.0 8.0 9.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;多维&lt;/em&gt;数组可以每个轴有一个索引。这些索引由一个逗号分割的元组给出。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def f(x,y):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         return 10*x+y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = fromfunction(f,(5,4),dtype=int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11, 12, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [20, 21, 22, 23],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [30, 31, 32, 33],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [40, 41, 42, 43]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[0:5, 1]                       # each row in the second column of b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1, 11, 21, 31, 41])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[ : ,1]                        # equivalent to the previous example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1, 11, 21, 31, 41])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[1:3, : ]                      # each column in the second and third row of b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[10, 11, 12, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [20, 21, 22, 23]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当少于轴数的索引被提供时，确失的索引被认为是整个切片：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[-1]                                  # the last row. Equivalent to b[-1,:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([40, 41, 42, 43])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;b[i]&lt;/code&gt;中括号中的表达式被当作&lt;code&gt;i&lt;/code&gt;和一系列&lt;code&gt;:&lt;/code&gt;，来代表剩下的轴。NumPy也允许你使用“点”像&lt;code&gt;b[i,...]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;点&lt;/em&gt;(…)代表许多产生一个完整的索引元组必要的分号。如果x是秩为5的数组(即它有5个轴)，那么:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x[1,2,…] 等同于 x[1,2,:,:,:],&lt;/li&gt;
&lt;li&gt;x[…,3] 等同于 x[:,:,:,:,3]&lt;/li&gt;
&lt;li&gt;x[4,…,5,:] 等同 x[4,:,:,5,:].&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--?0--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = array( [ [[  0,  1,  2],      # a 3D array (two stacked 2D arrays)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               [ 10, 12, 13]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              [[100,101,102],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               [110,112,113]] ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 2, 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c[1,...]                          # same as c[1,:,:] or c[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[100, 101, 102],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [110, 112, 113]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c[...,2]                          # same as c[:,:,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[  2,  13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [102, 113]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;迭代&lt;/em&gt;多维数组是就第一个轴而言的:[2](0轴)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for row in b:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         print row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0 1 2 3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[10 11 12 13]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[20 21 22 23]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[30 31 32 33]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[40 41 42 43]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，如果一个人想对每个数组中元素进行运算，我们可以使用flat属性，该属性是数组元素的一个迭代器:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for element in b.flat:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         print element,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 1 2 3 10 11 12 13 20 21 22 23 30 31 32 33 40 41 42 43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多[], …, newaxis, ndenumerate, indices, index exp 参考&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;形状操作&quot;&gt;&lt;a href=&quot;#形状操作&quot; class=&quot;headerlink&quot; title=&quot;形状操作&quot;&gt;&lt;/a&gt;形状操作&lt;/h2&gt;&lt;h3 id=&quot;更改数组的形状&quot;&gt;&lt;a href=&quot;#更改数组的形状&quot; class=&quot;headerlink&quot; title=&quot;更改数组的形状&quot;&gt;&lt;/a&gt;更改数组的形状&lt;/h3&gt;&lt;p&gt;一个数组的形状由它每个轴上的元素个数给出：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = floor(10*random.random((3,4)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  5.,  9.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  2.,  7.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  8.,  3.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个数组的形状可以被多种命令修改：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.ravel() # flatten the array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 7.,  5.,  9.,  3.,  7.,  2.,  7.,  8.,  6.,  8.,  3.,  2.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape = (6, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.transpose()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  9.,  7.,  7.,  6.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  3.,  2.,  8.,  8.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由&lt;code&gt;ravel()&lt;/code&gt;展平的数组元素的顺序通常是“C风格”的，就是说，最右边的索引变化得最快，所以元素a[0,0]之后是a[0,1]。如果数组被改变形状(reshape)成其它形状，数组仍然是“C风格”的。NumPy通常创建一个以这个顺序保存数据的数组，所以&lt;code&gt;ravel()&lt;/code&gt;将总是不需要复制它的参数[3](即self，它自己)。但是如果数组是通过切片其它数组或有不同寻常的选项时，它可能需要被复制。函数&lt;code&gt;reshape()&lt;/code&gt;和&lt;code&gt;ravel()&lt;/code&gt;还可以被同过一些可选参数构建成FORTRAN风格的数组，即最左边的索引变化最快。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reshape&lt;/code&gt;函数改变参数形状并返回它，而&lt;code&gt;resize&lt;/code&gt;函数改变数组自身。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  5.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.resize((2,6))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  5.,  9.,  3.,  7.,  2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  8.,  6.,  8.,  3.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果在改变形状操作中一个维度被给做-1，其维度将自动被计算&lt;/p&gt;
&lt;p&gt;更多 shape, reshape, resize, ravel 参考&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;组合-stack-不同的数组&quot;&gt;&lt;a href=&quot;#组合-stack-不同的数组&quot; class=&quot;headerlink&quot; title=&quot;组合(stack)不同的数组&quot;&gt;&lt;/a&gt;组合(stack)不同的数组&lt;/h3&gt;&lt;p&gt;几种方法可以沿不同轴将数组堆叠在一起：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = floor(10*random.random((2,2)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = floor(10*random.random((2,2)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; vstack((a,b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hstack((a,b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.,  3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.,  6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数&lt;code&gt;column_stack&lt;/code&gt;以列将一维数组合成二维数组，它等同与&lt;code&gt;vstack&lt;/code&gt;对一维数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; column_stack((a,b))   # With 2D arrays&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.,  3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.,  6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=array([4.,2.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=array([2.,8.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:,newaxis]  # This allows to have a 2D columns vector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; column_stack((a[:,newaxis],b[:,newaxis]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4.,  2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.,  8.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; vstack((a[:,newaxis],b[:,newaxis])) # The behavior of vstack is different&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;row_stack&lt;/code&gt;函数，另一方面，将一维数组以行组合成二维数组。&lt;/p&gt;
&lt;p&gt;对那些维度比二维更高的数组，&lt;code&gt;hstack&lt;/code&gt;沿着第二个轴组合，&lt;code&gt;vstack&lt;/code&gt;沿着第一个轴组合,&lt;code&gt;concatenate&lt;/code&gt;允许可选参数给出组合时沿着的轴。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在复杂情况下，&lt;code&gt;r_[]&lt;/code&gt;和&lt;code&gt;c_[]&lt;/code&gt;对创建沿着一个方向组合的数很有用，它们允许范围符号(“:”):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; r_[1:4,0,4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([1, 2, 3, 0, 4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当使用数组作为参数时，&lt;code&gt;r_&lt;/code&gt;和&lt;code&gt;c_&lt;/code&gt;的默认行为和&lt;code&gt;vstack&lt;/code&gt;和&lt;code&gt;hstack&lt;/code&gt;很像，但是允许可选的参数给出组合所沿着的轴的代号。&lt;/p&gt;
&lt;p&gt;更多函数hstack , vstack, column_stack , row&lt;em&gt;stack , concatenate , c&lt;/em&gt; , r_&lt;br&gt;参见&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;将一个数组分割-split-成几个小数组&quot;&gt;&lt;a href=&quot;#将一个数组分割-split-成几个小数组&quot; class=&quot;headerlink&quot; title=&quot;将一个数组分割(split)成几个小数组&quot;&gt;&lt;/a&gt;将一个数组分割(split)成几个小数组&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;hsplit&lt;/code&gt;你能将数组沿着它的水平轴分割，或者指定返回相同形状数组的个数，或者指定在哪些列后发生分割:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = floor(10*random.random((2,12)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 8.,  8.,  3.,  9.,  0.,  4.,  3.,  0.,  0.,  6.,  4.,  4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  3.,  2.,  9.,  6.,  0.,  4.,  5.,  7.,  5.,  1.,  4.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hsplit(a,3)   # Split a into 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[array([[ 8.,  8.,  3.,  9.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  3.,  2.,  9.]]), array([[ 0.,  4.,  3.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.,  4.,  5.]]), array([[ 0.,  6.,  4.,  4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  5.,  1.,  4.]])]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hsplit(a,(3,4))   # Split a after the third and the fourth column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[array([[ 8.,  8.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  3.,  2.]]), array([[ 9.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9.]]), array([[ 0.,  4.,  3.,  0.,  0.,  6.,  4.,  4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.,  4.,  5.,  7.,  5.,  1.,  4.]])]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;vsplit&lt;/code&gt;沿着纵向的轴分割，&lt;code&gt;array split&lt;/code&gt;允许指定沿哪个轴分割。&lt;/p&gt;
&lt;h2 id=&quot;复制和视图&quot;&gt;&lt;a href=&quot;#复制和视图&quot; class=&quot;headerlink&quot; title=&quot;复制和视图&quot;&gt;&lt;/a&gt;复制和视图&lt;/h2&gt;&lt;p&gt;当运算和处理数组时，它们的数据有时被拷贝到新的数组有时不是。这通常是新手的困惑之源。这有三种情况:&lt;/p&gt;
&lt;h3 id=&quot;完全不拷贝&quot;&gt;&lt;a href=&quot;#完全不拷贝&quot; class=&quot;headerlink&quot; title=&quot;完全不拷贝&quot;&gt;&lt;/a&gt;完全不拷贝&lt;/h3&gt;&lt;p&gt;简单的赋值不拷贝数组对象或它们的数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = a            # no new object is created&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b is a           # a and b are two names for the same ndarray object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.shape = 3,4    # changes the shape of a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Python 传递不定对象作为参考[4](形参)，所以函数调用不拷贝数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def f(x):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print id(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; id(a)                           # id is a unique identifier of an object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148293216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; f(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148293216&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;视图-view-和浅复制&quot;&gt;&lt;a href=&quot;#视图-view-和浅复制&quot; class=&quot;headerlink&quot; title=&quot;视图(view)和浅复制&quot;&gt;&lt;/a&gt;视图(view)和浅复制&lt;/h3&gt;&lt;p&gt;不同的数组对象分享同一个数据。视图方法创造一个新的数组对象指向同一数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = a.view()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c is a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.base is a                        # c is a view of the data owned by a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.flags.owndata&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.shape = 2,6                      # a&amp;apos;s shape doesn&amp;apos;t change&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c[0,4] = 1234                      # a&amp;apos;s data changes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[   0,    1,    2,    3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [1234,    5,    6,    7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [   8,    9,   10,   11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;切片数组返回它的一个视图：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = a[ : , 1:3]     # spaces added for clarity; could also be written &amp;quot;s = a[:,1:3]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s[:] = 10           # s[:] is a view of s. Note the difference between s=10 and s[:]=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[   0,   10,   10,    3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [1234,   10,   10,    7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [   8,   10,   10,   11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;深复制&quot;&gt;&lt;a href=&quot;#深复制&quot; class=&quot;headerlink&quot; title=&quot;深复制&quot;&gt;&lt;/a&gt;深复制&lt;/h2&gt;&lt;p&gt;这个复制方法完全复制数组和它的数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d = a.copy()                          # a new array object with new data is created&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d is a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d.base is a                           # d doesn&amp;apos;t share anything with a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d[0,0] = 9999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[   0,   10,   10,    3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [1234,   10,   10,    7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [   8,   10,   10,   11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;函数和方法-method-总览&quot;&gt;&lt;a href=&quot;#函数和方法-method-总览&quot; class=&quot;headerlink&quot; title=&quot;函数和方法(method)总览&quot;&gt;&lt;/a&gt;函数和方法(method)总览&lt;/h3&gt;&lt;p&gt;这是个NumPy函数和方法分类排列目录。这些名字链接到&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;,你可以看到这些函数起作用。[5](0轴)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;创建数组&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;arange, array, copy, empty, empty_like, eye, fromfile, fromfunction, identity, linspace, logspace, mgrid, ogrid, ones, ones_like, r , zeros, zeros_like&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;转化&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;astype, atleast 1d, atleast 2d, atleast 3d, mat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;操作&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;array split, column stack, concatenate, diagonal, dsplit, dstack, hsplit, hstack, item, newaxis, ravel, repeat, reshape, resize, squeeze, swapaxes, take, transpose, vsplit, vstack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;询问&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;all, any, nonzero, where&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;排序&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;argmax, argmin, argsort, max, min, ptp, searchsorted, sort&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;运算&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;choose, compress, cumprod, cumsum, inner, fill, imag, prod, put, putmask, real, sum&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;基本统计&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cov, mean, std, var&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;基本线性代数&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cross, dot, outer, svd, vdot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;进阶&quot;&gt;&lt;a href=&quot;#进阶&quot; class=&quot;headerlink&quot; title=&quot;进阶&quot;&gt;&lt;/a&gt;进阶&lt;/h2&gt;&lt;h3 id=&quot;广播法则-rule&quot;&gt;&lt;a href=&quot;#广播法则-rule&quot; class=&quot;headerlink&quot; title=&quot;广播法则(rule)&quot;&gt;&lt;/a&gt;广播法则(rule)&lt;/h3&gt;&lt;p&gt;广播法则能使通用函数有意义地处理不具有相同形状的输入。&lt;/p&gt;
&lt;p&gt;广播第一法则是，如果所有的输入数组维度不都相同，一个“1”将被重复地添加在维度较小的数组上直至所有的数组拥有一样的维度。&lt;/p&gt;
&lt;p&gt;广播第二法则确定长度为1的数组沿着特殊的方向表现地好像它有沿着那个方向最大形状的大小。对数组来说，沿着那个维度的数组元素的值理应相同。&lt;/p&gt;
&lt;p&gt;应用广播法则之后，所有数组的大小必须匹配。更多细节可以从这个&lt;a href=&quot;http://scipy.org/EricsBroadcastingDoc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;找到。&lt;/p&gt;
&lt;h2 id=&quot;花哨的索引和索引技巧&quot;&gt;&lt;a href=&quot;#花哨的索引和索引技巧&quot; class=&quot;headerlink&quot; title=&quot;花哨的索引和索引技巧&quot;&gt;&lt;/a&gt;花哨的索引和索引技巧&lt;/h2&gt;&lt;p&gt;NumPy比普通Python序列提供更多的索引功能。除了索引整数和切片，正如我们之前看到的，数组可以被整数数组和布尔数组索引。&lt;/p&gt;
&lt;h3 id=&quot;通过数组索引&quot;&gt;&lt;a href=&quot;#通过数组索引&quot; class=&quot;headerlink&quot; title=&quot;通过数组索引&quot;&gt;&lt;/a&gt;通过数组索引&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12)**2                          # the first 12 square numbers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; i = array( [ 1,1,3,8,5 ] )                 # an array of indices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[i]                                       # the elements of a at the positions i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1,  1,  9, 64, 25])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; j = array( [ [ 3, 4], [ 9, 7 ] ] )         # a bidimensional array of indices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[j]                                       # the same shape as j&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 9, 16],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [81, 49]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当被索引数组a是多维的时，每一个唯一的索引数列指向a的第一维[5](0轴)。以下示例通过将图片标签用调色版转换成色彩图像展示了这种行为。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; palette = array( [ [0,0,0],                # black&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [255,0,0],              # red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [0,255,0],              # green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [0,0,255],              # blue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [255,255,255] ] )       # white&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; image = array( [ [ 0, 1, 2, 0 ],           # each value corresponds to a color in the palette&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                  [ 0, 3, 4, 0 ]  ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; palette[image]                            # the (2,4,3) color image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[  0,   0,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [255,   0,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0, 255,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0,   0,   0]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[  0,   0,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0,   0, 255],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [255, 255, 255],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0,   0,   0]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们也可以给出不不止一维的索引，每一维的索引数组必须有相同的形状。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; i = array( [ [0,1],                        # indices for the first dim of a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              [1,2] ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; j = array( [ [2,1],                        # indices for the second dim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              [3,3] ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[i,j]                                     # i and j must have equal shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[i,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6, 10]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:,j]                                     # i.e., a[ : , j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[ 2,  1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 3,  3]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[ 6,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 7,  7]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[10,  9],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [11, 11]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自然，我们可以把i和j放到序列中(比如说列表)然后通过list索引。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; l = [i,j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[l]                                       # equivalent to a[i,j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，我们不能把i和j放在一个数组中，因为这个数组将被解释成索引a的第一维。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = array( [i,j] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[s]                                       # not what we want&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IndexError                                Traceback (most recent call last)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ipython-input-100-b912f631cc75&amp;gt; in &amp;lt;module&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----&amp;gt; 1 a[s]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IndexError: index (3) out of range (0&amp;lt;=index&amp;lt;2) in dimension 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[tuple(s)]                                # same as a[i,j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一个常用的数组索引用法是搜索时间序列最大值[6](我也不知道在翻译什么了……)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time = linspace(20, 145, 5)                 # time scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data = sin(arange(20)).reshape(5,4)         # 4 time-dependent series&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  20.  ,   51.25,   82.5 ,  113.75,  145.  ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0.        ,  0.84147098,  0.90929743,  0.14112001],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [-0.7568025 , -0.95892427, -0.2794155 ,  0.6569866 ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.98935825,  0.41211849, -0.54402111, -0.99999021],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [-0.53657292,  0.42016704,  0.99060736,  0.65028784],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [-0.28790332, -0.96139749, -0.75098725,  0.14987721]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ind = data.argmax(axis=0)                   # index of the maxima for each series&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ind&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([2, 0, 3, 1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time_max = time[ ind]                       # times corresponding to the maxima&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data_max = data[ind, xrange(data.shape[1])] # =&amp;gt; data[ind[0],0], data[ind[1],1]...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time_max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  82.5 ,   20.  ,  113.75,   51.25])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data_max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0.98935825,  0.84147098,  0.99060736,  0.6569866 ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; all(data_max == data.max(axis=0))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也可以使用数组索引作为目标来赋值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 2, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[[1,3,4]] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 0, 2, 0, 0])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，当一个索引列表包含重复时，赋值被多次完成，保留最后的值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[[0,0,2]]=[1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([2, 1, 3, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这足够合理，但是小心如果你想用Python的&lt;code&gt;+=&lt;/code&gt;结构，可能结果并非你所期望：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[[0,0,2]]+=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([1, 1, 3, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即使0在索引列表中出现两次，索引为0的元素仅仅增加一次。这是因为Python要求&lt;code&gt;a+=1&lt;/code&gt;和&lt;code&gt;a=a+1&lt;/code&gt;等同。&lt;/p&gt;
&lt;h3 id=&quot;通过布尔数组索引&quot;&gt;&lt;a href=&quot;#通过布尔数组索引&quot; class=&quot;headerlink&quot; title=&quot;通过布尔数组索引&quot;&gt;&lt;/a&gt;通过布尔数组索引&lt;/h3&gt;&lt;p&gt;当我们使用整数数组索引数组时，我们提供一个索引列表去选择。通过布尔数组索引的方法是不同的我们显式地选择数组中我们想要和不想要的元素。&lt;/p&gt;
&lt;p&gt;我们能想到的使用布尔数组的索引最自然方式就是使用和原数组一样形状的布尔数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = a &amp;gt; 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b                                          # b is a boolean with a&amp;apos;s shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[False, False, False, False],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [False, True, True, True],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [True, True, True, True]], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b]                                       # 1d array with the selected elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 5,  6,  7,  8,  9, 10, 11])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个属性在赋值时非常有用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b] = 0                                   # All elements of &amp;apos;a&amp;apos; higher than 4 become 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[0, 1, 2, 3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [4, 0, 0, 0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0, 0, 0, 0]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你可以参考&lt;a href=&quot;http://scipy.org/Tentative_NumPy_Tutorial/Mandelbrot_Set_Example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;曼德博集合示例&lt;/a&gt;看看如何使用布尔索引来生成曼德博集合的图像。&lt;/p&gt;
&lt;p&gt;第二种通过布尔来索引的方法更近似于整数索引；对数组的每个维度我们给一个一维布尔数组来选择我们想要的切片。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b1 = array([False,True,True])             # first dim selection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b2 = array([True,False,True,False])       # second dim selection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b1,:]                                   # selecting rows&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b1]                                     # same thing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:,b2]                                   # selecting columns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  2],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8, 10]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b1,b2]                                  # a weird thing to do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 4, 10])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意一维数组的长度必须和你想要切片的维度或轴的长度一致，在之前的例子中，b1是一个秩为1长度为三的数组(a的行数)，b2(长度为4)与a的第二秩(列)相一致。[7](上面最后一个例子，b1和b2中的true个数必须一致)&lt;/p&gt;
&lt;h3 id=&quot;ix-函数&quot;&gt;&lt;a href=&quot;#ix-函数&quot; class=&quot;headerlink&quot; title=&quot;ix_()函数&quot;&gt;&lt;/a&gt;ix_()函数&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ix_&lt;/code&gt;函数可以为了获得&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E5%A4%9A%E5%85%83%E7%BB%84&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多元组&lt;/a&gt;的结果而用来结合不同向量。例如，如果你想要用所有向量a、b和c元素组成的三元组来计算&lt;code&gt;a+b*c&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array([2,3,4,5])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array([8,5,4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = array([5,4,6,8,3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ax,bx,cx = ix_(a,b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[2]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[3]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[4]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[5]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; bx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[8],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [4]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; cx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[5, 4, 6, 8, 3]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ax.shape, bx.shape, cx.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;((4, 1, 1), (1, 3, 1), (1, 1, 5))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = ax+bx*cx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[42, 34, 50, 66, 26],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [27, 22, 32, 42, 17],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [22, 18, 26, 34, 14]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[43, 35, 51, 67, 27],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [28, 23, 33, 43, 18],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [23, 19, 27, 35, 15]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[44, 36, 52, 68, 28],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [29, 24, 34, 44, 19],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [24, 20, 28, 36, 16]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[45, 37, 53, 69, 29],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [30, 25, 35, 45, 20],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [25, 21, 29, 37, 17]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result[3,2,4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[3]+b[2]*c[4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也可以实行如下简化：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def ufunc_reduce(ufct, *vectors):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    vs = ix_(*vectors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = ufct.identity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for v in vs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r = ufct(r,v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return r&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后这样使用它：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ufunc_reduce(add,a,b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[15, 14, 16, 18, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [12, 11, 13, 15, 10],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [11, 10, 12, 14,  9]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[16, 15, 17, 19, 14],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [13, 12, 14, 16, 11],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [12, 11, 13, 15, 10]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[17, 16, 18, 20, 15],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [14, 13, 15, 17, 12],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [13, 12, 14, 16, 11]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[18, 17, 19, 21, 16],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [15, 14, 16, 18, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [14, 13, 15, 17, 12]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个reduce与ufunc.reduce(比如说add.reduce)相比的优势在于它利用了广播法则，避免了创建一个输出大小乘以向量个数的参数数组。[8](我不怎么明白……总之避免创建一个很大的数组。)&lt;/p&gt;
&lt;h3 id=&quot;用字符串索引&quot;&gt;&lt;a href=&quot;#用字符串索引&quot; class=&quot;headerlink&quot; title=&quot;用字符串索引&quot;&gt;&lt;/a&gt;用字符串索引&lt;/h3&gt;&lt;p&gt;参见&lt;a href=&quot;http://www.scipy.org/RecordArrays&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RecordArray&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;线性代数&quot;&gt;&lt;a href=&quot;#线性代数&quot; class=&quot;headerlink&quot; title=&quot;线性代数&quot;&gt;&lt;/a&gt;线性代数&lt;/h2&gt;&lt;p&gt;继续前进，基本线性代数包含在这里。&lt;/p&gt;
&lt;h3 id=&quot;简单数组运算&quot;&gt;&lt;a href=&quot;#简单数组运算&quot; class=&quot;headerlink&quot; title=&quot;简单数组运算&quot;&gt;&lt;/a&gt;简单数组运算&lt;/h3&gt;&lt;p&gt;参考numpy文件夹中的linalg.py获得更多信息&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy.linalg import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array([[1.0, 2.0], [3.0, 4.0]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 1\.  2.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 3\.  4.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.transpose()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.,  4.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; inv(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[-2\. ,  1\. ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 1.5, -0.5]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; u = eye(2) # unit 2x2 matrix; &amp;quot;eye&amp;quot; represents &amp;quot;I&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; u&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  1.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; j = array([[0.0, -1.0], [1.0, 0.0]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dot (j, j) # matrix product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[-1.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0., -1.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; trace(u)  # trace&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; y = array([[5.], [7.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; solve(a, y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[-3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; eig(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(array([ 0.+1.j,  0.-1.j]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0.70710678+0.j,  0.70710678+0.j],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.00000000-0.70710678j,  0.00000000+0.70710678j]]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Parameters:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    square matrix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Returns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    The eigenvalues, each repeated according to its multiplicity.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    The normalized (unit &amp;quot;length&amp;quot;) eigenvectors, such that the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    column ``v[:,i]`` is the eigenvector corresponding to the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    eigenvalue ``w[i]`` .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;矩阵类&quot;&gt;&lt;a href=&quot;#矩阵类&quot; class=&quot;headerlink&quot; title=&quot;矩阵类&quot;&gt;&lt;/a&gt;矩阵类&lt;/h3&gt;&lt;p&gt;这是一个关于矩阵类的简短介绍。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A = matrix(&amp;apos;1.0 2.0; 3.0 4.0&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 1\.  2.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 3\.  4.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(A)  # file where class is defined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;class &amp;apos;numpy.matrixlib.defmatrix.matrix&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.T  # transpose&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 1\.  3.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 2\.  4.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; X = matrix(&amp;apos;5.0 7.0&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Y = X.T&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[5.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [7.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A*Y  # matrix multiplication&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[19.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [43.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A.I  # inverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[-2\.   1\. ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 1.5 -0.5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; solve(A, Y)  # solving linear equation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[-3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 4.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;索引：比较矩阵和二维数组&quot;&gt;&lt;a href=&quot;#索引：比较矩阵和二维数组&quot; class=&quot;headerlink&quot; title=&quot;索引：比较矩阵和二维数组&quot;&gt;&lt;/a&gt;索引：比较矩阵和二维数组&lt;/h3&gt;&lt;p&gt;注意NumPy中数组和矩阵有些重要的区别。NumPy提供了两个基本的对象：一个N维数组对象和一个通用函数对象。其它对象都是建构在它们之上的。特别的，矩阵是继承自NumPy数组对象的二维数组对象。对数组和矩阵，索引都必须包含合适的一个或多个这些组合：整数标量、省略号(ellipses)、整数列表;布尔值，整数或布尔值构成的元组，和一个一维整数或布尔值数组。矩阵可以被用作矩阵的索引，但是通常需要数组、列表或者其它形式来完成这个任务。&lt;/p&gt;
&lt;p&gt;像平常在Python中一样，索引是从0开始的。传统上我们用矩形的行和列表示一个二维数组或矩阵，其中沿着0轴的方向被穿过的称作行，沿着1轴的方向被穿过的是列。[9](水平是1轴，垂直是0轴。)&lt;/p&gt;
&lt;p&gt;让我们创建数组和矩阵用来切片：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A = arange(12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.shape = (3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M = mat(A.copy())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print type(A),&amp;quot;  &amp;quot;,type(M)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;numpy.ndarray&amp;apos;&amp;gt;    &amp;lt;class &amp;apos;numpy.core.defmatrix.matrix&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在，让我们简单的切几片。基本的切片使用切片对象或整数。例如，&lt;code&gt;A[:]&lt;/code&gt;和&lt;code&gt;M[:]&lt;/code&gt;的求值将表现得和Python索引很相似。然而要注意很重要的一点就是NumPy切片数组&lt;em&gt;不&lt;/em&gt;创建数据的副本;切片提供统一数据的视图。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A[:]; print A[:].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print M[:]; print M[:].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在有些和Python索引不同的了：你可以同时使用逗号分割索引来沿着多个轴索引。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A[:,1]; print A[:,1].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1 5 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print M[:,1]; print M[:,1].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意最后两个结果的不同。对二维数组使用一个冒号产生一个一维数组，然而矩阵产生了一个二维矩阵。[10](&lt;code&gt;type(M[:,1])&lt;/code&gt;和&lt;code&gt;type(A[:,1])&lt;/code&gt;你可以看到是这样。)例如，一个&lt;code&gt;M[2,:]&lt;/code&gt;切片产生了一个形状为(1,4)的矩阵，相比之下，一个数组的切片总是产生一个最低可能维度[11](什么叫尽可能低的维度？不懂。)的数组。例如，如果C是一个三维数组，&lt;code&gt;C[...,1]&lt;/code&gt;产生一个二维的数组而&lt;code&gt;C[1,:,1]&lt;/code&gt;产生一个一维数组。从这时开始，如果相应的矩阵切片结果是相同的话，我们将只展示数组切片的结果。&lt;/p&gt;
&lt;p&gt;假如我们想要一个数组的第一列和第三列，一种方法是使用列表切片：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[:,[1,3]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;稍微复杂点的方法是使用&lt;code&gt;take()&lt;/code&gt;方法(method):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[:,].take([1,3],axis=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们想跳过第一行，我们可以这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[1:,].take([1,3],axis=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者我们仅仅使用&lt;code&gt;A[1:,[1,3]]&lt;/code&gt;。还有一种方法是通过矩阵向量积(叉积)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[ix_((1,2),(1,3))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了读者的方便，再次写下之前的矩阵：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在让我们做些更复杂的。比如说我们想要保留第一行大于1的列。一种方法是创建布尔索引：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[0,:]&amp;gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([False, False, True, True], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[:,A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就是我们想要的！但是索引矩阵没这么方便。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[0,:]&amp;gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[False, False, True, True]], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[:,M[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[2, 3]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个过程的问题是用“矩阵切片”来切片产生一个矩阵[12](用矩阵切片)，但是矩阵有个方便的&lt;code&gt;A&lt;/code&gt;属性，它的值是数组呈现的。所以我们仅仅做以下替代：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[:,M.A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ 2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们想要在矩阵两个方向有条件地切片，我们必须稍微调整策略，代之以：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[A[:,0]&amp;gt;2,A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 6, 11])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[M.A[:,0]&amp;gt;2,M.A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ 6, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要使用向量积&lt;code&gt;ix_&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[ix_(A[:,0]&amp;gt;2,A[0,:]&amp;gt;1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[ix_(M.A[:,0]&amp;gt;2,M.A[0,:]&amp;gt;1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;技巧和提示&quot;&gt;&lt;a href=&quot;#技巧和提示&quot; class=&quot;headerlink&quot; title=&quot;技巧和提示&quot;&gt;&lt;/a&gt;技巧和提示&lt;/h2&gt;&lt;p&gt;下面我们给出简短和有用的提示。&lt;/p&gt;
&lt;h3 id=&quot;“自动”改变形状&quot;&gt;&lt;a href=&quot;#“自动”改变形状&quot; class=&quot;headerlink&quot; title=&quot;“自动”改变形状&quot;&gt;&lt;/a&gt;“自动”改变形状&lt;/h3&gt;&lt;p&gt;更改数组的维度，你可以省略一个尺寸，它将被自动推导出来。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(30)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape = 2,-1,3  # -1 means &amp;quot;whatever is needed&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 5, 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[ 0,  1,  2],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 3,  4,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 6,  7,  8],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 9, 10, 11],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [12, 13, 14]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[15, 16, 17],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [18, 19, 20],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [21, 22, 23],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [24, 25, 26],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [27, 28, 29]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;向量组合-stacking&quot;&gt;&lt;a href=&quot;#向量组合-stacking&quot; class=&quot;headerlink&quot; title=&quot;向量组合(stacking)&quot;&gt;&lt;/a&gt;向量组合(stacking)&lt;/h3&gt;&lt;p&gt;我们如何用两个相同尺寸的行向量列表构建一个二维数组？在MATLAB中这非常简单：如果x和y是两个相同长度的向量，你仅仅需要做&lt;code&gt;m=[x;y]&lt;/code&gt;。在NumPy中这个过程通过函数&lt;code&gt;column_stack&lt;/code&gt;、&lt;code&gt;dstack&lt;/code&gt;、&lt;code&gt;hstack&lt;/code&gt;和&lt;code&gt;vstack&lt;/code&gt;来完成，取决于你想要在那个维度上组合。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = arange(0,10,2)                     # x=([0,2,4,6,8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = arange(5)                          # y=([0,1,2,3,4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = vstack([x,y])                      # m=([[0,2,4,6,8],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       #     [0,1,2,3,4]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xy = hstack([x,y])                     # xy =([0,2,4,6,8,0,1,2,3,4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;二维以上这些函数背后的逻辑会很奇怪。&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;http://scipy.org/NumPy_for_Matlab_Users&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;写个Matlab用户的NumPy指南&lt;/a&gt;并且在这里添加你的新发现: )&lt;/p&gt;
&lt;h3 id=&quot;直方图-histogram&quot;&gt;&lt;a href=&quot;#直方图-histogram&quot; class=&quot;headerlink&quot; title=&quot;直方图(histogram)&quot;&gt;&lt;/a&gt;直方图(histogram)&lt;/h3&gt;&lt;p&gt;NumPy中&lt;code&gt;histogram&lt;/code&gt;函数应用到一个数组返回一对变量：直方图数组和箱式向量。注意：&lt;code&gt;matplotlib&lt;/code&gt;也有一个用来建立直方图的函数(叫作&lt;code&gt;hist&lt;/code&gt;,正如matlab中一样)与NumPy中的不同。主要的差别是&lt;code&gt;pylab.hist&lt;/code&gt;自动绘制直方图，而&lt;code&gt;numpy.histogram&lt;/code&gt;仅仅产生数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import numpy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pylab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Build a vector of 10000 normal deviates with variance 0.5^2 and mean 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mu, sigma = 2, 0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v = numpy.random.normal(mu,sigma,10000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Plot a normalized histogram with 50 bins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.hist(v, bins=50, normed=1)       # matplotlib version (plot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Compute the histogram with numpy and then plot it&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(n, bins) = numpy.histogram(v, bins=50, normed=True)  # NumPy version (no plot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.plot(.5*(bins[1:]+bins[:-1]), n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;http://docs.python.org/tut/tut.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Numpy Example List&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The nonexistent &lt;a href=&quot;http://scipy.org/NumPy_Tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy Tutorial&lt;/a&gt; at scipy.org, where we can find the old Numeric documentation.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.tramy.us/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Guide to NumPy&lt;/a&gt; book.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://scipy.org/SciPy_Tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SciPy Tutorial&lt;/a&gt; and a &lt;a href=&quot;http://www.rexx.com/~dkuhlman/scipy_course_01.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SciPy course online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scipy.org/NumPy_for_Matlab_Users&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy for Matlab Users&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a href=&quot;http://mathesaurus.sf.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;matlab, R, IDL, NumPy/SciPy dictionary&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://scipy.org/Tentative_NumPy_Tutorial&quot;&gt;Tentative NumPy Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://reverland.org/python/2012/08/22/numpy&quot;&gt;试验性NumPy教程(译)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;先决条件&quot;&gt;&lt;a href=&quot;#先决条件&quot; class=&quot;headerlink&quot; title=&quot;先决条件&quot;&gt;&lt;/a&gt;先决条件&lt;/h2&gt;&lt;p&gt;在阅读这个教程之前，你多少需要知道点python。如果你想重新回忆下，请看看&lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;Python Tutorial&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="科学计算" scheme="http://it-ebooks.flygon.net/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="numpy" scheme="http://it-ebooks.flygon.net/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习笔记 模块篇</title>
    <link href="http://it-ebooks.flygon.net/python-note-module/"/>
    <id>http://it-ebooks.flygon.net/python-note-module/</id>
    <published>2016-03-13T09:26:25.000Z</published>
    <updated>2016-03-13T09:26:11.660Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004,2005,2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转 载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年7月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年03月01日，增加cjkcodecs模块。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python为开发人员提供了丰富的模块，通过这些模块，我们就可快速开发出功能强大的程序。本笔记记录我所接触或学习过的Python模块，为想学习Python的朋友提供一个参考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811889&quot;&gt;1. Python Imaging Library(PIL)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811915&quot;&gt;1.1. 安装&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811923&quot;&gt;1.1.1. 下载相关软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809722&quot;&gt;1.1.2. 开始安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809818&quot;&gt;2. Pmw(Python megawidgets)Python超级GUI组件集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2809843&quot;&gt;2.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810164&quot;&gt;2.2. 模块功能演示&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810171&quot;&gt;2.2.1. ScrolledListBox(滚动列表框)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810195&quot;&gt;2.2.2. ScrolledText（滚动文本框）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810219&quot;&gt;3. PyXML&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810394&quot;&gt;3.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810431&quot;&gt;3.2. 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810447&quot;&gt;4. PyGame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810462&quot;&gt;5. PyOpenGL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810479&quot;&gt;6. NumPy和Numarray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810500&quot;&gt;7. MySQLdb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810521&quot;&gt;7.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810555&quot;&gt;7.2. 模块功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861658&quot;&gt;7.3. 模块功能演示&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2862112&quot;&gt;8. Tkinter模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2862119&quot;&gt;8.1. Tkinter简介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2862133&quot;&gt;9. PyGTK&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2862104&quot;&gt;9.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2862080&quot;&gt;9.2. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861697&quot;&gt;10. PyQt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861724&quot;&gt;10.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861855&quot;&gt;11. PyMedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861875&quot;&gt;12. Python-ldap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861891&quot;&gt;12.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808494&quot;&gt;13. ftplib – FTP protocol client&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808548&quot;&gt;13.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808607&quot;&gt;14. Psyco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808658&quot;&gt;14.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808709&quot;&gt;15. smtplib&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808717&quot;&gt;15.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808780&quot;&gt;16. XMPPPY&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808800&quot;&gt;16.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808819&quot;&gt;16.2. cjkcodecs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-1-Python-Imaging-Library-PIL&quot;&gt;&lt;a href=&quot;#Chapter-1-Python-Imaging-Library-PIL&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1. Python Imaging Library(PIL)&quot;&gt;&lt;/a&gt;Chapter 1. Python Imaging Library(PIL)&lt;/h2&gt;&lt;p&gt;PIL(Python图形库)为python提供强大的图形处理的能力，并提供广泛的图形文件格式支持，当前最新的版本是1.1.4。可到以下网址&lt;a href=&quot;http://www.pythonware.com/products/pil/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pythonware.com/products/pil/index.htm&lt;/a&gt;了解PIL的最新动态。该库能进行图形格式的转换、打印和显示。还能进行一些图形效果的处理，如图形的放大、缩小和旋转等。是Python用户进行图象处理的强有力工具。&lt;/p&gt;
&lt;h2 id=&quot;1-1-安装&quot;&gt;&lt;a href=&quot;#1-1-安装&quot; class=&quot;headerlink&quot; title=&quot;1.1. 安装&quot;&gt;&lt;/a&gt;1.1. 安装&lt;/h2&gt;&lt;h3 id=&quot;1-1-1-下载相关软件&quot;&gt;&lt;a href=&quot;#1-1-1-下载相关软件&quot; class=&quot;headerlink&quot; title=&quot;1.1.1. 下载相关软件&quot;&gt;&lt;/a&gt;1.1.1. 下载相关软件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;到&lt;a href=&quot;http://www.pythonware.com/products/pil/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pythonware.com/products/pil/index.htm&lt;/a&gt;下载最新版的PIL安装程序。这里介绍的是在linux下的安装方法。windows平台的安装方法较简单，只要双击安装程序，就可一步步安装好了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果要PIL支持jpeg格式文件，还需安装jpeg库文件，可到&lt;a href=&quot;http://www.ijg.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ijg.org&lt;/a&gt;下载，现时最新的版本是jpegsrc.v6b.tar.gz。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果要PIL支持压缩功能，还要下载Zlib库，可到&lt;a href=&quot;http://www.gzip.org/zlib/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gzip.org/zlib/&lt;/a&gt;下载zlib-1.1.4.tar.gz。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-1-2-开始安装&quot;&gt;&lt;a href=&quot;#1-1-2-开始安装&quot; class=&quot;headerlink&quot; title=&quot;1.1.2. 开始安装&quot;&gt;&lt;/a&gt;1.1.2. 开始安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;先安装jpeg库，输入以下命令进行安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xfz jpegsrc.v6b.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd jpeg-6b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install-lib&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着安装Zlib库，输入以下命令进行安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xfz zlib-1.1.4.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd zlib-1.1.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后安装PIL，输入以下命令进行安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xfz Imaging-1.1.4.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd Imaging-1.1.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd libImaging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试安装是否成功，可以在Python的命令行界面输入以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;import Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;im = Image.open(&amp;quot;test.jpg&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;im.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果成功打开test.jpg图片则安装成功。注意，在linux中，需要用xv程序来显示图片，所以如果没装xv，python会提示找不到xv。可到&lt;a href=&quot;http://www.trilon.com/xv/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.trilon.com/xv/downloads.html&lt;/a&gt;下载xv。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-2-Pmw-Python-megawidgets-Python超级GUI组件集&quot;&gt;&lt;a href=&quot;#Chapter-2-Pmw-Python-megawidgets-Python超级GUI组件集&quot; class=&quot;headerlink&quot; title=&quot;Chapter 2. Pmw(Python megawidgets)Python超级GUI组件集&quot;&gt;&lt;/a&gt;Chapter 2. Pmw(Python megawidgets)Python超级GUI组件集&lt;/h2&gt;&lt;p&gt;Pmw是一个在python中利用Tkinter模块构建的高级GUI组件，每个Pmw都合并了一个或多个Tkinter组件，以实现更有用和更复杂的功能。如，Pmw中的一个ScrolledListBox（滚动列表框）实现了Tkinter的Scrollbar（滚动条）和ListBox（列表框）功能，使我们编程更方便。如果你在Python中开发GUI程序，Pmw是将是你的一个好帮手。&lt;/p&gt;
&lt;h2 id=&quot;2-1-安装&quot;&gt;&lt;a href=&quot;#2-1-安装&quot; class=&quot;headerlink&quot; title=&quot;2.1. 安装&quot;&gt;&lt;/a&gt;2.1. 安装&lt;/h2&gt;&lt;p&gt;现在最新的Pmw是1.2版，Pmw的安装比较简单，只要到&lt;a href=&quot;http://pmw.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pmw.sourceforge.net/&lt;/a&gt;下载软件，然后用tar -zxvf命令解压文件，把解压出来的Pmw目录拷到python的模块目录下就可以了，如site-packages 目录。windows平台使用同一压缩包，安装方法也一样。安装完成后可登录进python的命令行界面运行“import Pmw”测试是否安装成功，如果没有出错信息，则安装成功，可以使用了。&lt;/p&gt;
&lt;h2 id=&quot;2-2-模块功能演示&quot;&gt;&lt;a href=&quot;#2-2-模块功能演示&quot; class=&quot;headerlink&quot; title=&quot;2.2. 模块功能演示&quot;&gt;&lt;/a&gt;2.2. 模块功能演示&lt;/h2&gt;&lt;h3 id=&quot;2-2-1-ScrolledListBox-滚动列表框&quot;&gt;&lt;a href=&quot;#2-2-1-ScrolledListBox-滚动列表框&quot; class=&quot;headerlink&quot; title=&quot;2.2.1. ScrolledListBox(滚动列表框)&quot;&gt;&lt;/a&gt;2.2.1. ScrolledListBox(滚动列表框)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#ScrolledListBox used to select image.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from Tkinter import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import Pmw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ImageSelection( Frame ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;List of available images and an area to display them&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__( self, images ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;Create list of PhotoImages and Label to display them&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Frame.__init__( self )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Pmw.initialise()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.pack( expand = YES, fill = BOTH )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.master.title( &amp;quot;Select an image&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.photos = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #add PhotoImage object to list photos&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for item in images:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.photos.append( PhotoImage( file = item ) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #create scrolled list box with vertical scrollbar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.listBox = Pmw.ScrolledListBox( self, items = images,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            listbox_height = 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            vscrollmode = &amp;quot;static&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            selectioncommand = self.switchImage )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.listBox.pack( side = LEFT, expand = YES, fill = BOTH, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.display = Label( self, image = self.photos[0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.display.pack( padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switchImage ( self ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;Change image in Label to current selection&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #get tuple containing index of selected list item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        chosenPicture = self.listBox.curselection()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #configure label to display selected image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if chosenPicture:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            choice = int( chosenPicture[0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.display.config( image = self.photos[ choice ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def main():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    images = [ &amp;quot;c:\python23\logo.gif&amp;quot;, &amp;quot;c:\python23\china.gif&amp;quot;, &amp;quot;c:\python23\canada.gif&amp;quot;, &amp;quot;c:\python23\logo.gif&amp;quot; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ImageSelection(images).mainloop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;images/ScrolledListBox.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-2-2-ScrolledText（滚动文本框）&quot;&gt;&lt;a href=&quot;#2-2-2-ScrolledText（滚动文本框）&quot; class=&quot;headerlink&quot; title=&quot;2.2.2. ScrolledText（滚动文本框）&quot;&gt;&lt;/a&gt;2.2.2. ScrolledText（滚动文本框）&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#Copying selected text from one text area to another.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from Tkinter import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import Pmw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class CopyTextWindow( Frame ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;Demonatrate ScrolledText&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__( self ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;Create two ScrolledText and a Button&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Frame.__init__( self )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Pmw.initialise()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.pack( expand = YES, fill = BOTH )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.master.title( &amp;quot;ScrolledText Demo&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #create scrolled text box with word wrap enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text1 = Pmw.ScrolledText( self, text_width = 25, text_height = 12,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       text_wrap = WORD, hscrollmode = &amp;quot;static&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       vscrollmode = &amp;quot;static&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text1.pack( side = LEFT, expand = YES, fill = BOTH, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.copyButton = Button( self, text = &amp;quot;Copy &amp;gt;&amp;gt;&amp;gt;&amp;quot;, command = self.copyText )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.copyButton.pack( side = LEFT, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #create uneditable scrolled text box&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text2 = Pmw.ScrolledText( self, text_state = DISABLED, text_width = 25,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       text_height = 12, text_wrap = WORD,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       hscrollmode = &amp;quot;static&amp;quot;, vscrollmode = &amp;quot;static&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text2.pack( side = LEFT, expand = YES, fill = BOTH, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def copyText( self ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;set the text in the second ScrolledText&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text2.settext( self.text1.get( SEL_FIRST,SEL_LAST ) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def main():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CopyTextWindow().mainloop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;images/ScrolledText.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Chapter-3-PyXML&quot;&gt;&lt;a href=&quot;#Chapter-3-PyXML&quot; class=&quot;headerlink&quot; title=&quot;Chapter 3. PyXML&quot;&gt;&lt;/a&gt;Chapter 3. PyXML&lt;/h2&gt;&lt;p&gt;PyXML是一套用Python解析和处理XML文档的工具包，包中的4DOM是完全相容于W3C DOM规范的。它包含以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;xmlproc: 一个符合规范的XML解析器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expat: 一个快速的，非验证的XML解析器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sgmlop: a C helper module that can speed-up xmllib.py and sgmllib.py by a factor of 5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PySAX: SAX 1 and SAX2 libraries with drivers for most of the parsers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4DOM: A fully compliant DOM Level 2 implementation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;javadom: An adapter from Java DOM implementations to the standard Python DOM binding.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pulldom: a DOM implementation that supports lazy instantiation of nodes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;marshal: a module with several options for serializing Python objects to XML, including WDDX and XML-RPC.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-1-安装&quot;&gt;&lt;a href=&quot;#3-1-安装&quot; class=&quot;headerlink&quot; title=&quot;3.1. 安装&quot;&gt;&lt;/a&gt;3.1. 安装&lt;/h2&gt;&lt;p&gt;到&lt;a href=&quot;http://sourceforge.net/project/showfiles.php group_id=6473&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sourceforge.net/project/showfiles.php group_id=6473&lt;/a&gt;下载最新版的模块，现在是PyXML-0.8.3。安装PyXML需要有python2.0以上及以上的版本。下载完成后用tar解压缩生成PyXML-0.8.3目录，进入该目录并运行python setup.py build和python setup.py install完成安装。测试方法是进入命令行交互界面运行“import xml.dom.ext”命令，如果没提示模块出错则说明安装成功。PyXML提供windows平台的安装包，下载后双击运行就可以了。&lt;/p&gt;
&lt;h2 id=&quot;3-2-使用&quot;&gt;&lt;a href=&quot;#3-2-使用&quot; class=&quot;headerlink&quot; title=&quot;3.2. 使用&quot;&gt;&lt;/a&gt;3.2. 使用&lt;/h2&gt;&lt;p&gt;由于该模块的内容较多，所以该模块的详细使用将我在“PyXML学习笔记”中单独讨论。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-4-PyGame&quot;&gt;&lt;a href=&quot;#Chapter-4-PyGame&quot; class=&quot;headerlink&quot; title=&quot;Chapter 4. PyGame&quot;&gt;&lt;/a&gt;Chapter 4. PyGame&lt;/h2&gt;&lt;p&gt;PyGame是一组用于多媒体开发和游戏软件开发的模块。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-5-PyOpenGL&quot;&gt;&lt;a href=&quot;#Chapter-5-PyOpenGL&quot; class=&quot;headerlink&quot; title=&quot;Chapter 5. PyOpenGL&quot;&gt;&lt;/a&gt;Chapter 5. PyOpenGL&lt;/h2&gt;&lt;p&gt;PyOpenGL模块封装了“OpenGL应用程序编程接口”，通过该模块python程序员可在程序中集成2D和3D的图形。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-6-NumPy和Numarray&quot;&gt;&lt;a href=&quot;#Chapter-6-NumPy和Numarray&quot; class=&quot;headerlink&quot; title=&quot;Chapter 6. NumPy和Numarray&quot;&gt;&lt;/a&gt;Chapter 6. NumPy和Numarray&lt;/h2&gt;&lt;p&gt;NumPy是Python的一个扩展库，主要用于处理任意维数的固定类型数组，它的低层代码使用C来编写，所以速度的优势很明显。Numarray是NumPy的一个改进版，用于取代NumPy。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-7-MySQLdb&quot;&gt;&lt;a href=&quot;#Chapter-7-MySQLdb&quot; class=&quot;headerlink&quot; title=&quot;Chapter 7. MySQLdb&quot;&gt;&lt;/a&gt;Chapter 7. MySQLdb&lt;/h2&gt;&lt;p&gt;MySQLdb模块用于连接MySQL数据库。源码位于&lt;a href=&quot;http://sourceforge.net/projects/mysql-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sourceforge.net/projects/mysql-python&lt;/a&gt;，这里还有用于zope的ZMySQLDA模块，通过它就可在zope中连接mysql数据库。&lt;/p&gt;
&lt;h2 id=&quot;7-1-安装&quot;&gt;&lt;a href=&quot;#7-1-安装&quot; class=&quot;headerlink&quot; title=&quot;7.1. 安装&quot;&gt;&lt;/a&gt;7.1. 安装&lt;/h2&gt;&lt;p&gt;安装的方法在解压目录的README文件中有详细说明。不难，这里就不详细讲了。要注意的一点是，如果你的mysql不是安装在默认的路径，而是安装在/usr/local/mysql这样的路径的话，libmysqlclient.so.12这个动态库python可能会找不到，造成import出错，解决方法是在/usr/lib下做一个符号连接，ln -s /usr/local/mysql/lib/mysql/libmysqlclient.so.12 libmysqlclient.so.12。最后在python中用import MySQLdb测试，如果没有出错信息就说明安装成功，可以连接mysql数据库了。&lt;/p&gt;
&lt;h2 id=&quot;7-2-模块功能&quot;&gt;&lt;a href=&quot;#7-2-模块功能&quot; class=&quot;headerlink&quot; title=&quot;7.2. 模块功能&quot;&gt;&lt;/a&gt;7.2. 模块功能&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;connect()方法用于连接数据库，返回一个数据库连接对象。如果要连接一个位于host.remote.com服务器上名为fourm的MySQL数据库，连接串可以这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db = MySQLdb.connect(host=&amp;quot;remote.com&amp;quot;,user=&amp;quot;user&amp;quot;,passwd=&amp;quot;xxx&amp;quot;,db=&amp;quot;fourm&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;connect()的参数列表如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;host，连接的数据库服务器主机名，默认为本地主机(localhost)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;user，连接数据库的用户名，默认为当前用户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;passwd，连接密码，没有默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;db，连接的数据库名，没有默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;conv，将文字映射到Python类型的字典。默认为MySQLdb.converters.conversions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cursorclass，cursor()使用的种类，默认值为MySQLdb.cursors.Cursor。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;compress，启用协议压缩功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;named_pipe，在windows中，与一个命名管道相连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;init_command，一旦连接建立，就为数据库服务器指定一条语句来运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;read_default_file，使用指定的MySQL配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;read_default_group，读取的默认组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unix_socket，在unix中，连接使用的套接字，默认使用TCP。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;port，指定数据库服务器的连接端口，默认是3306。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.close()方法可关闭数据库连接，并释放相关资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.cursor([cursorClass])方法返回一个指针对象，用于访问和操作数据库中的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.begin()方法用于开始一个事务，如果数据库的AUTOCOMMIT已经开启就关闭它，直到事务调用commit()和rollback()结束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.commit()和db.rollback()方法分别表示事务提交和回退。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.close()方法关闭指针并释放相关资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.execute(query[,parameters])方法执行数据库查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.fetchall()可取出指针结果集中的所有行，返回的结果集一个元组(tuples)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.fetchmany([size=cursor.arraysize])从查询结果集中取出多行，我们可利用可选的参数指定取出的行数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.fetchone()从查询结果集中返回下一行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.arraysize属性指定由cursor.fetchmany()方法返回行的数目，影响fetchall()的性能，默认值为1。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.rowcount属性指出上次查询或更新所发生行数。-1表示还没开始查询或没有查询到数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;7-3-模块功能演示&quot;&gt;&lt;a href=&quot;#7-3-模块功能演示&quot; class=&quot;headerlink&quot; title=&quot;7.3. 模块功能演示&quot;&gt;&lt;/a&gt;7.3. 模块功能演示&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import MySQLdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   connection = MySQLdb.connect(user=&amp;quot;user&amp;quot;,passwd=&amp;quot;password&amp;quot;,host=&amp;quot;xxx&amp;quot;,db=&amp;quot;test&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;quot;Could not connect to MySQL server.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   exit( 0 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cursor.execute( &amp;quot;SELECT note_id,note_detail FROM note where note_id = 1&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;quot;Rows selected:&amp;quot;, cursor.rowcount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   for row in cursor.fetchall():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       print &amp;quot;note : &amp;quot;, row[0], row[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cursor.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-8-Tkinter模块&quot;&gt;&lt;a href=&quot;#Chapter-8-Tkinter模块&quot; class=&quot;headerlink&quot; title=&quot;Chapter 8. Tkinter模块&quot;&gt;&lt;/a&gt;Chapter 8. Tkinter模块&lt;/h2&gt;&lt;h2 id=&quot;8-1-Tkinter简介&quot;&gt;&lt;a href=&quot;#8-1-Tkinter简介&quot; class=&quot;headerlink&quot; title=&quot;8.1. Tkinter简介&quot;&gt;&lt;/a&gt;8.1. Tkinter简介&lt;/h2&gt;&lt;p&gt;Tkinter是Python默认的图形界面接口，Tkinter是一个和Tk接口的Python模块，Tkinter库提供了对Tk API的接口，它属于Tcl/Tk的GUI工具组。Tcl/Tk是由John Ousterhout发展的书写和图形设备。Tcl(工具命令语言)是个宏语言，用于简化shell下复杂程序的开发，Tk工具包是和Tcl一起开发的，目的是为了简化用户接口的设计过程。Tk工具包由许多不同的小部件，如一个按钮、一个滚动条等。通过Tk提供的这些小部件，我们就可快速地进行GUI开发。Perl、Scheme等语言也利用Tk库进行GUI开发。Tkinter是跨平台，在各种平台下都能使用。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-9-PyGTK&quot;&gt;&lt;a href=&quot;#Chapter-9-PyGTK&quot; class=&quot;headerlink&quot; title=&quot;Chapter 9. PyGTK&quot;&gt;&lt;/a&gt;Chapter 9. PyGTK&lt;/h2&gt;&lt;p&gt;PyGTK是一个用于python GUI程序开发的GTK+库，当前版本的PyGTK需要GTK+ 2.0以上版本支持和Python 2.2以上版本支持才能运行。&lt;/p&gt;
&lt;h2 id=&quot;9-1-安装&quot;&gt;&lt;a href=&quot;#9-1-安装&quot; class=&quot;headerlink&quot; title=&quot;9.1. 安装&quot;&gt;&lt;/a&gt;9.1. 安装&lt;/h2&gt;&lt;p&gt;如果是在Debian系统中，则安装python2.3-gtk2软件包即可。如果要从源码安装，可到&lt;a href=&quot;http://www.pygtk.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pygtk.org&lt;/a&gt;下载最新的软件包。安装方法也很简单，和其它开源软件差不多，通过configure、make和make install三步操作就可完成。具体操作你可参考源码目录下的README和INSTALL文档，里面有详细的安装说明。注意，要成功安装PyGTK，要有相应版本的GTK+和Python支持。在源码目录下有一个examples目录，这是一个宝贵的资源，里面有很多有用的PyGTK示例代码，对我们学习PyGTK很有帮助。&lt;/p&gt;
&lt;h2 id=&quot;9-2-示例&quot;&gt;&lt;a href=&quot;#9-2-示例&quot; class=&quot;headerlink&quot; title=&quot;9.2. 示例&quot;&gt;&lt;/a&gt;9.2. 示例&lt;/h2&gt;&lt;p&gt;下面是一个PyGTK的示例，演示了PyGTK的基本概念。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygtk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pygtk.require(&amp;apos;2.0&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import gtk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class base:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#destroy信号的回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def destroy(self,widget,data=None):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                gtk.main_quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#clicked信号的回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def hello(self,widget,data):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;apos;hello &amp;apos; + data + &amp;apos; this is a button clicked() test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#delete_event事件的回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def delete_event(self, widget, event, data=None):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;delete event occurred&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果delete_event事件返回假，则会触发destroy信号，从而关闭窗口。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果返回真，则不会关闭窗口。这个特性在当我们需要一个确认是否退出的选择对话框时是很有用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return gtk.FALSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置窗口的delete_event信号触发delete_event函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.connect(&amp;quot;delete_event&amp;quot;, self.delete_event)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置窗口的destroy信号触发destroy函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handler1 = self.window.connect(&amp;quot;destroy&amp;quot;,self.destroy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;handler1 is:%d&amp;quot; % handler1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_title(&amp;apos;PyGTK 测试 window&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_default_size(200,200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_border_width(100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#控制窗口出现的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_position(gtk.WIN_POS_CENTER)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#生成按钮实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1 = gtk.Button()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button2 = gtk.Button()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1.set_label(&amp;apos;label1&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button2.set_label(&amp;apos;label2&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置按钮的clicked信号触发hello函数，并传递‘pyGTK’字符串参数给hello函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handler2 = self.button1.connect(&amp;quot;clicked&amp;quot;,self.hello,&amp;quot;pyGTK&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;handler2 is:%d&amp;quot; % handler2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置按钮的clicked信号触发self..window对象的gtk.Widget.destroy方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1.connect_object(&amp;quot;clicked&amp;quot;, gtk.Widget.destroy, self.window)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#取消handler2的功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#               self.button.disconnect(handler2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置一个不可见的横向的栏位self.box1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1 = gtk.HBox(gtk.FALSE, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把box1放到窗口中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.add(self.box1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把button1部件放到box1中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1.pack_start(self.button1,gtk.TRUE,gtk.TRUE,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把button2部件放到button1部件之后&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1.pack_start(self.button2,gtk.TRUE,gtk.TRUE,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button2.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def main(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                gtk.main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print __name__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base = base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base.main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有关PyGTK的详细介绍请参考我整理的“PyGTK学习笔记”。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-10-PyQt&quot;&gt;&lt;a href=&quot;#Chapter-10-PyQt&quot; class=&quot;headerlink&quot; title=&quot;Chapter 10. PyQt&quot;&gt;&lt;/a&gt;Chapter 10. PyQt&lt;/h2&gt;&lt;p&gt;PyQt是一套用于python的Qt开发库，由一系列的模块组成，有qt, qtcanvas, qtgl, qtnetwork, qtsql, qttable, qtui and qtxml，包含有300个类和超过5750个的函数和方法。&lt;/p&gt;
&lt;p&gt;PyQt还支持一个叫qtext的模块，它包含一个QScintilla库。该库是Scintillar编辑器类的Qt接口。&lt;/p&gt;
&lt;h2 id=&quot;10-1-安装&quot;&gt;&lt;a href=&quot;#10-1-安装&quot; class=&quot;headerlink&quot; title=&quot;10.1. 安装&quot;&gt;&lt;/a&gt;10.1. 安装&lt;/h2&gt;&lt;p&gt;到&lt;a href=&quot;http://www.riverbankcomputing.co.uk/pyqt/download.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.riverbankcomputing.co.uk/pyqt/download.php&lt;/a&gt;下载最新的版本。安装PyQt需要先安装SIP，到以&lt;a href=&quot;http://www.riverbankcomputing.co.uk/sip/download.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;下载。&lt;a href=&quot;http://www.riverbankcomputing.co.uk/sip/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SIP&lt;/a&gt;是一个把C\C++库转换成Python模块的工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装SIP&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% tar -zxvf sip-4.1.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% cd sip-4.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% python configure.py -l qt          # -l qt 选项指定qt版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装PyQt&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% tar -zxvf PyQt-x11-gpl-3.13.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% cd PyQt-x11-gpl-3.13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% python configure.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-11-PyMedia&quot;&gt;&lt;a href=&quot;#Chapter-11-PyMedia&quot; class=&quot;headerlink&quot; title=&quot;Chapter 11. PyMedia&quot;&gt;&lt;/a&gt;Chapter 11. PyMedia&lt;/h2&gt;&lt;p&gt;PyMedia模块是一个用于多媒体操作的python模块。它提供了丰富而简单的接口用于多媒体处理(wav, mp3, ogg, avi, divx, dvd, cdda etc)。可在Windows和Linux平台下使用。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-12-Python-ldap&quot;&gt;&lt;a href=&quot;#Chapter-12-Python-ldap&quot; class=&quot;headerlink&quot; title=&quot;Chapter 12. Python-ldap&quot;&gt;&lt;/a&gt;Chapter 12. Python-ldap&lt;/h2&gt;&lt;p&gt;Python-ldap模块提供一组面向对象的API，可方便地在python中访问ldap目录服务，它基于OpenLDAP2.x。&lt;/p&gt;
&lt;h2 id=&quot;12-1-示例&quot;&gt;&lt;a href=&quot;#12-1-示例&quot; class=&quot;headerlink&quot; title=&quot;12.1. 示例&quot;&gt;&lt;/a&gt;12.1. 示例&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以下示例在python-ldap网站上有列出，这里作一下简要说明：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- coding:utf-8 -*-                          #设置源码文件编码为utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn = ldap.open(&amp;quot;server_name&amp;quot;)             #server_name为ldap服务器名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.protocol_version = ldap.VERSION3       #设置ldap协议版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;     #用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   password = &amp;quot;123&amp;quot;                            #访问密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.simple_bind(username,password)         #连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:                      #捕获出错信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baseDN = &amp;quot;dc=employees,dc=company,dc=com&amp;quot;      #设置目录的搜索路径起点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;searchScope = ldap.SCOPE_SUBTREE               #设置可搜索子路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;retrieveAttributes = None                      #None表示搜索所有属性，[&amp;apos;cn&amp;apos;]表示只搜索cn属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;searchFilter = &amp;quot;cn=test&amp;quot;                       #设置过滤属性，这里只显示cn=test的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ldap_result_id = conn.search(baseDN,searchScope,searchFilter,retrieveAttributes)                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#调用search方法返回结果id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result_set = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result_type, result_data = conn.result(ldap_result_id, 0)       #通过结果id返回信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if result_data == []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if result_type == ldap.RES_SEARCH_ENTRY:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         result_set.append(result_data)                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print result_set[0][0][1][&amp;apos;o&amp;apos;][0]       #result_set是一个复合列表，需通过索引返回组织单元(o)信息 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里采用的是非同步方式，同步方式的连接和搜索命令后有“_s”后缀，如search_s。非同步方式需通过一个结果id来访问目录服务信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面是一个修改目录信息的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn = ldap.open(&amp;quot;server_name&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.protocol_version = ldap.VERSION3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   password = &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.simple_bind_s(username,password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   dn = &amp;quot;cn=test,dc=employees,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.modify_s(dn,[(ldap.MOD_ADD,&amp;apos;mail&amp;apos;,&amp;apos;test@163.com&amp;apos;)])     #增加一个mail属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ldap.MOD_ADD表示增加属性，ldap.MOD_DELETE表示删除属性，ldap.MOD_REPLACE表示修改属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面是一个增加目录项的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap,ldap.modlist                 #ldap.modlist是ldap的子模块，用于格式化目录服务的数据项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn = ldap.open(&amp;quot;server_name&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.protocol_version = ldap.VERSION3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password = &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.simple_bind_s(username,password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dn = &amp;quot;cn=test,dc=card,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modlist = ldap.modlist.addModlist(&amp;#123;          #格式化目录项，除对象类型要求必填项外， &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;cn&amp;apos;: [&amp;apos;test&amp;apos;],                              #其它项可自由增减                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;objectClass&amp;apos;: [&amp;apos;top&amp;apos;, &amp;apos;person&amp;apos;, &amp;apos;organizationalPerson&amp;apos;, &amp;apos;inetOrgPerson&amp;apos;], &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;o&amp;apos;: [&amp;apos;\xe5\xb9\xbf\xe5\xb7\x9e&amp;apos;],           #这些为utf-8编码的中文 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;street&amp;apos;: [&amp;apos;\xe5\xb9\xbf\xe5\xb7\x9e&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;sn&amp;apos;: [&amp;apos;tester&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;mail&amp;apos;: [&amp;apos;test@163.com&amp;apos;, &amp;apos;test@21cn.com&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;homePhone&amp;apos;: [&amp;apos;xxxxxxxx&amp;apos;], &amp;apos;uid&amp;apos;: [&amp;apos;test&amp;apos;] &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       print modlist                                #显示格式化数据项，格式化后是一个元组列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.add_s(dn,modlist)                       #调用add_s方法添加目录项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实我们也可按格式化后元组列表的形式把目录项直接写到add_s()里，省却转换的步骤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面是一个删除目录项的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn = ldap.open(&amp;quot;server_name&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.protocol_version = ldap.VERSION3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password = &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.simple_bind_s(username,password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dn = &amp;quot;cn=sale,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.delete_s(dn)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-13-ftplib-–-FTP-protocol-client&quot;&gt;&lt;a href=&quot;#Chapter-13-ftplib-–-FTP-protocol-client&quot; class=&quot;headerlink&quot; title=&quot;Chapter 13. ftplib – FTP protocol client&quot;&gt;&lt;/a&gt;Chapter 13. ftplib – FTP protocol client&lt;/h2&gt;&lt;p&gt;ftplib模块定义了FTP类和一些方法，用以进行客户端的ftp编程。我们可用python编写一个自已的ftp客户端程序，用于下载文件或镜像站点。如果想了解ftp协议的详细内容，请参考&lt;a href=&quot;http://www.faqs.org/rfcs/rfc959.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RFC959&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;13-1-示例&quot;&gt;&lt;a href=&quot;#13-1-示例&quot; class=&quot;headerlink&quot; title=&quot;13.1. 示例&quot;&gt;&lt;/a&gt;13.1. 示例&lt;/h2&gt;&lt;p&gt;该模块是python的通用模块，所以默认应该已安装。ftplib模块使用很简单，暂时只有一个FTP类和十几个函数。下面用一个交互方式演示一下ftplib的主要功能。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp=FTP(&amp;apos;ftp.python.org&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.login()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;230 Login successful.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.dir()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwxr-x    7 1004     1004          512 Aug 13 01:35 pub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.cwd(&amp;apos;pub&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;250 Directory successfully changed.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.dir()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwxr-x    5 1000     1004         1024 Dec 24 11:04 docs.python.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwsr-x    2 1002     1004          512 Oct 12  2001 jython&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwx------    1 0        1003           25 Aug 03  2001 python -&amp;gt; www.python.org/ftp/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x    9 1018     1004          512 Feb 02 03:44 pyvault&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x    2 1005     1004          512 May 06  2003 tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwsr-x   59 1004     1004         3072 Feb 03 14:58 www.python.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;221 Goodbye.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面一个下载文件的示例&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#author:Jims of www.ringkee.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#create date: 2005/02/05&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#description: Using ftplib module download a file from a ftp server.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp=FTP()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(2)              #打开调试级别2，显示详细信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.connect(&amp;apos;ftp_server&amp;apos;,&amp;apos;port&amp;apos;)   #连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.login(&amp;apos;username&amp;apos;,&amp;apos;password&amp;apos;)   #登录，如果匿名登录则用空串代替即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print ftp.getwelcome()             #显示ftp服务器欢迎信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.cwd(&amp;apos;xxx/xxx/&amp;apos;)                #选择操作目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bufsize = 1024                     #设置缓冲块大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename=&amp;apos;dog.jpg&amp;apos;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_handler = open(filename,&amp;apos;wb&amp;apos;).write              #以写模式在本地打开文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.retrbinary(&amp;apos;RETR dog.jpg&amp;apos;,file_handler,bufsize)   #接收服务器上文件并写入本地文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(0)                                 #关闭调试&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.quit()                                            #退出ftp服务器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面一个上传文件的示例，要成功运行该脚本，需在ftp服务器上有上传文件的权限。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#author:Jims of www.ringkee.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#create date: 2005/02/05&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#description: Using ftplib module upload a file to a ftp server.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp=FTP()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.connect(&amp;apos;ftp_server&amp;apos;,&amp;apos;port&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.login(&amp;apos;username&amp;apos;,&amp;apos;password&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print ftp.getwelcome()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.cwd(&amp;apos;xxx/xxx/&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bufsize = 1024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename=&amp;apos;dog.jpg&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_handler = open(filename,&amp;apos;rb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.storbinary(&amp;apos;STOR dog.jpg&amp;apos;,file_handler,bufsize)   #上传文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_handler.close()         #关闭文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.quit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是不是很简单，其它功能可查询python的官方网站，网址是&lt;a href=&quot;http://docs.python.org/lib/module-ftplib.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://docs.python.org/lib/module-ftplib.html&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-14-Psyco&quot;&gt;&lt;a href=&quot;#Chapter-14-Psyco&quot; class=&quot;headerlink&quot; title=&quot;Chapter 14. Psyco&quot;&gt;&lt;/a&gt;Chapter 14. Psyco&lt;/h2&gt;&lt;p&gt;Psyco是一个Python代码加速度器，可使Python代码的执行速度提高到与编译语言一样的水平。&lt;/p&gt;
&lt;h2 id=&quot;14-1-安装&quot;&gt;&lt;a href=&quot;#14-1-安装&quot; class=&quot;headerlink&quot; title=&quot;14.1. 安装&quot;&gt;&lt;/a&gt;14.1. 安装&lt;/h2&gt;&lt;p&gt;安装Psyco很简单，它有两种安装方式，一种是源码方式，一种是二进制码方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果用源码方式安装，你需在源码的目录中调用python setup.py install命令编译生成psyco子目录，再把该子目录整个拷贝到python的site-packages目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果用二进制码方式安装，按&lt;a href=&quot;http://psyco.sourceforge.net/psycoguide/binaries.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个网址&lt;/a&gt;列表中的python与psyco版本对应表下载合适的二进制文件，解压后会生成一个psyco-1.x的目录，把该目录下的psyco目录整个拷贝到python的site-packages目录下即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-15-smtplib&quot;&gt;&lt;a href=&quot;#Chapter-15-smtplib&quot; class=&quot;headerlink&quot; title=&quot;Chapter 15. smtplib&quot;&gt;&lt;/a&gt;Chapter 15. smtplib&lt;/h2&gt;&lt;h2 id=&quot;15-1-示例&quot;&gt;&lt;a href=&quot;#15-1-示例&quot; class=&quot;headerlink&quot; title=&quot;15.1. 示例&quot;&gt;&lt;/a&gt;15.1. 示例&lt;/h2&gt;&lt;p&gt;smtplib模块以发送电子邮件。下面是一个示例，可发送附件。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import smtplib,mimetypes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email import Encoders&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email.MIMEBase import MIMEBase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email.MIMEText import MIMEText&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email.MIMEMultipart import MIMEMultipart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg = MIMEMultipart()                        #创建可包含附件的MIME对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg[&amp;apos;Subject&amp;apos;] = &amp;apos;this is title&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg[&amp;apos;From&amp;apos;] = &amp;apos;yjnet@21cn.com&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg[&amp;apos;To&amp;apos;] = &amp;apos;yjnet@21cn.com&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;txt = MIMEText(&amp;apos;这是邮件正文的中文测试。&amp;apos;,_charset=&amp;apos;utf-8&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg.attach(txt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename = &amp;apos;jdk15.tar&amp;apos;                      #附件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fp = open(filename,&amp;apos;rb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ctype,encoding = mimetypes.guess_type(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ctype is None or encoding is not None:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ctype = &amp;apos;application/octet-stream&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;maintype,subtype = ctype.split(&amp;apos;/&amp;apos;,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = MIMEBase(maintype,subtype)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m.set_payload(fp.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fp.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Encoders.encode_base64(m)                                             #把附件编码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m.add_header(&amp;apos;Content-disposition&amp;apos;,&amp;apos;attachment&amp;apos;,filename=filename)    #修改邮件头&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg.attach(m)                                                         #添加附件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = smtplib.SMTP(&amp;apos;smtp.21cn.com&amp;apos;)                                     #连接邮件服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.login(&amp;apos;yjnet&amp;apos;,&amp;apos;****&amp;apos;)                                               #登录邮件服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.sendmail(&amp;apos;yjnet@21cn.com&amp;apos;,&amp;apos;yjnet@21cn.com&amp;apos;,msg.as_string())         #发送邮件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-16-XMPPPY&quot;&gt;&lt;a href=&quot;#Chapter-16-XMPPPY&quot; class=&quot;headerlink&quot; title=&quot;Chapter 16. XMPPPY&quot;&gt;&lt;/a&gt;Chapter 16. XMPPPY&lt;/h2&gt;&lt;p&gt;Jabber服务器采用开发的XMPP协议，Google Talk也是采用XMPP协议的IM系统 。在Python中有一个xmpppy模块支持该协议。也就是说，我们可以通过该模块与Jabber服务器通信，是不是很Cool。&lt;/p&gt;
&lt;h2 id=&quot;16-1-示例&quot;&gt;&lt;a href=&quot;#16-1-示例&quot; class=&quot;headerlink&quot; title=&quot;16.1. 示例&quot;&gt;&lt;/a&gt;16.1. 示例&lt;/h2&gt;&lt;p&gt;下面是一个简单的示例，可使大家对该模块有一个大概的了解。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#导入xmpppy模块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import xmpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#建立Client实例，debian是我的jabber服务器名，jabber服务器的安装可参考我的Debian学习笔记。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c=xmpp.Client(&amp;apos;debian&amp;apos;,debug=[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.connect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;tcp&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#验证&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.auth(&amp;apos;yangjing&amp;apos;,&amp;apos;12345&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;old_auth&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#登入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.sendInitPresence()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#向ringkee@debian&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.send(xmpp.protocol.Message(&amp;apos;ringkee@debian &amp;apos;,&amp;apos;test message from yangjing&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;20&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#下面测试信息接收功能，如果没有信息，则pending_data()为空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;c.TCPsocket.pending_data()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果有信息，则pending_data()不为空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.TCPsocket.pending_data()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;lt;socket._socketobject object at 0xb795beb4&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#接收信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.TCPsocket.receive()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;&amp;lt;message type=&amp;apos;chat&amp;apos; to=&amp;apos;yangjing@debian/xmpppy&amp;apos; from=&amp;apos;ringkee@debian/Gaim&amp;apos;&amp;gt;&amp;lt;x xmlns=&amp;apos;jabber:x:event&amp;apos;&amp;gt;&amp;lt;composing/&amp;gt;&amp;lt;/x&amp;gt;&amp;lt;body&amp;gt;message from ringkee@debian&amp;lt;/body&amp;gt;&amp;lt;html xmlns=&amp;apos;http://jabber.org/protocol/xhtml-im&amp;apos;&amp;gt;&amp;lt;body xmlns=&amp;apos;http://www.w3.org/1999/xhtml&amp;apos;&amp;gt;message from &amp;lt;a HREF=&amp;apos;mailto:ringkee@debian&amp;apos;&amp;gt;ringkee@debian&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;/message&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#登出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.disconnect()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;16-2-cjkcodecs&quot;&gt;&lt;a href=&quot;#16-2-cjkcodecs&quot; class=&quot;headerlink&quot; title=&quot;16.2. cjkcodecs&quot;&gt;&lt;/a&gt;16.2. cjkcodecs&lt;/h2&gt;&lt;p&gt;在python2.4版以前，python不能处理cjk（中国，日本和韩国）的编码，所以就有了cjkcodecs模块。安装该模块后Python就能处理cjk字符了。下载网址：&lt;a href=&quot;http://cjkpython.i18n.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cjkpython.i18n.org/&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004,2005,2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转 载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年7月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年03月01日，增加cjkcodecs模块。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习笔记 基础篇</title>
    <link href="http://it-ebooks.flygon.net/python-note-basic/"/>
    <id>http://it-ebooks.flygon.net/python-note-basic/</id>
    <published>2016-03-13T09:20:25.000Z</published>
    <updated>2016-03-13T09:20:48.731Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004，2005，2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年07月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年06月14日，把参考篇的内容合并进来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现时国内python的中文资料极少，使学习Python较困难。国外的资料虽多，但都是英文的，使我们学习起来很不方便。有鉴于此，我开始了Python中文资料库的整理工作，以推动Python的发展和在中国的应用。在自由的世界里，正因为有你的支持和帮助，才使我得以不断前进。我相信我们每人一小步就可带动python在中国前进一大步。&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2875104&quot;&gt;1. 绪论&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811704&quot;&gt;1.1. Python历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2811781&quot;&gt;1.2. Python功能简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810170&quot;&gt;1.3. 应用范围&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810267&quot;&gt;1.4. 如何开始？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861425&quot;&gt;2. Python编程习惯与特点&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861433&quot;&gt;2.1. 代码风格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861575&quot;&gt;2.2. 保留字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861594&quot;&gt;2.3. Python运算符和表达式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861602&quot;&gt;2.3.1. Python运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861844&quot;&gt;2.3.2. 运算符优先顺序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808594&quot;&gt;2.3.3. 真值表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808746&quot;&gt;2.3.4. 复合表达式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808820&quot;&gt;2.4. 给变量赋值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808911&quot;&gt;3. Python内建对象类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808928&quot;&gt;3.1. Number数值型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809008&quot;&gt;3.2. String字符串型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2809192&quot;&gt;3.2.1. 字符串的格式化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809469&quot;&gt;3.2.2. 转义字符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875369&quot;&gt;3.2.3. Unicode字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875512&quot;&gt;3.2.4. 原始字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875536&quot;&gt;3.3. List列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875904&quot;&gt;3.4. Tuple元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875979&quot;&gt;3.5. 序列对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876078&quot;&gt;3.6. Dictionary字典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876321&quot;&gt;3.7. File文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876343&quot;&gt;3.8. 理解引用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876409&quot;&gt;3.9. copy and deepcopy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876486&quot;&gt;3.10. 标识数据类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876523&quot;&gt;3.11. 数组对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876868&quot;&gt;4. 控制语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877126&quot;&gt;5. 函数&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2877464&quot;&gt;5.1. 常用函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877751&quot;&gt;5.2. 内置类型转换函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878060&quot;&gt;5.3. 序列处理函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878241&quot;&gt;6. 模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2878430&quot;&gt;6.1. String模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878537&quot;&gt;6.2. time模块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878619&quot;&gt;7. 类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878694&quot;&gt;8. 异常处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878856&quot;&gt;9. 文件处理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2878871&quot;&gt;9.1. 文件处理的函数和方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879330&quot;&gt;9.2. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879657&quot;&gt;10. 正则表达式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2879700&quot;&gt;10.1. 基本元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2880568&quot;&gt;10.2. 操作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2881059&quot;&gt;11. 调试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2881117&quot;&gt;12. HOW-TO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-1-绪论&quot;&gt;&lt;a href=&quot;#Chapter-1-绪论&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1. 绪论&quot;&gt;&lt;/a&gt;Chapter 1. 绪论&lt;/h2&gt;&lt;h2 id=&quot;1-1-Python历史&quot;&gt;&lt;a href=&quot;#1-1-Python历史&quot; class=&quot;headerlink&quot; title=&quot;1.1. Python历史&quot;&gt;&lt;/a&gt;1.1. Python历史&lt;/h2&gt;&lt;p&gt;Python是一种开源的面向对象的脚本语言，它起源于1989年末，当时，CWI（阿姆斯特丹国家数学和计算机科学研究所）的研究员Guido van Rossum需要一种高级脚本编程语言，为其研究小组的Amoeba分布式操作系统执行管理任务。为创建新语言，他从高级数学语言ABC（ALL BASIC CODE）汲取了大量语法，并从系统编程语言Modula-3借鉴了错语处理机制。Van Rossum把这种新的语言命名为Python（大蟒蛇）—来源于BBC当时正在热播的喜剧连续剧“Monty Python”。&lt;/p&gt;
&lt;p&gt;Python于1991年初公开发行，由于功能强大和采用开源方式发行，Python的发展得很快，用户越来越多，形成了一个强大的社区力量。2001年，Python的核心开发团队移师Digital Creations公司，该公司是Zope（一个用Python编写的web应用服务器）的创始者。现在最新的版本是python2.3.4，大家可到&lt;a href=&quot;http://www.python.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.python.org&lt;/a&gt;上了解最新的Python动态和资料 。&lt;/p&gt;
&lt;h2 id=&quot;1-2-Python功能简介&quot;&gt;&lt;a href=&quot;#1-2-Python功能简介&quot; class=&quot;headerlink&quot; title=&quot;1.2. Python功能简介&quot;&gt;&lt;/a&gt;1.2. Python功能简介&lt;/h2&gt;&lt;p&gt;Python是一种解析性的，交互式的，面向对象的编程语言，类似于Perl、Tcl、Scheme或Java。&lt;/p&gt;
&lt;p&gt;Python一些主要功能介绍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python使用一种优雅的语法，可读性强。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python是一种很灵活的语言，能帮你轻松完成编程工作。并可作为一种原型开发语言，加快大型程序的开发速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有多种数据类型：numbers (integers, floating point, complex, and unlimited-length long integers), strings (ASCII 和 Unicode), lists, dictionaries。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python支持类和多层继承等的面向对象编程技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代码能打包成模块和包，方便管理和发布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持异常处理，能有效捕获和处理程序中发生的错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强大的动态数据类型支持，不同数据类型相加会引发一个异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python支持如生成器和列表嵌套等高级编程功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自动内存碎片管理，有效利用内存资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强大的类库支持，使编写文件处理、正则表达式，网络连接等程序变得相当容易。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python的交互命令行模块能方便地进行小代码调试和学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python易于扩展，可以通过C或C++编写的模块进行功能扩展。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python解析器可作为一个编程接口嵌入一个应用程序中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python可运行在多种计算机平台和操作系统中，如各位unix，windows，MacOS,OS/2等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python是开源的，可自由免费使用和发布，并且可用于商业用途以获取利润。如想详细了解Python的许可协议可到以下网址查询&lt;a href=&quot;http://www.python.org/psf/license.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.python.org/psf/license.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-3-应用范围&quot;&gt;&lt;a href=&quot;#1-3-应用范围&quot; class=&quot;headerlink&quot; title=&quot;1.3. 应用范围&quot;&gt;&lt;/a&gt;1.3. 应用范围&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;系统编程，提供大量系统接口API，能方便进行系统维护和管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图形处理，有PIL、Tkinter等图形库支持，能方便进行图形处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数学处理，NumPy扩展提供大量与许多标准数学库的接口，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文本处理，python提供的re模块能支持正则表达式，还提供SGML，XML分析模块，许多程序员利用python进行XML程序的开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库编程，程序员可通过遵循Python DB-API（数据库应用程序编程接口）规范的模块与Microsoft SQL Server，Oracle，Sybase，DB2，Mysql等数据库通信。python自带有一个Gadfly模块，提供了一个完整的SQL环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网络编程，提供丰富的模块支持sockets编程，能方便快速地开发分布式应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;作为Web应用的开发语言，支持最新的XML技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多媒体应用，Python的PyOpenGL模块封装了“OpenGL应用程序编程接口”，能进行二维和三维图像处理。PyGame模块可用于编写游戏软件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-4-如何开始？&quot;&gt;&lt;a href=&quot;#1-4-如何开始？&quot; class=&quot;headerlink&quot; title=&quot;1.4. 如何开始？&quot;&gt;&lt;/a&gt;1.4. 如何开始？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进入交互命令行方式。如果是linux类的系统，python解析器应该已经安装在/usr/local/bin/python中，直接打python就可进入交互式命令行界面，如下所示:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Python 2.3.3 (#1, Apr 27 2004, 15:17:58)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[GCC 3.2 20020903 (Red Hat Linux 8.0 3.2-7)] on linux2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;“&amp;gt;&amp;gt;&amp;gt;”符号是Python命令行界面的提示符，可按CTRL+D退出，如果是windows环境的话就要按CTRL+Z了。还可以用以下命令退出命令行界面：“import sys；sys.exit()”。如果是windows系统，可到&lt;a href=&quot;http://www.python.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.python.org/download/&lt;/a&gt;下载最新的安装程序进行安装。安装完成后直接打python也可进入命令行界面。命令行是python最简单直观，也是最方便的一种执行环境，我们可以在这里学习python语法和调试程序。如果要打印”hello world”可以输入以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print &amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello world&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以模块文件方式运行。模块文件是包含python语句的文本，以.py结尾。运行模块文件只要输入python xxx.py就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以linux脚本方式运行。和shell脚本差不多，以vi或其它文本编辑器输入以下内容:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/local/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;test ............&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;存盘后，把文件属性改为可执行，就可象shell脚本一样执行了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Table 1.1. Python命令行选项&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 选项 | 作用 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -c cmd | 在命令行直接执行python代码。如python -c &amp;apos;print &amp;quot;hello world&amp;quot;&amp;apos;。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -d | 脚本编译后从解释器产生调试信息。同PYTHONDEBUG=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -E | 忽略环境变量。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -h | 显示python命令行选项帮助信息。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -i | 脚本执行后马上进入交互命令行模式。同PYTHONINSPECT=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -O | 在执行前对解释器产生的字节码进行优化。同 PYTHONOPTIMIZE=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -OO | 在执行前对解释器产生的字节码进行优化，并删除优化代码中的嵌入式文档字符串。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -Q arg | 除法规则选项，-Qold(default)，-Qwarn，-Qwarnall，-Qnew。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -S | 解释器不自动导入site.py模块。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -t | 当脚本的tab缩排格式不一致时产生警告。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -u | 不缓冲stdin、stdout和stderr，默认是缓冲的。同PYTHONUNBUFFERED=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -v | 产生每个模块的信息。如果两个-v选项，则产生更详细的信息。同PYTHONVERBOSE=x。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -V | 显示Python的版本信息。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -W arg | 出错信息控制。(arg is action:message:category:module:lineno) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -x | 忽略源文件的首行。要在多平台上执行脚本时有用。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| file | 执行file里的代码。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| - | 从stdin里读取执行代码。 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-2-Python编程习惯与特点&quot;&gt;&lt;a href=&quot;#Chapter-2-Python编程习惯与特点&quot; class=&quot;headerlink&quot; title=&quot;Chapter 2. Python编程习惯与特点&quot;&gt;&lt;/a&gt;Chapter 2. Python编程习惯与特点&lt;/h2&gt;&lt;h2 id=&quot;2-1-代码风格&quot;&gt;&lt;a href=&quot;#2-1-代码风格&quot; class=&quot;headerlink&quot; title=&quot;2.1. 代码风格&quot;&gt;&lt;/a&gt;2.1. 代码风格&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Python中，每行程序以换行符代表结束，如果一行程序太长的话，可以用“\”符号扩展到下一行。在python中以三引号(“””)括起来的字符串，列表，元组和字典都能跨行使用。并且以小括号(…)、中括号[…]和大括号{…}包围的代码不用加“\”符也可扩展到多行。如：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Python中是以缩进来区分程序功能块的，缩进的长度不受限制，但就一个功能块来讲，最好保持一致的缩进量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果一行中有多条语句，语句间要以分号（;）分隔。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以“#”号开头的内容为注释，python解释器会忽略该行内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在python中，所有标识符可以包括英文、数字以及下划线（_），但不能以数字开头。python中的标识符是区分大小写的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以下划线开头的标识符是有特殊意义的。以单下划线开头（_foo）的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用“from xxx import *”而导入；以双下划线开头的（__foo）代表类的私有成员；以双下划线开头和结尾的（__foo__）代表python里特殊方法专用的标识，如__init__（）代表类的构造函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在交互模式下运行python时，一个下划线字符(_)是特殊标识符，它保留了表达式的最后一个计算结果。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;quot;hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;hello&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; _&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;hello&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 10+10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; _&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在python中，函数、类、模块定义的第一段代码如果是字符串的话，就把它叫作文件字串，可通过__doc__属性访问。如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def test():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;this is a document string&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return 100+1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print test.__doc__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a document string&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-2-保留字&quot;&gt;&lt;a href=&quot;#2-2-保留字&quot; class=&quot;headerlink&quot; title=&quot;2.2. 保留字&quot;&gt;&lt;/a&gt;2.2. 保留字&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;and		elif		global		or          yield&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assert		else		if		pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;break		except		import		print&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class		exec		in		raise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;continue	finally		is		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def		for		lambda		try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;del		from		not		while&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-3-Python运算符和表达式&quot;&gt;&lt;a href=&quot;#2-3-Python运算符和表达式&quot; class=&quot;headerlink&quot; title=&quot;2.3. Python运算符和表达式&quot;&gt;&lt;/a&gt;2.3. Python运算符和表达式&lt;/h2&gt;&lt;h3 id=&quot;2-3-1-Python运算符&quot;&gt;&lt;a href=&quot;#2-3-1-Python运算符&quot; class=&quot;headerlink&quot; title=&quot;2.3.1. Python运算符&quot;&gt;&lt;/a&gt;2.3.1. Python运算符&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Table 2.1. Python运算符列表&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;x+y，x-y&lt;/td&gt;
&lt;td&gt;加、减，“+”号可重载为连接符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x*y，x**y，x/y，x%y&lt;/td&gt;
&lt;td&gt;相乘、求平方、相除、求余，“*”号可重载为重复，“%”号可重载为格式化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;，&amp;lt;=，&amp;gt;，&amp;gt;=，==，&amp;lt;&amp;gt;，!=&lt;/td&gt;
&lt;td&gt;比较运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+=，-=，*=，/=，%=，**=，&amp;lt;&amp;lt;=，&amp;gt;&amp;gt;=，&amp;amp;=，^=，&amp;#124;=&lt;/td&gt;
&lt;td&gt;自变运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;#124;y&lt;/td&gt;
&lt;td&gt;按位或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x^y&lt;/td&gt;
&lt;td&gt;按位异或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;amp;y&lt;/td&gt;
&lt;td&gt;按位与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~x&lt;/td&gt;
&lt;td&gt;按位取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;lt;&amp;lt;，x&amp;gt;&amp;gt;y&lt;/td&gt;
&lt;td&gt;x向左或向右移y位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is, is not&lt;/td&gt;
&lt;td&gt;等同测试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in, not in&lt;/td&gt;
&lt;td&gt;是否为成员测试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;or，and，not&lt;/td&gt;
&lt;td&gt;逻辑运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x[i]，x[i:j]，x.y，x(…)&lt;/td&gt;
&lt;td&gt;索引，分片，限定引用，函数调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(…)，[…]，{…}，’…’&lt;/td&gt;
&lt;td&gt;元组，列表，字典，转化为字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;2-3-2-运算符优先顺序&quot;&gt;&lt;a href=&quot;#2-3-2-运算符优先顺序&quot; class=&quot;headerlink&quot; title=&quot;2.3.2. 运算符优先顺序&quot;&gt;&lt;/a&gt;2.3.2. 运算符优先顺序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Table 2.2. 运算符优先顺序列表(从最高到最低)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‘expr’&lt;/td&gt;
&lt;td&gt;字符串转换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{key:expr,…}&lt;/td&gt;
&lt;td&gt;字典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[expr1,expr2…]&lt;/td&gt;
&lt;td&gt;列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(expr1,expr2,…)&lt;/td&gt;
&lt;td&gt;元组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;function(expr,…)&lt;/td&gt;
&lt;td&gt;函数调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x[index:index]&lt;/td&gt;
&lt;td&gt;切片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x[index]&lt;/td&gt;
&lt;td&gt;下标索引取值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x.attribute&lt;/td&gt;
&lt;td&gt;属性引用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~x&lt;/td&gt;
&lt;td&gt;按位取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+x，-x&lt;/td&gt;
&lt;td&gt;正，负&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x**y&lt;/td&gt;
&lt;td&gt;幂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x*y，x/y，x%y&lt;/td&gt;
&lt;td&gt;乘，除，取模&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x+y，x-y&lt;/td&gt;
&lt;td&gt;加，减&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;lt;&amp;lt;y，x&amp;gt;&amp;gt;y&lt;/td&gt;
&lt;td&gt;移位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;amp;y&lt;/td&gt;
&lt;td&gt;按位与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x^y&lt;/td&gt;
&lt;td&gt;按位异或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;#124;y&lt;/td&gt;
&lt;td&gt;按位或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;lt;y，x&amp;lt;=y，x==y，x!=y，x&amp;gt;=y，x&amp;gt;y&lt;/td&gt;
&lt;td&gt;比较&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x is y，x is not y&lt;/td&gt;
&lt;td&gt;等同测试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x in y，x not in y&lt;/td&gt;
&lt;td&gt;成员判断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;not x&lt;/td&gt;
&lt;td&gt;逻辑否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x and y&lt;/td&gt;
&lt;td&gt;逻辑与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x or y&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lambda arg,…:expr&lt;/td&gt;
&lt;td&gt;Lambda匿名函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;2-3-3-真值表&quot;&gt;&lt;a href=&quot;#2-3-3-真值表&quot; class=&quot;headerlink&quot; title=&quot;2.3.3. 真值表&quot;&gt;&lt;/a&gt;2.3.3. 真值表&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Table 2.3.&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;对象/常量&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;“”&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;“string”&lt;/td&gt;
&lt;td&gt;真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=1&lt;/td&gt;
&lt;td&gt;真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=-1&lt;/td&gt;
&lt;td&gt;真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;()空元组&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[]空列表&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{}空字典&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;2-3-4-复合表达式&quot;&gt;&lt;a href=&quot;#2-3-4-复合表达式&quot; class=&quot;headerlink&quot; title=&quot;2.3.4. 复合表达式&quot;&gt;&lt;/a&gt;2.3.4. 复合表达式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对于and，当计算a and b时，python会计算a，如果a为假，则取a值，如果a为真，则python会计算b且整个表达式会取b值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=10,20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a and b   #a is true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=0,5   #a is false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a and b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于or，当计算a or b时，python会计算a，如果a为真，则整个表达式取a值，如果a为假，表达式将取b值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=10,20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a or b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=0,5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a or b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于not，not将反转表表达式的“实际值”，如果表达式为真，not为返回假，如为表达式为假，not为返回真。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not &amp;quot;test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-4-给变量赋值&quot;&gt;&lt;a href=&quot;#2-4-给变量赋值&quot; class=&quot;headerlink&quot; title=&quot;2.4. 给变量赋值&quot;&gt;&lt;/a&gt;2.4. 给变量赋值&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;简单赋值，Variable(变量)=Value(值)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;b=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多变量赋值，Variable1,variable2,…=Value1,Value2,…&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a,b,c=1,2,3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;多变量赋值也可用于变量交换，接上例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a,b,c=c,b,a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多目标赋值，a=b=variable&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=b=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自变赋值，如+=，-=，*=等。在自变赋值中，python仅计算一次，而普通写法需计算两次；自变赋值会修改原始对象，而不是创建一个新对象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-3-Python内建对象类型&quot;&gt;&lt;a href=&quot;#Chapter-3-Python内建对象类型&quot; class=&quot;headerlink&quot; title=&quot;Chapter 3. Python内建对象类型&quot;&gt;&lt;/a&gt;Chapter 3. Python内建对象类型&lt;/h2&gt;&lt;p&gt;在Python中，所有数据都是对象，数据有各种类型，如数值型、列表型、字符串型等。除系统内建的数据类型外，程序员也可以创建自已的数据类型。以下主要介绍Python内建的数据类型。&lt;/p&gt;
&lt;h2 id=&quot;3-1-Number数值型&quot;&gt;&lt;a href=&quot;#3-1-Number数值型&quot; class=&quot;headerlink&quot; title=&quot;3.1. Number数值型&quot;&gt;&lt;/a&gt;3.1. Number数值型&lt;/h2&gt;&lt;p&gt;在python中，数值有四种类型，分别是整型、长整形、浮点型和复数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;整型—从-2147483648至2147483647，有符号位32位长，可表达的最大数为2^31-1。如：number=123，number1=-123。在数字前加0x或0X 前缀表示十六进制数，在数字前加前缀0表示八进制数，与C/C++ and perl一样。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为方便起见，sys模块包含一个maxint成员，该成员保留了整形变量的最大正数值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print sys.maxint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2147483647&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;长整型—python支持任意长度的长整型，长整型的最大值和最小值由可用的内存确定。长整型数在数字常量尾加L or l，一般都是用L，因为小写的l太容易与数字1混淆了。如：long=1232132131231232132132131L。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浮点数—python支持普通十进制和科学计数法表示的浮点数。如：number=123.456，nubmer1=123.2E10。浮点数在python中的存储格式与C中的双精度数相同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复数—复数的实部和虚部用加号分开，虚部使用后缀j表示，如：number=1.2+2j&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-2-String字符串型&quot;&gt;&lt;a href=&quot;#3-2-String字符串型&quot; class=&quot;headerlink&quot; title=&quot;3.2. String字符串型&quot;&gt;&lt;/a&gt;3.2. String字符串型&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字符串在python被看成是单个字符的序列，具有序列对象的特殊功能，字符串是固定的，不可变的。如：string=”hello world”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可在字符串中使用单引号和双引号。如：string=”I’m a boy”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串内部的一个反斜杠“\”可允许把字符串放于多行：如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;quot;test \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... python&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;test python&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用三个单引号或双引号可使字符串跨行显示。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;helptext=&amp;quot;&amp;quot;&amp;quot;this a help test.if you have any quesions.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            please call me anytime.I will help you.I&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            like python.I hope so as you.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用“+”号可连接字符串。如：string = “hello” + “world”，注意，不能将字符串与其它对象进行连接。如string = “ok” + 5。其实不用“+”号，直接用空格也可连接两个字符串。如：string=”hello” “world”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用“*”号重复字符串，如：’hello’*5会生成’hellohellohellohellohello’。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用索引访问字符串中的字符。如：string=”hello world”，print string[1]将显示字符e。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串可用in或not in运算符来测试字符是不属于一个字符串的成员。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可对字符串分片，如string=”hello world”,print string[6:]将显示world。分片的格式为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string[start:end]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分片和索引的规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回的字符串包含从start起始到end但不包括end结束的所有字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若指定了start但未指定end，则一直向后分片，直至字符串结束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若指定了end但未指定start，则从0开始分片直至end，但不包括end指定的字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若start和end为负数，则索引从字符串尾部开始算起，最后一个字符为-1。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python提供了一个string模块来进行字符串处理。&lt;/p&gt;
&lt;h3 id=&quot;3-2-1-字符串的格式化&quot;&gt;&lt;a href=&quot;#3-2-1-字符串的格式化&quot; class=&quot;headerlink&quot; title=&quot;3.2.1. 字符串的格式化&quot;&gt;&lt;/a&gt;3.2.1. 字符串的格式化&lt;/h3&gt;&lt;p&gt;象C 中的sprintf函数一样，可以用“%”来格式化字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.1. 字符串格式化代码&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;格式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%%&lt;/td&gt;
&lt;td&gt;百分号标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;
&lt;td&gt;字符及其ASCII码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%s&lt;/td&gt;
&lt;td&gt;字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%d&lt;/td&gt;
&lt;td&gt;有符号整数(十进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%u&lt;/td&gt;
&lt;td&gt;无符号整数(十进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%o&lt;/td&gt;
&lt;td&gt;无符号整数(八进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%x&lt;/td&gt;
&lt;td&gt;无符号整数(十六进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%X&lt;/td&gt;
&lt;td&gt;无符号整数(十六进制大写字符)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%e&lt;/td&gt;
&lt;td&gt;浮点数字(科学计数法)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%E&lt;/td&gt;
&lt;td&gt;浮点数字(科学计数法，用E代替e)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%f&lt;/td&gt;
&lt;td&gt;浮点数字(用小数点符号)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%g&lt;/td&gt;
&lt;td&gt;浮点数字(根据值的大小采用%e或%f)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%G&lt;/td&gt;
&lt;td&gt;浮点数字(类似于%g)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%p&lt;/td&gt;
&lt;td&gt;指针(用十六进制打印值的内存地址)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%n&lt;/td&gt;
&lt;td&gt;存储输出字符的数量放进参数列表的下一个变量中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;%格式化符也可用于字典，可用%(name)引用字典中的元素进行格式化输出。&lt;/p&gt;
&lt;p&gt;负号指时数字应该是左对齐的，“0”告诉Python用前导0填充数字，正号指时数字总是显示它的正负(+，-)符号，即使数字是正数也不例外。&lt;/p&gt;
&lt;p&gt;可指定最小的字段宽度，如：”%5d” % 2。也可用句点符指定附加的精度，如：”%.3d” % 3。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3-2-2-转义字符&quot;&gt;&lt;a href=&quot;#3-2-2-转义字符&quot; class=&quot;headerlink&quot; title=&quot;3.2.2. 转义字符&quot;&gt;&lt;/a&gt;3.2.2. 转义字符&lt;/h3&gt;&lt;p&gt;在需要在字符中使用特殊字符时，python用反斜杠()转义字符。如下表：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.2. python支持的转义字符表&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;转义字符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;(在行尾时)&lt;/td&gt;
&lt;td&gt;续行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;反斜杠符号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\’&lt;/td&gt;
&lt;td&gt;单引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\”&lt;/td&gt;
&lt;td&gt;双引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\a&lt;/td&gt;
&lt;td&gt;响铃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;退格(Backspace)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\e&lt;/td&gt;
&lt;td&gt;转义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\000&lt;/td&gt;
&lt;td&gt;空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\v&lt;/td&gt;
&lt;td&gt;纵向制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;横向制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;回车&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;换页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\oyy&lt;/td&gt;
&lt;td&gt;八进制数yy代表的字符，例如：\o12代表换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\xyy&lt;/td&gt;
&lt;td&gt;十进制数yy代表的字符，例如：\x0a代表换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\other&lt;/td&gt;
&lt;td&gt;其它的字符以普通格式输出&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;3-2-3-Unicode字符串&quot;&gt;&lt;a href=&quot;#3-2-3-Unicode字符串&quot; class=&quot;headerlink&quot; title=&quot;3.2.3. Unicode字符串&quot;&gt;&lt;/a&gt;3.2.3. Unicode字符串&lt;/h3&gt;&lt;p&gt;在python2.0中才完全支持Unicode字符串，Unicode字符采用16位(0—65535)值表示，能进行多语言支持。要使用Unicode字符串，只要在字符串前加上“u”即可。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=u&amp;quot;test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原始Unicode字符串用ur前缀，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; u&amp;apos;hello world\0020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;hello world\x020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ur&amp;apos;hello world\0020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;hello world\\0020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-2-3-1-Unicode转换&quot;&gt;&lt;a href=&quot;#3-2-3-1-Unicode转换&quot; class=&quot;headerlink&quot; title=&quot;3.2.3.1. Unicode转换&quot;&gt;&lt;/a&gt;3.2.3.1. Unicode转换&lt;/h4&gt;&lt;p&gt;只要和Unicode连接，就会产生Unicode字串。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;help&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;help&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;help，&amp;apos; + u&amp;apos;python&amp;apos;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;help，python&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于ASCII(7位)兼容的字串，可和内置的str()函数把Unicode字串转换成ASCII字串。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(u&amp;apos;hello world&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;hello world&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;转换非ASCII兼容的字串会出错。编码和译码字符串时的错误引发UnicodeError异常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可使用encode()函数转换Unicode字串格式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;unicode\xb1\xe0\xc2\xeb\xb2\xe2\xca\xd4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.encode(&amp;apos;utf-8&amp;apos;)   #转换成utf-8，显示结果会根据终端的字符集支持不同而不同，下面是在GB18030下的显示结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;unicode\xc2\xb1\xc3\xa0\xc3\x82\xc3\xab\xc2\xb2\xc3\xa2\xc3\x8a\xc3\x94&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可使用unicode()函数把字符串转换成unicode格式，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=u&amp;apos;unicode测试&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;unicode\xb2\xe2\xca\xd4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.encode(&amp;apos;utf-8&amp;apos;)     #把unicode字串转换成utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;unicode\xc2\xb2\xc3\xa2\xc3\x8a\xc3\x94&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=a.encode(&amp;apos;utf-8&amp;apos;)   #给变量b赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;unicode\xc2\xb2\xc3\xa2\xc3\x8a\xc3\x94&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;unicode(b,&amp;apos;utf-8&amp;apos;)           #用unicode()函数把utf-8格式字串转换回unicode格式。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;unicode\xb2\xe2\xca\xd4&amp;apos;      #和原始的这是a相同&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ord()支持unicode，可以显示特定字符的unicode号码，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;ord(&amp;apos;A&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用unichr()函数可将unicode号码转换回unicode字符，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; unichr(65)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;A&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-2-4-原始字符串&quot;&gt;&lt;a href=&quot;#3-2-4-原始字符串&quot; class=&quot;headerlink&quot; title=&quot;3.2.4. 原始字符串&quot;&gt;&lt;/a&gt;3.2.4. 原始字符串&lt;/h3&gt;&lt;p&gt;有时我们并不想让转义字符生效，我们只想显示字符串原来的意思，这就要用r和R来定义原始字符串。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;print r&amp;apos;\t\r&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际输出为“\t\r”。&lt;/p&gt;
&lt;h2 id=&quot;3-3-List列表&quot;&gt;&lt;a href=&quot;#3-3-List列表&quot; class=&quot;headerlink&quot; title=&quot;3.3. List列表&quot;&gt;&lt;/a&gt;3.3. List列表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;列表是序列对象，可包含任意的Python数据信息，如字符串、数字、列表、元组等。列表的数据是可变的，我们可通过对象方法对列表中的数据进行增加、修改、删除等操作。可以通过list(seq)函数把一个序列类型转换成一个列表。列表的几个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot; ]&lt;/code&gt;，这是字符列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ 1, 2, 3, 4 ]&lt;/code&gt;，这是数字列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ [1,2,3,4], [&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;] ]&lt;/code&gt;，这是列表的列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ (1,2,3,4), (&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;) ]&lt;/code&gt;，这是元组列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;list((1,2))把一个元组转换成一个列表[1,2]，list(‘test’)可把字符串转换成[‘t’,’e’,’s’,’t’]列表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问列表可通过索引来引用，如：list[0]将引用列表的第一个值。list[0:1]返回第一和第二个元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用range()和xrange()函数可自动生成列表，具体用法请参考“python参考篇”的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可通过列表综合来创建列表，该功能是在python2.0版本中新增加的。如果想对列表中的每个项进行运算并把结果存储在一个新列表中，可者想创建一个仅包含特定满足某种条件的项，采用该方法是很适合的。如：[x*x for x in range(1,10)]会得到一个X的平方的新列表；我们还可添加if条件控制输出，如：[x*x for x in range(1,10) if x%2==0]；还可在列表中使用多个for语句，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; [x+y for x in &amp;quot;123&amp;quot; for y in &amp;quot;abc&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;1a&amp;apos;, &amp;apos;1b&amp;apos;, &amp;apos;1c&amp;apos;, &amp;apos;2a&amp;apos;, &amp;apos;2b&amp;apos;, &amp;apos;2c&amp;apos;, &amp;apos;3a&amp;apos;, &amp;apos;3b&amp;apos;, &amp;apos;3c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;x,y值可取列表或元组等，以构成更复杂的结构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“+”号可连接两个列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问列表的列表(嵌套列表)可用list[1][0]，这将访问嵌套中的第二个列表的第一个元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用数字与列表相乘以复制内容，如：list*2会得到一个[1,2,3,4,1,2,3,4]的列表。注意，不能用列表与列表相乘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由于列表是可变的，我们可用赋值语句进行操作，如：list[0] = 2。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;列表对象方法可对列表进行操作，如列表内容的添加，删除，排序等。如list.sort()可对list列表进行排序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;**Table 3.3\. 列表对象支持的方法**

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 方法 | 描述 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| append(x) | 在列表尾部追加单个对象x。使用多个参数会引起异常。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| count(x) | 返回对象x在列表中出现的次数。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| extend(L) | 将列表L中的表项添加到列表中。返回None。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Index(x) | 返回列表中匹配对象x的第一个列表项的索引。无匹配元素时产生异常。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| insert(i,x) | 在索引为i的元素前插入对象x。如list.insert(0,x)在第一项前插入对象。返回None。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| pop(x) | 删除列表中索引为x的表项，并返回该表项的值。若未指定索引，pop返回列表最后一项。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| remove(x) | 删除列表中匹配对象x的第一个元素。匹配元素时产生异常。返回None。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| reverse() | 颠倒列表元素的顺序。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| sort() | 对列表排序，返回none。bisect模块可用于排序列表项的添加和删除。 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;3-4-Tuple元组&quot;&gt;&lt;a href=&quot;#3-4-Tuple元组&quot; class=&quot;headerlink&quot; title=&quot;3.4. Tuple元组&quot;&gt;&lt;/a&gt;3.4. Tuple元组&lt;/h2&gt;&lt;p&gt;Tuple(元组)和List(列表)很相似，但元组是不可变的。不能对元组中的元素进行添加，修改和删除操作。如果需修改元组内容只有重建元组。元组用小括号来表示。如tuple=(1,2,3)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tuple=(1,)，这是单个元素的元组表示，需加额外的逗号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tuple=1，2，3，4，这也可以是一个元组，在不使用圆括号而不会导致混淆时，Python允许不使用圆括号的元组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和列表一样，可对元组进行索引、分片、连接和重复。也可用len()求元组长度。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;元组的索引用tuple[i]的形式，而不是tuple(i)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和列表类似，使用tuple(seq)可把其它序列类型转换成元组。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-5-序列对象&quot;&gt;&lt;a href=&quot;#3-5-序列对象&quot; class=&quot;headerlink&quot; title=&quot;3.5. 序列对象&quot;&gt;&lt;/a&gt;3.5. 序列对象&lt;/h2&gt;&lt;p&gt;上面介绍的字符串、列表和元组的对象类型均属于称为序列的Python对象。它是一种可使用数字化索引进行访问其中元素的对象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可用算术运算符联接或重复序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;比较运算符(&amp;lt;，&amp;lt;=，&amp;gt;，&amp;gt;=，!=，==)也可用于序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可通过下标(test[1])，切片(test[1:3])和解包来访问序列的某部份。解包示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;s=1,2,3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;x,y,z=s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print x,y,z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1,2,3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;in运算符可判断当有对象是否序列对象成员，如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;list = [1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;1 in list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;4 in list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可通过循环运算符对序列对象进行迭代操作。如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for day in days:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print day&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关序列的处理函数请参考“python参考篇”相关内容，这里就不详细讲了。&lt;/p&gt;
&lt;h2 id=&quot;3-6-Dictionary字典&quot;&gt;&lt;a href=&quot;#3-6-Dictionary字典&quot; class=&quot;headerlink&quot; title=&quot;3.6. Dictionary字典&quot;&gt;&lt;/a&gt;3.6. Dictionary字典&lt;/h2&gt;&lt;p&gt;字典是一个用大括号括起来的键值对，字典元素分为两部份，键(key)和值。字典是python中唯一内置映射数据类型。通过指定的键从字典访问值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;monthdays = &amp;#123; &amp;quot;Jan&amp;quot;:31, &amp;quot;Feb&amp;quot;:28, &amp;quot;Mar&amp;quot;:31, &amp;quot;Apr&amp;quot;:30, &amp;quot;May&amp;quot;:31, &amp;quot;Jun&amp;quot;:30, &amp;quot;Jul&amp;quot;:31, &amp;quot;Aug&amp;quot;:31, &amp;quot;Sep&amp;quot;:30, &amp;quot;Oct&amp;quot;:31, &amp;quot;Nov&amp;quot;:30,&amp;quot;Dec&amp;quot;:31 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字典可嵌套，可以在一个字典里包含另一个字典。如test={“test”:{“mytest”:10} }&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用键访问字典，如monthdays[“Jan”]，可访问值31。如果没有找到指定的键，则解释器会引起异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典是可修改，如monthdays[“Jan”]=30，可把Jan的值由31改为30。如monthdays[“test”]=30可添加一个新键值对。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;del monthdays[“test”]可删除字典条目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典不属序列对象，所以不能进行连接和相乘操作。字典是没有顺序的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典提供keys和values方法，用来返回字典中定义的所有键和值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和列表一样，字典也提供了对象方法来对字典进行操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;**Table 3.4\. 字典方法**

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 方法 | 描述 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| has_key(x) | 如果字典中有键x，则返回真。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| keys() | 返回字典中键的列表 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| values() | 返回字典中值的列表。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| items() | 返回tuples的列表。每个tuple由字典的键和相应值组成。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| clear() | 删除字典的所有条目。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| copy() | 返回字典高层结构的一个拷贝，但不复制嵌入结构，而只复制对那些结构的引用。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| update(x) | 用字典x中的键值对更新字典内容。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| get(x[,y]) | 返回键x，若未找到该键返回none，若提供y，则未找到x时返回y。 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;3-7-File文件&quot;&gt;&lt;a href=&quot;#3-7-File文件&quot; class=&quot;headerlink&quot; title=&quot;3.7. File文件&quot;&gt;&lt;/a&gt;3.7. File文件&lt;/h2&gt;&lt;p&gt;可用内置的open()函数对文件进行操作。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;input = open(&amp;quot;test.txt&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for line in input.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-8-理解引用&quot;&gt;&lt;a href=&quot;#3-8-理解引用&quot; class=&quot;headerlink&quot; title=&quot;3.8. 理解引用&quot;&gt;&lt;/a&gt;3.8. 理解引用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python把一块数据存储在对象中，变量是对象的唯一引用；它们是计算机内存中特殊地点的名字。所有对象都具有唯一的身份号、类型和值。对象的类型不会改变，对于可变类型而言，它的值是可变的。id(obj)函数可用于检索对象的身份，也就是内存中的对象的地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每个对象都包含引用计数器，它记录当前有多少个变量正在引用该对象。当给对象指定一个变量或使对象成为列表或其它包容器的成员时，引用计数就增加；当从包容器中撤消、重新分配或删除对象时，引用计数减少。当引用计数达到0值时(即没有任何变量引用这个对象)，python的回收机制会自动回收它使用的内存。注意，del可用来删除变量，但不能删除对象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sys.gettrefcount(obj)函数可返回给定对象的引用计数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-9-copy-and-deepcopy&quot;&gt;&lt;a href=&quot;#3-9-copy-and-deepcopy&quot; class=&quot;headerlink&quot; title=&quot;3.9. copy and deepcopy&quot;&gt;&lt;/a&gt;3.9. copy and deepcopy&lt;/h2&gt;&lt;p&gt;通过给列表分配一个变量能创建对列表的引用，如果要创建列表的副本就要理解浅副本和深副本的概念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;列表或其他包容器对象的浅副本(Shallow)能够生成对象本身的副本，但也会创建对由列表包含的对象的引用。可用分片(object[:])和copy模块的copy(obj)函数创建。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;列表或其他对象包容器对象的深副本能够生成对象本身的副本，并递归地生成所有子对象的副本。可用copy模块的deepcopy(obj)函数创建。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较两种副本，一般情况下表现一样，但当列表内包含另一个列表的情况下，父列表的浅副本将包含对子列表引用，而不是独立副本。其结果是，当更改内部列表时，从父列表的两个副本中都可见，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[1,2,3,[4,5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=a[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [4, 5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[3].remove(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [5]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是深副本，就不会出现这种情况。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[1,2,3,[4,5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=copy.deepcopy(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [4, 5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[3].remove(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [4, 5]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-10-标识数据类型&quot;&gt;&lt;a href=&quot;#3-10-标识数据类型&quot; class=&quot;headerlink&quot; title=&quot;3.10. 标识数据类型&quot;&gt;&lt;/a&gt;3.10. 标识数据类型&lt;/h2&gt;&lt;p&gt;可通过type(obj)函数标识数据类型，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;list&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(copy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;module&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;int&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;types模块包含Python的内置数据类型的类型对象。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import types&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; types.ListType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;list&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; types.IntType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;int&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-11-数组对象&quot;&gt;&lt;a href=&quot;#3-11-数组对象&quot; class=&quot;headerlink&quot; title=&quot;3.11. 数组对象&quot;&gt;&lt;/a&gt;3.11. 数组对象&lt;/h2&gt;&lt;p&gt;数组对象与列表类似，但数组只包含某些类型的简单数据。所以当数据较简单，且要求性能好的情况下，使用数组是一个好的选择。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.5. 数组类型代码&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;代码&lt;/th&gt;
&lt;th&gt;等价的C类型&lt;/th&gt;
&lt;th&gt;以字节为单位的最小尺寸&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b(B)&lt;/td&gt;
&lt;td&gt;byte(unsigned byte)&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h(H)&lt;/td&gt;
&lt;td&gt;short(unsigned short)&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i(I)&lt;/td&gt;
&lt;td&gt;int(unsigned int)&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;l(L)&lt;/td&gt;
&lt;td&gt;long(unsigned long)&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;数组创建方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z=array.array(&amp;quot;b&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.append(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组的itemsize和typecode成员可分别检索数组项的大小和数组对象的类型代码，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.itemsize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.typecode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-1-数组类型与其它数据类型的转换&quot;&gt;&lt;a href=&quot;#3-1-数组类型与其它数据类型的转换&quot; class=&quot;headerlink&quot; title=&quot;3.1. 数组类型与其它数据类型的转换&quot;&gt;&lt;/a&gt;3.1. 数组类型与其它数据类型的转换&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tolist()方法可把数组转换为列表，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.tolist()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fromlist(list)方法可把列表项附加到数组的末尾，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.fromlist([10,11])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1, 2, 3, 10, 11])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如添加的列表类型与数组类型不同，则fromlist(list)不会把任何项添加到数组对象中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tostring()方法，可以把数组转换为字节的序列，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.tostring()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;\x01\x02\x03\n\x0b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fromstring(list)方法刚好与tostring()相反，它获取一个字节串，并把它们转换为数组的值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.fromstring(&amp;quot;\x0b&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1, 2, 3, 10, 11, 11])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tofile(file)方法可把数组转换为字节的序列，并把它们写入文件，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; f=open(&amp;quot;aa&amp;quot;,&amp;quot;wb&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.tofile(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; f.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fromfile(file,count)方法用于从文件对象中读取特定数目的项，并把它们附加到数组中，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.fromfile(open(&amp;quot;aa&amp;quot;,&amp;quot;rb&amp;quot;),2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1, 2, 3, 10, 11, 11, 1, 2])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当取数项大于文件数据项时，formfile会产生EOFError异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数组对象支持列表中的很多相同函数和方法：len，append等。访问成员的方法也可列表一样，可用下标和分片。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-4-控制语句&quot;&gt;&lt;a href=&quot;#Chapter-4-控制语句&quot; class=&quot;headerlink&quot; title=&quot;Chapter 4. 控制语句&quot;&gt;&lt;/a&gt;Chapter 4. 控制语句&lt;/h2&gt;&lt;p&gt;流程控制是程序设计中一个重要的内容，Python支持三种不同的控制结构：if，for和while。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if语句判断表达式是否为真，如果为真则执行指定语句。if语句的格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if   EXPRESSION1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         STATEMENT1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif EXPRESSION2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         STATEMENT2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         STATEMENT3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果第一个表达式为真，则执行statement1，否则进行进一步的测试，如果第二个表达式为真则执行statement2，否则执行statement3。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意语句的缩进量要保持一致。在python中没有switch和case语句，我们可通过多重elif来达到相同的效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mytest = raw_input(&amp;quot;please input a number:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mytest = int(mytest)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if mytest == 10:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;quot;you input number is ten.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif mytest == 20:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;quot;you input number is twenty.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;quot;another number.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;脚本的执行效果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;t03:~# python test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;please input a number:10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;you input number is ten.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t03:~# python test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;please input a number:20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;you input number is twenty.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t03:~# python test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;please input a number:777&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;another number.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;while进行循环控制，它对表达式进行测试，如果为真，则循环执行循环体。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;while EXPRESSION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          STATEMENT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          STATEMENT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果测试为假，则会执行else块。如果循环被中断(break)，则else块不会执行。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; while a &amp;amp;gt; 5:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print &amp;quot;a&amp;apos;s value is five&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&amp;apos;s value is five&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;for循环可遍历对象，并可进行迭代操作。语名格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for TARGET in OBJECTS：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       STATEMENT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       STATEMENT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;和while一样，在循环正常退出时，会执行else块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; mylist = &amp;quot;for statement&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for word in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print word&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print &amp;quot;End list&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;End list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在循环的过程中，我们可使用循环控制语句来控制循环的执行。有三个控制语句，分别是break、continue和pass。它们的作用分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;break语句会立即退出当前循环，不会执行else块的内容。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; mylist = [&amp;quot;zope&amp;quot;,&amp;quot;python&amp;quot;,&amp;quot;perl&amp;quot;,&amp;quot;Linux&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for technic in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     if technic == &amp;quot;perl&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             print technic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zope&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;continue语句会忽略后面的语句，强制进入下一次循环。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; mylist = [&amp;quot;zope&amp;quot;,&amp;quot;python&amp;quot;,&amp;quot;perl&amp;quot;,&amp;quot;Linux&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for technic in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     if technic == &amp;quot;perl&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             print technic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zope&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pass不做任何事情。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for technic in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     if technic == &amp;quot;perl&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             print technic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zope&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-5-函数&quot;&gt;&lt;a href=&quot;#Chapter-5-函数&quot; class=&quot;headerlink&quot; title=&quot;Chapter 5. 函数&quot;&gt;&lt;/a&gt;Chapter 5. 函数&lt;/h2&gt;&lt;p&gt;函数是一个能完成特定功能的代码块，可在程序中重复使用，减少程序的代码量和提高程序的执行效率。在python中函数定义语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function_name(arg1,arg2[,...]):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[return value]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;返回值不是必须的，如果没有return语句，则Python默认返回值None。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;函数名的命名规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;函数名必须以下划线或字母开头，可以包含任意字母、数字或下划线的组合。不能使用任何的标点符号；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数名是区分大小写的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数名不能是保留字。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python使用名称空间的概念存储对象，这个名称空间就是对象作用的区域， 不同对象存在于不同的作用域。下面是不同对象的作用域规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;每个模块都有自已的全局作用域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数定义的对象属局部作用域，只在函数内有效，不会影响全局作用域中的对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;赋值对象属局部作用域，除非使用global关键字进行声明。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGB规则是Python查找名字的规则，下面是LGB规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;大多数名字引用在三个作用域中查找：先局部(Local)，次之全局(Global)，再次之内置(Build-in)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(b):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     test=a*b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     return test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print test(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;b在局部作用域中找到,a在全局作用域中找到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如想在局部作用域中改变全局作用域的对象，必须使用global关键字。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#没用global时的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; name=&amp;quot;Jims&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def set():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     name=&amp;quot;ringkee&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; set()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Jims&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#使用global后的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; name=&amp;quot;Jims&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def set1():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     global name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     name=&amp;quot;ringkee&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; set1()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ringkee&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘global’声明把赋值的名字映射到一个包含它的模块的作用域中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数的参数是函数与外部沟通的桥梁，它可接收外部传递过来的值。参数传递的规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在一个函数中对参数名赋值不影响调用者。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(a):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     a=a+1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1             # a值不变&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在一个函数中改变一个可变的对象参数会影响调用者。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=[1,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     a=5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     b[0]=4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 [4, 2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[4, 2]    # b值已被更改&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参数是对象指针，无需定义传递的对象类型。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     return a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(1,2)   #数值型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;)   #字符型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;ab&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test([12],[11])   #列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[12, 11]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数中的参数接收传递的值，参数可分默认参数，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function(ARG=VALUE)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;元组（Tuples）参数：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function(*ARG)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;字典（dictionary）参数：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function(**ARG)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一些函数规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;默认值必须在非默认参数之后；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在单个函数定义中，只能使用一个tuple参数（*ARG）和一个字典参数（**ARG）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tuple参数必须在连接参数和默认参数之后。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典参数必须在最后定义。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-1-常用函数&quot;&gt;&lt;a href=&quot;#5-1-常用函数&quot; class=&quot;headerlink&quot; title=&quot;5.1. 常用函数&quot;&gt;&lt;/a&gt;5.1. 常用函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;abs(x)&lt;/p&gt;
&lt;p&gt;abs()返回一个数字的绝对值。如果给出复数，返回值就是该复数的模。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print abs(-100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print abs(1+2j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.2360679775&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;callable(object)&lt;/p&gt;
&lt;p&gt;callable()函数用于测试对象是否可调用，如果可以则返回1(真)；否则返回0(假)。可调用对象包括函数、方法、代码对象、类和已经定义了“调用”方法的类实例。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print callable(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print callable(chr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cmp(x,y)&lt;/p&gt;
&lt;p&gt;cmp()函数比较x和y两个对象，并根据比较结果返回一个整数，如果x&amp;lt;y，则返回-1；如果x&amp;gt;y，则返回1,如果x==y则返回0。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;b=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;c=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print cmp(a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print cmp(b,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print cmp(b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;divmod(x,y)&lt;/p&gt;
&lt;p&gt;divmod(x,y)函数完成除法运算，返回商和余数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; divmod(10,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; divmod(9,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isinstance(object,class-or-type-or-tuple) -&amp;gt; bool&lt;/p&gt;
&lt;p&gt;测试对象类型&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;apos;isinstance test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=1234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;len(object) -&amp;gt; integer&lt;/p&gt;
&lt;p&gt;len()函数返回字符串和序列的长度。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; len(&amp;quot;aa&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; len([1,2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pow(x,y[,z])&lt;/p&gt;
&lt;p&gt;pow()函数返回以x为底，y为指数的幂。如果给出z值，该函数就计算x的y次幂值被z取模的值。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print pow(2,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print pow(2,4,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print pow(2.4,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13.824&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;range([lower,]stop[,step])&lt;/p&gt;
&lt;p&gt;range()函数可按参数生成连续的有序整数列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; range(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; range(1,10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; range(1,10,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 3, 5, 7, 9]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;round(x[,n])&lt;/p&gt;
&lt;p&gt;round()函数返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; round(3.333)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; round(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; round(5.9)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;type(obj)&lt;/p&gt;
&lt;p&gt;type()函数可返回对象的数据类型。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;list&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(copy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;module&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;int&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xrange([lower,]stop[,step])&lt;/p&gt;
&lt;p&gt;xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列表很大时，这个特性能为我们节省内存。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=xrange(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-2-内置类型转换函数&quot;&gt;&lt;a href=&quot;#5-2-内置类型转换函数&quot; class=&quot;headerlink&quot; title=&quot;5.2. 内置类型转换函数&quot;&gt;&lt;/a&gt;5.2. 内置类型转换函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;chr(i)&lt;/p&gt;
&lt;p&gt;chr()函数返回ASCII码对应的字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print chr(65)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print chr(66)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print chr(65)+chr(66)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;complex(real[,imaginary])&lt;/p&gt;
&lt;p&gt;complex()函数可把字符串或数字转换为复数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(&amp;quot;2+1j&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+1j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(&amp;quot;2&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+0j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+1j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(2L,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+1j)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;float(x)&lt;/p&gt;
&lt;p&gt;float()函数把一个数字或字符串转换成浮点数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; float(&amp;quot;12&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; float(12L)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; float(12.2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12.199999999999999&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hex(x)&lt;/p&gt;
&lt;p&gt;hex()函数可把整数转换成十六进制数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hex(16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;0x10&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hex(123)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;0x7b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;long(x[,base])&lt;/p&gt;
&lt;p&gt;long()函数把数字和字符串转换成长整数，base为可选的基数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; long(&amp;quot;123&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123L&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; long(11)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11L&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;list(x)&lt;/p&gt;
&lt;p&gt;list()函数可将序列对象转换成列表。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; list(&amp;quot;hello world&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;h&amp;apos;, &amp;apos;e&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos; &amp;apos;, &amp;apos;w&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos;r&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;d&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; list((1,2,3,4))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, 4]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int(x[,base])&lt;/p&gt;
&lt;p&gt;int()函数把数字和字符串转换成一个整数，base为可选的基数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(3.3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(3L)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(&amp;quot;13&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(&amp;quot;14&amp;quot;,15)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;min(x[,y,z…])&lt;/p&gt;
&lt;p&gt;min()函数返回给定参数的最小值，参数可以为序列。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; min(1,2,3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; min((1,2,3),(2,3,4))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, 2, 3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max(x[,y,z…])&lt;/p&gt;
&lt;p&gt;max()函数返回给定参数的最大值，参数可以为序列。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; max(1,2,3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; max((1,2,3),(2,3,4))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;oct(x)&lt;/p&gt;
&lt;p&gt;oct()函数可把给出的整数转换成八进制数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; oct(8)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;010&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; oct(123)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;0173&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ord(x)&lt;/p&gt;
&lt;p&gt;ord()函数返回一个字符串参数的ASCII码或Unicode值。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ord(&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ord(u&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;str(obj)&lt;/p&gt;
&lt;p&gt;str()函数把对象转换成可打印字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(&amp;quot;4&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(3+2j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(3+2j)&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tuple(x)&lt;/p&gt;
&lt;p&gt;tuple()函数把序列对象转换成tuple。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; tuple(&amp;quot;hello world&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&amp;apos;h&amp;apos;, &amp;apos;e&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos; &amp;apos;, &amp;apos;w&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos;r&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;d&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; tuple([1,2,3,4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, 2, 3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-3-序列处理函数&quot;&gt;&lt;a href=&quot;#5-3-序列处理函数&quot; class=&quot;headerlink&quot; title=&quot;5.3. 序列处理函数&quot;&gt;&lt;/a&gt;5.3. 序列处理函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用函数中的len()、max()和min()同样可用于序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;filter(function,list)&lt;/p&gt;
&lt;p&gt;调用filter()时，它会把一个函数应用于序列中的每个项，并返回该函数返回真值时的所有项，从而过滤掉返回假值的所有项。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def nobad(s):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     return s.find(&amp;quot;bad&amp;quot;) == -1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = [&amp;quot;bad&amp;quot;,&amp;quot;good&amp;quot;,&amp;quot;bade&amp;quot;,&amp;quot;we&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; filter(nobad,s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;good&amp;apos;, &amp;apos;we&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子通过把nobad()函数应用于s序列中所有项，过滤掉所有包含“bad”的项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;map(function,list[,list])&lt;/p&gt;
&lt;p&gt;map()函数把一个函数应用于序列中所有项，并返回一个列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s=[&amp;quot;python&amp;quot;,&amp;quot;zope&amp;quot;,&amp;quot;linux&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; map(string.capitalize,s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;Python&amp;apos;, &amp;apos;Zope&amp;apos;, &amp;apos;Linux&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;map()还可同时应用于多个列表。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import operator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s=[1,2,3]; t=[3,2,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; map(operator.mul,s,t)   # s[i]*t[j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[3, 4, 3]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果传递一个None值，而不是一个函数，则map()会把每个序列中的相应元素合并起来，并返回该元组。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[1,2];b=[3,4];c=[5,6]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; map(None,a,b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1, 3, 5), (2, 4, 6)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;reduce(function,seq[,init])&lt;/p&gt;
&lt;p&gt;reduce()函数获得序列中前两个项，并把它传递给提供的函数，获得结果后再取序列中的下一项，连同结果再传递给函数，以此类推，直到处理完所有项为止。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import operator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; reduce(operator.mul,[2,3,4,5])  # ((2*3)*4)*5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; reduce(operator.mul,[2,3,4,5],1) # (((1*2)*3)*4)*5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; reduce(operator.mul,[2,3,4,5],2)  # (((2*2)*3)*4)*5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;zip(seq[,seq,…])&lt;/p&gt;
&lt;p&gt;zip()函数可把两个或多个序列中的相应项合并在一起，并以元组的格式返回它们，在处理完最短序列中的所有项后就停止。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zip([1,2,3],[4,5],[7,8,9])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1, 4, 7), (2, 5, 8)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果参数是一个序列，则zip()会以一元组的格式返回每个项，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zip((1,2,3,4,5))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1,), (2,), (3,), (4,), (5,)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zip([1,2,3,4,5])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1,), (2,), (3,), (4,), (5,)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-6-模块&quot;&gt;&lt;a href=&quot;#Chapter-6-模块&quot; class=&quot;headerlink&quot; title=&quot;Chapter 6. 模块&quot;&gt;&lt;/a&gt;Chapter 6. 模块&lt;/h2&gt;&lt;p&gt;模块可把一个复杂的程序按功能分开，分别存放到不同文件中，使程序更容易维护和管理。在Python中的模块是一个以.py结尾的Python代码文件。可通过import命令输入，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;import会完成以下三个操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建新的名称空间（namespace），该名称空间中拥有输入模块中定义的所有对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行模块中的代码；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建该名称空间的变量名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;import语句可同时输入多个模块，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import os,sys,system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可写成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有些模块的名称很长，我们可在输入时给它起个简单的别名，这样在使用模块中的对象就方便很多，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import ftplib as ftp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有时我们可能只想使用模块中某个对象，又不想把整个模块输入，则可以用from…import语句输入特定对象。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，我们就可直接使用FTP()，而不用带前缀。&lt;/p&gt;
&lt;p&gt;如果装载模块出错，会引发ImportError异常。我们可捕获该异常进行相应处理。&lt;/p&gt;
&lt;p&gt;Python脚本和模块都是一个以.py结束的文件，那程序是如何判断一个.py文件是作为脚本还是模块呢？关键是一个名为__name__的变量，如果它的值是__main__，则不能作为模块，只能作为脚本直接运行。所以在很多脚本的最后都有一段类似下面的语句，限制只能以脚本方式运行，不作为模块：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;apos;__main__&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;几个功能相近的模块我们可组成一个Python包，存放到一个目录结构中，通过输入包的路径来调用对象。要定义包，就要建一个与包名同名的目录，接着在该目录下创建__init__.py文件。该文件是包的初始化文件，可以为空，也可定义一个代码。例如一个WebDesign包的目录如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/WebDesign&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        __init_.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        design.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        draw.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可通过以下语句输入design模块：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import WebDesign.design&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-1-String模块&quot;&gt;&lt;a href=&quot;#6-1-String模块&quot; class=&quot;headerlink&quot; title=&quot;6.1. String模块&quot;&gt;&lt;/a&gt;6.1. String模块&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;replace(string,old,new[,maxsplit])&lt;/p&gt;
&lt;p&gt;字符串的替换函数，把字符串中的old替换成new。默认是把string中所有的old值替换成new值，如果给出maxsplit值，还可控制替换的个数，如果maxsplit为1，则只替换第一个old值。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a=&amp;quot;11223344&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print string.replace(a,&amp;quot;1&amp;quot;,&amp;quot;one&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;oneone2223344&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print string.replace(a,&amp;quot;1&amp;quot;,&amp;quot;one&amp;quot;,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;one12223344&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;capitalize(string)&lt;/p&gt;
&lt;p&gt;该函数可把字符串的首个字符替换成大字。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print string.capitalize(&amp;quot;python&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;split(string,sep=None,maxsplit=-1)&lt;/p&gt;
&lt;p&gt;从string字符串中返回一个列表，以sep的值为分界符。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ip=&amp;quot;192.168.3.3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ip_list=string.split(ip,&amp;apos;.&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print ip_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;192&amp;apos;, &amp;apos;168&amp;apos;, &amp;apos;3&amp;apos;, &amp;apos;3&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;join(string[,sep])&lt;/p&gt;
&lt;p&gt;返回用sep连接的字串，默认的sep是空格。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = [&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = string.join(a,&amp;apos;-&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a-b-c&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-2-time模块&quot;&gt;&lt;a href=&quot;#6-2-time模块&quot; class=&quot;headerlink&quot; title=&quot;6.2. time模块&quot;&gt;&lt;/a&gt;6.2. time模块&lt;/h2&gt;&lt;p&gt;内置模块time包含很多与时间相关函数。我们可通过它获得当前的时间和格式化时间输出。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;time()，以浮点形式返回自Linux新世纪以来经过的秒数。在linux中，00:00:00 UTC, January 1, 1970是新纪元的开始。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1150269086.6630149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.ctime(1150269086.6630149)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;Wed Jun 14 15:11:26 2006&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ctime([sec])，把秒数转换成日期格式，如果不带参数，则显示当前的时间。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.ctime()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;Wed Jun 14 15:02:50 2006&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.ctime(1138068452427683)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Sat Dec 14 04:51:44 1901&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sleep(secs)，定时。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.sleep(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;                #10秒后才会出现&amp;gt;&amp;gt;&amp;gt;提示符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-7-类&quot;&gt;&lt;a href=&quot;#Chapter-7-类&quot; class=&quot;headerlink&quot; title=&quot;Chapter 7. 类&quot;&gt;&lt;/a&gt;Chapter 7. 类&lt;/h2&gt;&lt;p&gt;类是面向对象编程的一个重要概念。通过类的创建和继承，可重用代码，减少代码复杂度。Python是一种面向对象的脚本语言，用class语句可创建类，语法规则如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class classnmae([class_parent,...]):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      def method():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class test:                              #定义一个test类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        desc = &amp;quot;这是一个测试类。&amp;quot;        #在类中定义一个属性desc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def __init__(self,name1):        #对象构造函数，初始化类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.name1 = name1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def show(self,name2):            #在类中定义一个方法show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;apos;name1:&amp;apos;,self.name1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;apos;name2:&amp;apos;,name2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;instance = test(&amp;apos;这是传递给name1的值&amp;apos;)   #生成test类的实例对象instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print instance.desc                      #调用类中的desc属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;instance.show(&amp;apos;这是传递给name2的值&amp;apos;)     #调用类中的show()方法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把该脚本命名为test.py，并用chmod +x test.py使脚本有执行的权限 ，运行该脚本结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;debian:~/python# ./test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是一个测试类。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name1: 这是传递给name1的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name2: 这是传递给name2的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里只是Python语言中类的一个简单介绍。详细介绍可参考网站上自由文档栏目中的Python资料。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-8-异常处理&quot;&gt;&lt;a href=&quot;#Chapter-8-异常处理&quot; class=&quot;headerlink&quot; title=&quot;Chapter 8. 异常处理&quot;&gt;&lt;/a&gt;Chapter 8. 异常处理&lt;/h2&gt;&lt;p&gt;Python的异常处理能力是很强大的，可向用户准确反馈出错信息。在Python中，异常也是对象，可对它进行操作。所有异常都是基类Exception的成员。异常处理的try语法有两种，一种是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except [exception,[data...]]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该种异常处理语法的规则是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行try下的语句，如果引发异常，则执行过程会跳到第一个except语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果第一个except中定义的异常与引发的异常匹配，则执行该except中的语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果引发的异常不匹配第一个except，则会搜索第二个except，允许编写的except数量没有限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果所有的except都不匹配，则异常会传递到下一个调用本代码的最高层try代码中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果没有发生异常，则执行else块代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;try语句的第二种语法是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;finally:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该语句的执行规则是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行try下的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果发生异常，在该异常传递到下一级try时，执行finally中的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果没有发生异常，则执行finally中的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二种try语法在无论有没有发生异常都要执行代码的情况下是很有用的。例如我们在python中打开一个文件进行读写操作，我在操作过程中不管是否出现异常，最终我都是要把该文件关闭的。&lt;/p&gt;
&lt;p&gt;除了系统引发的异常外，我们还可用raise语句手工引发一个异常：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;raise [exception[,data]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-9-文件处理&quot;&gt;&lt;a href=&quot;#Chapter-9-文件处理&quot; class=&quot;headerlink&quot; title=&quot;Chapter 9. 文件处理&quot;&gt;&lt;/a&gt;Chapter 9. 文件处理&lt;/h2&gt;&lt;p&gt;文件是我们储存信息的地方，我们经常要对文件进行读、写、删除等的操作，在Python中，我们可用Python提供的函数和方法方便地操作文件。&lt;/p&gt;
&lt;h2 id=&quot;9-1-文件处理的函数和方法&quot;&gt;&lt;a href=&quot;#9-1-文件处理的函数和方法&quot; class=&quot;headerlink&quot; title=&quot;9.1. 文件处理的函数和方法&quot;&gt;&lt;/a&gt;9.1. 文件处理的函数和方法&lt;/h2&gt;&lt;p&gt;使用Open()函数可打开文件，语法格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;file_handler = open(filename,[,mode[,bufsize]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;filename是你要操作的文件名，如果不在当前路径，需指出具体路径。mode是打开文件的模式，表示你要如何操作文件，bufsize表示是否使用缓存。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 9.1. mode&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;以读方式打开文件，可读取文件信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;以写方式打开文件，可向文件写入信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;以追加方式打开文件，文件指针自动移到文件尾。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r+&lt;/td&gt;
&lt;td&gt;以读写方式打开文件，可对文件进行读和写操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w+&lt;/td&gt;
&lt;td&gt;消除文件内容，然后以读写方式打开文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a+&lt;/td&gt;
&lt;td&gt;以读写方式打开文件，并把文件指针移到文件尾。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;以二进制模式打开文件，而不是以文本模式。该模式只对Windows或Dos有效，类Unix的文件是用二进制模式进行操作的。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Table 9.2. bufsize&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;bufsize取值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;禁用缓冲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;行缓冲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;1&lt;/td&gt;
&lt;td&gt;指定缓冲区的大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;1&lt;/td&gt;
&lt;td&gt;系统默认的缓冲区大小&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;open()函数返回一个文件对象，我们可通过read()或write()函数对文件进行读写操作，下面是一些文件对象方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 9.3. 文件对象方法&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;f.close()&lt;/td&gt;
&lt;td&gt;关闭文件，记住用open()打开文件后一定要记得关闭它，否则会占用系统的可打开文件句柄数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.fileno()&lt;/td&gt;
&lt;td&gt;获得文件描述符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.flush()&lt;/td&gt;
&lt;td&gt;刷新输出缓存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.isatty()&lt;/td&gt;
&lt;td&gt;如果文件是一个交互终端，则返回True，否则返回False。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.read([count])&lt;/td&gt;
&lt;td&gt;读出文件，如果有count，则读出count个字节。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.readline()&lt;/td&gt;
&lt;td&gt;读出一行信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.readlines()&lt;/td&gt;
&lt;td&gt;读出所有行，也就是读出整个文件的信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.seek(offset[,where])&lt;/td&gt;
&lt;td&gt;把文件指针移动到相对于where的offset位置。offset为0表示文件开始处，这是默认值 ；1表示当前位置；2表示文件结尾。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.tell()&lt;/td&gt;
&lt;td&gt;获得文件指针位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.truncate([size])&lt;/td&gt;
&lt;td&gt;截取文件，使文件的大小为size。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.write(string)&lt;/td&gt;
&lt;td&gt;把string字符串写入文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.writelines(list)&lt;/td&gt;
&lt;td&gt;把list中的字符串一行一行地写入文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;9-2-示例&quot;&gt;&lt;a href=&quot;#9-2-示例&quot; class=&quot;headerlink&quot; title=&quot;9.2. 示例&quot;&gt;&lt;/a&gt;9.2. 示例&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文件的打开或创建&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;test.txt&amp;apos;,&amp;apos;w&amp;apos;)               #以写模式打开文件，如果文件不存在则创建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.write(&amp;apos;this is a file open/create test.\nthe second line.&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;test.txt&amp;apos;,&amp;apos;a&amp;apos;)      #以追加模式打开文件，如果文件不存在则创建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.write(&amp;apos;\nappend the text in another line.\n&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;读取文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;test.txt&amp;apos;,&amp;apos;r&amp;apos;)    #以读方式打开文件，rb为二进制方式(如图片或可执行文件等)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;read() function:&amp;apos;              #读取整个文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;readline() function:&amp;apos;          #返回文件头，读取一行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;readlines() function:&amp;apos;         #返回文件头，返回所有行的列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;list all lines&amp;apos;                #返回文件头，显示所有行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textlist = filehandler.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for line in textlist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      print line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;seek() function&amp;apos;               #移位到第32个字符，从33个字符开始显示余下内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(32)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;tell() function&amp;apos;               #移位到文件头，从头开始显示2位字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readline()          #显示第一行内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.tell()              #显示当前位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readline()          #显示第二行内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.read()              #显示余下所有内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()                   #关闭文件句柄&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件系统操作&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os,fnmatch,glob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for fileName in os.listdir ( &amp;apos;/root&amp;apos; ):                 #列出/root目录内容，不包括.和..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print fileName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.mkdir(&amp;apos;py&amp;apos;)                  #在当前目录下创建一个py目录，且只能创建一层&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.rmdir( &amp;apos;py&amp;apos;)                 #在当前目录下删除py目录，且只能删除一层&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.makedirs(&amp;apos;py/aa&amp;apos;)            #可创建多层目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.removedirs(&amp;apos;py/aa&amp;apos;)          #可删除多层目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;demonstration fnmatch module&amp;apos;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for fileName in os.listdir ( &amp;apos;/root/python/file&amp;apos; ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if fnmatch.fnmatch(fileName,&amp;apos;*.txt&amp;apos;):        #利用UNIX风格的通配，只显示后缀为txt的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print fileName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;demonstration glob module&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for fileName in glob.glob ( &amp;apos;*.txt&amp;apos; ):               #利用UNIX风格的通配，只显示后缀为txt的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print fileName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取文件状态&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os,time,stat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileStats = os.stat ( &amp;apos;test.txt&amp;apos; )                         #获取文件/目录的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileInfo = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Size&amp;apos;:fileStats [ stat.ST_SIZE ],                         #获取文件大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;LastModified&amp;apos;:time.ctime( fileStats [ stat.ST_MTIME ] ),  #获取文件最后修改时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;LastAccessed&amp;apos;:time.ctime( fileStats [ stat.ST_ATIME ] ),  #获取文件最后访问时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;CreationTime&amp;apos;:time.ctime( fileStats [ stat.ST_CTIME ] ),  #获取文件创建时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Mode&amp;apos;:fileStats [ stat.ST_MODE ]                          #获取文件的模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#print fileInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for field in fileInfo:                                     #显示对象内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;%s:%s&amp;apos; % (field,fileInfo[field])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#for infoField,infoValue in fileInfo:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       print &amp;apos;%s:%s&amp;apos; % (infoField,infoValue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if stat.S_ISDIR ( fileStats [ stat.ST_MODE ] ):             #判断是否路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Directory. &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Non-directory.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if stat.S_ISREG ( fileStats [ stat.ST_MODE ] ):             #判断是否一般文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Regular file.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISLNK ( fileStats [ stat.ST_MODe ] ):           #判断是否链接文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Shortcut.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISSOCK ( fileStats [ stat.ST_MODe ] ):          #判断是否套接字文件     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Socket.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISFIFO ( fileStats [ stat.ST_MODe ] ):          #判断是否命名管道&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Named pipe.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISBLK ( fileStats [ stat.ST_MODe ] ):           #判断是否块设备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Block special device.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISCHR ( fileStats [ stat.ST_MODe ] ):           #判断是否字符设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Character special device.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileStats = &amp;apos;test.txt&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if os.path.isdir ( fileStats ):         #判断是否路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Directory.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif os.path.isfile ( fileStats ):      #判断是否一般文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;File.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif os.path.islink ( fileStats ):      #判断是否链接文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Shortcut.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif os.path.ismount ( fileStats ):     #判断是否挂接点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Mount point.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;stat模块描述了os.stat(filename)返回的文件属性列表中各值的意义。我们可方便地根据stat模块存取os.stat()中的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;串行化文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pickle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;pickle.txt&amp;apos;,&amp;apos;w&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text = [&amp;apos;this is a pickle demonstrate&amp;apos;,&amp;apos;aa&amp;apos;,&amp;apos;bb&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pickle.dump(text,filehandler)           #把text的内容序列化后保存到pickle.txt文件中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler2 = open(&amp;apos;pickle.txt&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textlist = pickle.load(filehandler2)    #还原序列化字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print textlist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler2.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#cpickle是用C写的pickle模块，比标准的pickle速度快很多，使用方法同pickle。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内存文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- coding: utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import StringIO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileHandle = StringIO.StringIO ( &amp;quot;Let freedom ring.&amp;quot; )   #create file in memory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print fileHandle.read() # &amp;quot;Let freedom ring.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileHandle.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#cStringIO是用C写的StringIO模块，执行速度比StringIO快。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;shutil模块是一个高级的文件处理模块，可实现文件的拷贝、删除等操作。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-10-正则表达式&quot;&gt;&lt;a href=&quot;#Chapter-10-正则表达式&quot; class=&quot;headerlink&quot; title=&quot;Chapter 10. 正则表达式&quot;&gt;&lt;/a&gt;Chapter 10. 正则表达式&lt;/h2&gt;&lt;p&gt;正则表达式是一个很有用的工具，可处理复杂的字符匹配和替换工作。在Python中内置了一个re模块以支持正则表达式。&lt;/p&gt;
&lt;p&gt;正则表达式有两种基本的操作，分别是匹配和替换。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;匹配就是在一个文本字符串中搜索匹配一特殊表达式；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;替换就是在一个字符串中查找并替换匹配一特殊表达式的字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;10-1-基本元素&quot;&gt;&lt;a href=&quot;#10-1-基本元素&quot; class=&quot;headerlink&quot; title=&quot;10.1. 基本元素&quot;&gt;&lt;/a&gt;10.1. 基本元素&lt;/h2&gt;&lt;p&gt;正则表达式定义了一系列的特殊字符元素以执行匹配动作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.1. 正则表达式基本字符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;匹配text字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;匹配除换行符之外的任意一个单个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;匹配一个字符串的开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;匹配一个字符串的末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在正则表达式中，我们还可用匹配限定符来约束匹配的次数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.2. 匹配限定符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;最大匹配&lt;/th&gt;
&lt;th&gt;最小匹配&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;重复匹配前表达式零次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;重复匹配前表达式一次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;重复匹配前表达式零次或一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{m}&lt;/td&gt;
&lt;td&gt;{m}&lt;/td&gt;
&lt;td&gt;精确重复匹配前表达式m次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{m,}&lt;/td&gt;
&lt;td&gt;{m,}&lt;/td&gt;
&lt;td&gt;至少重复匹配前表达式m次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{m,n}&lt;/td&gt;
&lt;td&gt;{m,n}&lt;/td&gt;
&lt;td&gt;至少重复匹配前表达式m次，至多重复匹配前表达式n次&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;据上所述，”.*“为最大匹配，能匹配源字符串所有能匹配的字符串。”.* “为最小匹配，只匹配第一次出现的字符串。如：d.*g能匹配任意以d开头，以g结尾的字符串，如”debug”和”debugging”，甚至”dog is walking”。而d.* g只能匹配”debug”，在”dog is walking”字符串中，则只匹配到”dog “。&lt;/p&gt;
&lt;p&gt;在一些更复杂的匹配中，我们可用到组和运算符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.3. 组和运算符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;组&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;[…]&lt;/td&gt;
&lt;td&gt;匹配集合内的字符，如[a-z],[1-9]或[,./;’]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^…]&lt;/td&gt;
&lt;td&gt;匹配除集合外的所有字符，相当于取反操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&amp;#124;B&lt;/td&gt;
&lt;td&gt;匹配表达式A或B，相当于OR操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(…)&lt;/td&gt;
&lt;td&gt;表达式分组，每对括号为一组，如([a-b]+)([A-Z]+)([1-9]+)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\number&lt;/td&gt;
&lt;td&gt;匹配在number表达式组内的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;有一组特殊的字符序列，用来匹配具体的字符类型或字符环境。如\b匹配字符边界，food\b匹配”food”、”zoofood”，而和”foodies”不匹配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.4. 特殊字符序列&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\A&lt;/td&gt;
&lt;td&gt;只匹配字符串的开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;匹配一个单词边界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\B&lt;/td&gt;
&lt;td&gt;匹配一个单词的非边界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;匹配任意十进制数字字符，等价于r’[0-9]’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;匹配任意非十进制数字字符，等价于r’[^0-9]’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;匹配任意空格字符（空格符、tab制表符、换行符、回车、换页符、垂直线符号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;匹配任意非空格字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;匹配任意字母数字字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;匹配任意非字母数字字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\Z&lt;/td&gt;
&lt;td&gt;仅匹配字符串的尾部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;匹配反斜线字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;有一套声明(assertion)对具体事件进行声明。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.5. 正则表达式声明&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;声明&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;( iLmsux)&lt;/td&gt;
&lt;td&gt;匹配空字符串，iLmsux字符对应下表的正则表达式修饰符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( :…)&lt;/td&gt;
&lt;td&gt;匹配圆括号内定义的表达式，但不填充字符组表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( P&amp;lt;name&amp;gt;)&lt;/td&gt;
&lt;td&gt;匹配圆括号内定义的表达式，但匹配的表达式还可用作name标识的符号组。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( P=name)&lt;/td&gt;
&lt;td&gt;匹配所有与前面命名的字符组相匹配的文本。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( #…)&lt;/td&gt;
&lt;td&gt;引入注释，忽略圆括号内的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( =…)&lt;/td&gt;
&lt;td&gt;如果所提供的文本与下一个正则表达式元素匹配，这之间没有多余的文本就匹配。这允许在一个表达式中进行超前操作，而不影响正则表达式其余部分的分析。如”Martin”其后紧跟”Brown”，则”Martin( =Brown)”就只与”Martin”匹配。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( !…)&lt;/td&gt;
&lt;td&gt;仅当指定表达式与下一个正则表达式元素不匹配时匹配，是( =…)的反操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( &amp;lt;=…)&lt;/td&gt;
&lt;td&gt;如果字符串当前位置的前缀字符串是给定文本，就匹配，整个表达式就在当前位置终止。如( &amp;lt;=abc)def表达式与”abcdef”匹配。这种匹配是对前缀字符数量的精确匹配。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( &amp;lt;!…)&lt;/td&gt;
&lt;td&gt;如果字符串当前位置的前缀字符串不是给定的正文，就匹配，是( &amp;lt;=…)的反操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;正则表达式还支持一些处理标志，它会影响正则式的执行方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.6. 处理标志&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标志&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;I或IGNORECASE&lt;/td&gt;
&lt;td&gt;忽略表达式的大小写来匹配文本。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;10-2-操作&quot;&gt;&lt;a href=&quot;#10-2-操作&quot; class=&quot;headerlink&quot; title=&quot;10.2. 操作&quot;&gt;&lt;/a&gt;10.2. 操作&lt;/h2&gt;&lt;p&gt;通过re模块，我们就可在python中利用正则式对字符串进行搜索、抽取和替换操作。如：re.search()函数能执行一个基本的搜索操作，它能返回一个MatchObject对象。re.findall()函数能返回匹配列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;quot;this is my re module test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; obj = re.search(r&amp;apos;.*is&amp;apos;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print obj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;_sre.SRE_Match object at 0xb7d7a218&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; obj.group()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;this is&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; re.findall(r&amp;apos;.*is&amp;apos;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;this is&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MatchObject对象方法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.7. MatchObject对象方法&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;expand(template)&lt;/td&gt;
&lt;td&gt;展开模板中用反斜线定义的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.group([group,…])&lt;/td&gt;
&lt;td&gt;返回匹配的文本，是个元组。此文本是与给定group或由其索引数字定义的组匹配的文本，如果没有组定组名，则返回所有匹配项。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.groups([default])&lt;/td&gt;
&lt;td&gt;返回一个元组，该元组包含模式中与所有组匹配的文本。如果给出default参数，default参数值就是与给定表达式不匹配的组的返回值。default参数的默认取值为None。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.groupdict([default])&lt;/td&gt;
&lt;td&gt;返回一个字典，该字典包含匹配的所有子组。如果给出default参数，其值就是那些不匹配组的返回值。default参数的默认取值为None。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.start([group])&lt;/td&gt;
&lt;td&gt;返回指定group的开始位置，或返回全部匹配的开始位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.end([group])&lt;/td&gt;
&lt;td&gt;返回指定group的结束位置，或返回全部匹配的结束位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.span([group])&lt;/td&gt;
&lt;td&gt;返回两元素组，此元组等价于关于一给定组或一个完整匹配表达式的(m.start(group),m.end(group)))列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.pos&lt;/td&gt;
&lt;td&gt;传递给match()或search()函数的pos值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.endpos&lt;/td&gt;
&lt;td&gt;传递给match()或search()函数的endpos值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.lastindex&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.lastgroup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.re&lt;/td&gt;
&lt;td&gt;创建这个MatchObject对象的正则式对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.string&lt;/td&gt;
&lt;td&gt;提供给match()或search()函数的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用sub()或subn()函数可在字符串上执行替换操作。sub()函数的基本格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sub(pattern,replace,string[,count])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str = &amp;apos;The dog on my bed&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; rep = re.sub(&amp;apos;dog&amp;apos;,&amp;apos;cat&amp;apos;,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print rep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The cat on my bed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;replace参数可接受函数。要获得替换的次数，可使用subn()函数。subn()函数返回一个元组，此元组包含替换了的文本和替换的次数。&lt;/p&gt;
&lt;p&gt;如果需用同一个正则式进行多次匹配操作，我们可把正则式编译成内部语言，提高处理速度。编译正则式用compile()函数来实现。compile()函数的基本格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;compile(str[,flags])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;str表示需编译的正则式串，flags是修饰标志符。正则式被编译后生成一个对象，该对象有多种方法和属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.8. 正则式对象方法/属性&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法/属性&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r.search(string[,pos[,endpos]])&lt;/td&gt;
&lt;td&gt;同search()函数，但此函数允许指定搜索的起点和终点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.match(string[,pos[,endpos]])&lt;/td&gt;
&lt;td&gt;同match()函数，但此函数允许指定搜索的起点和终点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.split(string[,max])&lt;/td&gt;
&lt;td&gt;同split()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.findall(string)&lt;/td&gt;
&lt;td&gt;同findall()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.sub(replace,string[,count])&lt;/td&gt;
&lt;td&gt;同sub()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.subn(replace,string[,count])&lt;/td&gt;
&lt;td&gt;同subn()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.flags&lt;/td&gt;
&lt;td&gt;创建对象时定义的标志&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.groupindex&lt;/td&gt;
&lt;td&gt;将r’( Pid)’定义的符号组名字映射为组序号的字典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.pattern&lt;/td&gt;
&lt;td&gt;在创建对象时使用的模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;转义字符串用re.escape()函数。&lt;/p&gt;
&lt;p&gt;通过getattr获取对象引用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li=[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)(&amp;apos;c&amp;apos;)          #相当于li.append(&amp;apos;c&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler=getattr(li,&amp;apos;append&amp;apos;,None)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;built-in method append of list object at 0xb7d4a52c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler(&amp;apos;cc&amp;apos;)                      #相当于li.append(&amp;apos;cc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;result = handler(&amp;apos;bb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;,&amp;apos;bb&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;None&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-11-调试&quot;&gt;&lt;a href=&quot;#Chapter-11-调试&quot; class=&quot;headerlink&quot; title=&quot;Chapter 11. 调试&quot;&gt;&lt;/a&gt;Chapter 11. 调试&lt;/h2&gt;&lt;p&gt;Python自带了一个调试器叫pdb，和Gnu的gbd类似。下面用一个简单的程序来演示pdb的功能。程序代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pdb.set_trace()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = &amp;quot;ccc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;final = a + b + c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print final&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该程序已导入pdb模块，并在代码中添加的pdb.set_trace()跟踪点。现在让我们来运行该程序。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;localhost:~/python/pdb# python pdbtest.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--Return--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /usr/lib/python2.3/pdb.py(992)set_trace()-&amp;gt;None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; Pdb().set_trace()              # 从跟踪点开始执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n                           # n 读入下一行代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(6) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; b = &amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(7) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; c = &amp;quot;ccc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) p b                         # p 打印变量值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;bbb&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) l                           # l 显示当前执行位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  3     import pdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  4     a = &amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  5     pdb.set_trace()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  6     b = &amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  7  -&amp;gt; c = &amp;quot;ccc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  8     final = a + b + c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  9     print final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[EOF]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(8) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; final = a + b + c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n                           # 如果命令和上次的一样，也可直接按回车，不用输入&amp;apos;n&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(9) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; print final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aaabbbccc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--Return--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(9) ()-&amp;gt;None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; print final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) p a,b,c,final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&amp;apos;aaa&amp;apos;, &amp;apos;bbb&amp;apos;, &amp;apos;ccc&amp;apos;, &amp;apos;aaabbbccc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&amp;apos;aaa&amp;apos;, &amp;apos;bbb&amp;apos;, &amp;apos;ccc&amp;apos;, &amp;apos;aaabbbccc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localhost:~/python/pdb#           # 返回shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;pdb还有很多命令，用help命令就可以列出所有的pdb命令，用help p可以查询p命令的说明。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-12-HOW-TO&quot;&gt;&lt;a href=&quot;#Chapter-12-HOW-TO&quot; class=&quot;headerlink&quot; title=&quot;Chapter 12. HOW-TO&quot;&gt;&lt;/a&gt;Chapter 12. HOW-TO&lt;/h2&gt;&lt;p&gt;本章内容记录Python的一些小技巧小知识。来源是网上摘录或自己学习所得。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如何判断操作系统类型&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print sys.platform&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print sys.version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;显示和修改python的Module搜索路径&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print sys.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;&amp;apos;, &amp;apos;/usr/lib/python23.zip&amp;apos;, &amp;apos;/usr/lib/python2.3&amp;apos;, &amp;apos;/usr/lib/python2.3/plat-linux2&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;/usr/lib/python2.3/lib-tk&amp;apos;, &amp;apos;/usr/lib/python2.3/lib-dynload&amp;apos;, &amp;apos;/usr/local/lib/python2.3/site-packages&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;/usr/lib/python2.3/site-packages&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; sys.path.append(&amp;apos;/usr/lib/mypath&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print sys.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;&amp;apos;, &amp;apos;/usr/lib/python23.zip&amp;apos;, &amp;apos;/usr/lib/python2.3&amp;apos;, &amp;apos;/usr/lib/python2.3/plat-linux2&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;/usr/lib/python2.3/lib-tk&amp;apos;, &amp;apos;/usr/lib/python2.3/lib-dynload&amp;apos;, &amp;apos;/usr/local/lib/python2.3/site-packages&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;/usr/lib/python2.3/site-packages&amp;apos;, &amp;apos;/usr/lib/mypath&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把列表转换成字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t=[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print string.join(t)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a b c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行系统程序&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;os.system(&amp;apos;ls&amp;apos;)            #用os.system()可执行系统命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;exec &amp;quot;os.system(&amp;apos;ls&amp;apos;)&amp;quot;     #用exec可执行字符串中的命令，两个命令的效果一样。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上两个命令的输出都是直接显示在屏幕上，不能保存到变量中，如果我们要把输出保存起来，可用os.pope\ n()函数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;cmd = &amp;apos;/usr/bin/mkntpwd %s&amp;apos; % password&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;handler = os.popen(cmd,&amp;apos;r&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;passwordString=handler.read()   #passwordString为mkntpwd程序的输出结果&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用commands模块也可以获取程序的输出，它包含一些基于os.popen()的封装函数，使我们能更方便地获取运行系统命令和获取命令的输出，但该模块只在Unix系统下有效，不能用于Windows平台。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; status,output = commands.getstatusoutput(&amp;apos;ls -l&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;总计 96564&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  1 root     root         4459 2005-12-01 10:23 2005.sxw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  1 root     root        27511 2006-04-12 16:54 20060412_user.ods&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  1 root     root       202258 2006-01-06 16:48 2006风景-1月.jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在Python2.4中引入一个新的模块叫subprocess，用于取代os.system、os.spawn*、os.popen*、popen2.*、commands.*。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编码转换&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*-coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=u&amp;quot;测试&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b=a.encode(&amp;apos;gb2312&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交换两个变量&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b = 1,2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b = b,a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试数据类型&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=&amp;apos;test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用in判断是否包含子字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;apos;this is my test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;is&amp;apos; in a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;mm&amp;apos; in a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;__iter__迭代器&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = &amp;quot;iterator&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t = iter(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;i&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;e&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;r&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;o&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;r&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StopIteration&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自已写一个迭代器类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; class reverse:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     def __init__(self,data):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             self.data=data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             self.index=len(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     def __iter__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             return self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     def next(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             if self.index == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                     raise StopIteration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             self.index = self.index - 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             return self.data[self.index]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for char in reverse(&amp;apos;iterator&amp;apos;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print char&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过getattr可以得到一个在运行时才知道具体函数名的对象的引用，能增强我们程序的灵活性。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li=[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)(&amp;apos;c&amp;apos;)          #相当于li.append(&amp;apos;c&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler=getattr(li,&amp;apos;append&amp;apos;,None)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;built-in method append of list object at 0xb7d4a52c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler(&amp;apos;cc&amp;apos;)                      #相当于li.append(&amp;apos;cc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;result = handler(&amp;apos;bb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;,&amp;apos;bb&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;None&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编程示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import statsout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def output(data, format=&amp;quot;text&amp;quot;):                              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    output_function = getattr(statsout, &amp;quot;output_%s&amp;quot; % format)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return output_function(data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上代码表示，output函数接收一个data参数和format参数，根据format参数的值，从statsout模块中取出output_text函数运行，data参数通过output_function(data)传递给了statsout模块中的output_text函数。format取不同值可从statsout模块中取出不同的函数运行（output_xxxx）。也就是说我们要运行的函数是在程序运行后才确定的。这样我们可把不同的函数以output_xxx形式命名放在statout模块中，通过以上程序可动态调用各种函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hasattr用于确定一个对象是否具有某个属性。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hasattr(object, name) -&amp;gt; bool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;判断object中是否有name属性，返回一个布尔值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拆分序列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[c for c in &amp;apos;abcdefg&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;d&amp;apos;, &amp;apos;e&amp;apos;, &amp;apos;f&amp;apos;, &amp;apos;g&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按if条件拆分序列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[c for c in &amp;apos;123456&amp;apos; if int(c)&amp;lt;3]      如果if的条件为真，则执行for循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;1&amp;apos;, &amp;apos;2&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[c for c in &amp;apos;123456&amp;apos; if int(c)&amp;gt;3]      如果if的条件为假，则不执行for循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;4&amp;apos;, &amp;apos;5&amp;apos;, &amp;apos;6&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;__dict__记录模块或类中所有对象的信息，它以字典{name:object}的形式记录这些信息，如果wikiaction是一个模块，则可以这样显示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;import wikiaction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print wikiaction.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;do_test&amp;apos;: &amp;lt;function do_test at 0xb7c10534&amp;gt;, &amp;apos;do_diff&amp;apos;: &amp;lt;function do_diff at 0xb7c0ef0c&amp;gt;, &amp;apos;do_refresh&amp;apos;: &amp;lt;fun&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ction do_refresh at 0xb7c1025c&amp;gt;, &amp;apos;do_userform&amp;apos;: &amp;lt;function do_userform at 0xb7c103e4&amp;gt;, &amp;apos;getHandler&amp;apos;: &amp;lt;function&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; getHandler at 0xb7c105a4&amp;gt;, &amp;apos;do_raw&amp;apos;: &amp;lt;function do_raw at 0xb7c10454&amp;gt;, &amp;apos;do_chart&amp;apos;: &amp;lt;function do_chart at 0xb7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c104c4&amp;gt;, &amp;apos;re&amp;apos;: &amp;lt;module &amp;apos;re&amp;apos; from &amp;apos;/usr/lib/python2.3/re.pyc&amp;apos;&amp;gt;, &amp;apos;pysupport&amp;apos;: &amp;lt;module &amp;apos;MoinMoin.util.pysupport&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; from &amp;apos;/usr/lib/python2.3/site-packages/MoinMoin/util/pysupport.pyc&amp;apos;&amp;gt;, &amp;apos;config&amp;apos;: &amp;lt;module &amp;apos;MoinMoin.config&amp;apos; fr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;om &amp;apos;/usr/lib/python2.3/site-packages/MoinMoin/config.pyc&amp;apos;&amp;gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘and’的特殊用法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; and &amp;apos;b&amp;apos;         #如果两个都为真值，返回最后一个真值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;b&amp;apos; and &amp;apos;a&amp;apos;         #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; and &amp;apos;b&amp;apos; and &amp;apos;c&amp;apos; #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;c&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;&amp;apos; and &amp;apos;a&amp;apos;          #如果有假值，则返回假值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; and &amp;apos;&amp;apos; and &amp;apos;c&amp;apos;  #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;&amp;apos; and 0            #如果两个都为假值，返回第一个假值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 0 and &amp;apos;&amp;apos;            #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘or’的的特殊用法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; or &amp;apos;b&amp;apos;          #如果有一个为真值，则返回第一个真值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;b&amp;apos; or &amp;apos;a&amp;apos;          #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; or &amp;apos;b&amp;apos; or &amp;apos;&amp;apos;    #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 0 and &amp;apos;&amp;apos; and &amp;#123;&amp;#125;     #如果所有都是假值，则返回第一个假值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;#123;&amp;#125; and &amp;apos;&amp;apos; and &amp;#123;&amp;#125;    #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;lambda匿名函数的用法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=lambda c:c*2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;function &amp;lt;lambda&amp;gt; at 0xb7dd710c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004，2005，2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年07月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年06月14日，把参考篇的内容合并进来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 学习笔记</title>
    <link href="http://it-ebooks.flygon.net/mysql-note/"/>
    <id>http://it-ebooks.flygon.net/mysql-note/</id>
    <published>2016-03-13T08:50:07.000Z</published>
    <updated>2016-03-13T08:50:41.052Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:yjnet@21cn.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yjnet@21cn.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间: 2004年11月06日&lt;/p&gt;
&lt;p&gt;最近更新: 2005年01月12日&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2874769&quot;&gt;1. MySQL数据库的数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808339&quot;&gt;1.1. 数据值类型(data type)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811708&quot;&gt;1.1.1. 数值&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2811766&quot;&gt;1.1.2. 字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809741&quot;&gt;1.1.3. 日期和时间&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810045&quot;&gt;1.2. 列类型(column type)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810068&quot;&gt;1.2.1. 数值类的数据列类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810479&quot;&gt;1.2.2. 字符串类数据列类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861926&quot;&gt;1.2.3. 日期,时间型数据列类型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808625&quot;&gt;1.3. 唯一编号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809227&quot;&gt;1.4. 字符集支持&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2809248&quot;&gt;1.4.1. MySQL4.1以前版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809320&quot;&gt;1.4.2. MySQL4.1以后版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809483&quot;&gt;1.4.3. 各级字符集的查询方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875432&quot;&gt;1.4.4. Unicode支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875454&quot;&gt;1.5. 如何选择数据列类型？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875598&quot;&gt;1.6. 表达式操作符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876479&quot;&gt;1.7. 类型转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876523&quot;&gt;2. 查询优化&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2876581&quot;&gt;2.1. 索引&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876806&quot;&gt;2.2. 查询优化程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876901&quot;&gt;2.3. 数据列类型与查询效率&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877109&quot;&gt;2.4. 有效地加载数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877300&quot;&gt;2.5. 调度和锁定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877538&quot;&gt;2.6. 服务器优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877768&quot;&gt;2.7. 硬件优化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877831&quot;&gt;3. 数据库管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2877912&quot;&gt;3.1. 数据目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878184&quot;&gt;3.2. MySQL数据表在系统中表现形式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878374&quot;&gt;3.3. 数据表最大尺寸限制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878524&quot;&gt;3.4. 状态文件和日志文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878733&quot;&gt;3.5. 调整MySQL数据目录位置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879192&quot;&gt;4. MySQL数据库日常管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2879207&quot;&gt;4.1. 数据库安全管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879430&quot;&gt;4.2. 服务器的启动和关闭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879527&quot;&gt;4.3. 连接故障恢复&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879632&quot;&gt;4.4. MySQL用户帐号管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2880322&quot;&gt;4.5. 日志文件管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2880627&quot;&gt;4.5.1. 日志失效处理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2880878&quot;&gt;4.6. MySQL服务器的一些优化配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2881514&quot;&gt;4.7. 优化服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2881890&quot;&gt;4.8. 运行多个MySQL服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2882214&quot;&gt;4.9. MySQL服务器镜像配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2882744&quot;&gt;5. 数据库安全&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2882779&quot;&gt;5.1. 保护MySQL安装程序文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2882930&quot;&gt;5.2. 权限表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2883576&quot;&gt;5.3. 建立加密连接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2883760&quot;&gt;6. 数据库的备份、维护和修复&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2883844&quot;&gt;6.1. 检查/修复数据表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2884038&quot;&gt;6.2. 备份数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2884388&quot;&gt;6.3. 使用备份恢复数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2884565&quot;&gt;7. MySQL程序介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2884785&quot;&gt;8. MySQL How-To&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2884793&quot;&gt;8.1. 连接数据库服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2884871&quot;&gt;8.2. 更新用户密码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2884889&quot;&gt;8.3. MySQL读取配置文件的顺序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2884929&quot;&gt;8.4. 重设置MySQL管理员密码的方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2885136&quot;&gt;8.5. NULL值&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2885196&quot;&gt;8.6. 使用SQL变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2885227&quot;&gt;8.7. 改变默认提示符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2885256&quot;&gt;8.8. 非优化的全数据表DELETE操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2885280&quot;&gt;8.9. MySQL事务处理示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-1-MySQL数据库的数据&quot;&gt;&lt;a href=&quot;#Chapter-1-MySQL数据库的数据&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1. MySQL数据库的数据&quot;&gt;&lt;/a&gt;Chapter 1. MySQL数据库的数据&lt;/h2&gt;&lt;p&gt;MySQL数据库是由数据组成的，为了能方便管理和使用这些数据，我们把这些数据进行分类，形成各种数据类型，有数据值的类型，有表中数据列的类型，有数据表的类型。理解MySQL的这些数据类型能使我们更好地使用MySQL数据库。下面对各种数据类型进行简单的介绍。&lt;/p&gt;
&lt;h2 id=&quot;1-1-数据值类型-data-type&quot;&gt;&lt;a href=&quot;#1-1-数据值类型-data-type&quot; class=&quot;headerlink&quot; title=&quot;1.1. 数据值类型(data type)&quot;&gt;&lt;/a&gt;1.1. 数据值类型(data type)&lt;/h2&gt;&lt;p&gt;对MySQL中数据值的分类，有数值型、字符型、日期型和空值等，这和一般的编程语言的分类差不多。&lt;/p&gt;
&lt;h3 id=&quot;1-1-1-数值&quot;&gt;&lt;a href=&quot;#1-1-1-数值&quot; class=&quot;headerlink&quot; title=&quot;1.1.1. 数值&quot;&gt;&lt;/a&gt;1.1.1. 数值&lt;/h3&gt;&lt;p&gt;MySQL中的数值分整型和浮点型两种。MySQL支持科学记数法。整型可以是十进制，也可是十六进制数。&lt;/p&gt;
&lt;h3 id=&quot;1-1-2-字符串&quot;&gt;&lt;a href=&quot;#1-1-2-字符串&quot; class=&quot;headerlink&quot; title=&quot;1.1.2. 字符串&quot;&gt;&lt;/a&gt;1.1.2. 字符串&lt;/h3&gt;&lt;p&gt;MySQL支持以单或双引号包围的字符序列。如“MySQL tutorial”、‘Mysql Database’。&lt;/p&gt;
&lt;p&gt;MySQL能识别字符串中的转义序列，转义序列用反斜杠()表示。下面是一个转义序列列表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 1.1. 转义序列&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;转义序列&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\0&lt;/td&gt;
&lt;td&gt;NUL(ASCII的0值)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\’&lt;/td&gt;
&lt;td&gt;单引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\”&lt;/td&gt;
&lt;td&gt;双引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;后退符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;换行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;回车符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;反斜杠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\Z&lt;/td&gt;
&lt;td&gt;Ctrl+Z&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果字符串本身包含有单双引号，则用以下三种方法中的一种来表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字符串的引号和字符串两端的引号双同，则双写该引号。如：’mysql’’s test’。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用与字符串的引号不同的引号把字符串引起来，如：”mysql’s test”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用反斜杠转义引号，如：”mysql\’ test”，’mysql\’ test’。这样就不用理会字符串两端的是单引号还是双引号了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符串可由一个十六进制数表示，如0x61表示字符”a”。由MySQL 4.0开始，字符串值也可用ANSI SQL表示法X’val’来表示。如X’61’表示字符”a”。&lt;/p&gt;
&lt;p&gt;从MySQL 4.1开始，可以为字符串值专门指定一个字符集。&lt;/p&gt;
&lt;h3 id=&quot;1-1-3-日期和时间&quot;&gt;&lt;a href=&quot;#1-1-3-日期和时间&quot; class=&quot;headerlink&quot; title=&quot;1.1.3. 日期和时间&quot;&gt;&lt;/a&gt;1.1.3. 日期和时间&lt;/h3&gt;&lt;p&gt;MySQL默认按“年-月-日”的顺序显示日期。&lt;/p&gt;
&lt;h2 id=&quot;1-2-列类型-column-type&quot;&gt;&lt;a href=&quot;#1-2-列类型-column-type&quot; class=&quot;headerlink&quot; title=&quot;1.2. 列类型(column type)&quot;&gt;&lt;/a&gt;1.2. 列类型(column type)&lt;/h2&gt;&lt;p&gt;MySQL数据库的表是一个二维表，由一个或多个数据列构成。每个数据列都有它的特定类型，该类型决定了MySQL如何看待该列数据，我们可以把整型数值存放到字符类型的列中，MySQL则会把它看成字符串来处理。MySQL中的列类型有三种：数值类、字符串类和日期/时间类。从大类来看列类型和数值类型一样，都是只有三种。但每种列类型都还可细分。下面对各种列类型进行详细介绍。&lt;/p&gt;
&lt;h3 id=&quot;1-2-1-数值类的数据列类型&quot;&gt;&lt;a href=&quot;#1-2-1-数值类的数据列类型&quot; class=&quot;headerlink&quot; title=&quot;1.2.1. 数值类的数据列类型&quot;&gt;&lt;/a&gt;1.2.1. 数值类的数据列类型&lt;/h3&gt;&lt;p&gt;数值型的列类型包括整型和浮点型两大类。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 1.2. 数值类数据列类型&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据列类型&lt;/th&gt;
&lt;th&gt;存储空间&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;TINYINT&lt;/td&gt;
&lt;td&gt;1字节&lt;/td&gt;
&lt;td&gt;非常小的正整数，带符号：-128~127，不带符号：0~255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SMALLINT&lt;/td&gt;
&lt;td&gt;2字节&lt;/td&gt;
&lt;td&gt;小整数，带符号：-32768~32767，不带符号：0~65535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMINT&lt;/td&gt;
&lt;td&gt;3字节&lt;/td&gt;
&lt;td&gt;中等大小的整数，带符号：-8388608~8388607，不带符号：0~16777215&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INT&lt;/td&gt;
&lt;td&gt;4字节&lt;/td&gt;
&lt;td&gt;标准整数，带符号：-2147483648~2147483647，不带符号：0~4294967295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BIGINT&lt;/td&gt;
&lt;td&gt;8字节&lt;/td&gt;
&lt;td&gt;大整数，带符号：-9223372036854775808~9233372036854775807，不带符号：0~18446744073709551615&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FLOAT&lt;/td&gt;
&lt;td&gt;4字节&lt;/td&gt;
&lt;td&gt;单精度浮点数，最小非零值：+-1.175494351E-38，最大非零值：+-3.402823466E+38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DOUBLE&lt;/td&gt;
&lt;td&gt;8字节&lt;/td&gt;
&lt;td&gt;双精度浮点数，最小非零值：+-2.2250738585072014E-308，最大非零值：+-1.7976931348623157E+308&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DECIMAL&lt;/td&gt;
&lt;td&gt;M+2字节&lt;/td&gt;
&lt;td&gt;以字符串形式表示的浮点数，它的取值范围可变，由M和D的值决定。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;1-2-1-1-整型数据列类型&quot;&gt;&lt;a href=&quot;#1-2-1-1-整型数据列类型&quot; class=&quot;headerlink&quot; title=&quot;1.2.1.1. 整型数据列类型&quot;&gt;&lt;/a&gt;1.2.1.1. 整型数据列类型&lt;/h4&gt;&lt;p&gt;MySQL有五种整型数据列类型，即TINYINT，SMALLINT，MEDIUMINT，INT和BIGINT。它们之间的区别是取值范围不同，存储空间也各不相同。在整型数据列后加上UNSIGNED属性可以禁止负数，取值从0开始。&lt;/p&gt;
&lt;p&gt;声明整型数据列时，我们可以为它指定个显示宽度M(1~255)，如INT(5)，指定显示宽度为5个字符,如果没有给它指定显示宽度，MySQL会为它指定一个默认值。显示宽度只用于显示，并不能限制取值范围和占用空间，如：INT(3)会占用4个字节的存储空间，并且允许的最大值也不会是999,而是INT整型所允许的最大值。&lt;/p&gt;
&lt;h4 id=&quot;1-2-1-2-浮点型数据列类型&quot;&gt;&lt;a href=&quot;#1-2-1-2-浮点型数据列类型&quot; class=&quot;headerlink&quot; title=&quot;1.2.1.2. 浮点型数据列类型&quot;&gt;&lt;/a&gt;1.2.1.2. 浮点型数据列类型&lt;/h4&gt;&lt;p&gt;MySQL有三种浮点型数据列类型，分别是：FLOAT，DOUBLE和DECIMAL。浮点类数据类型有一个最大可表示值和一个最小非零可表示值，最小非零可表示值决定了该类型的精确度。&lt;/p&gt;
&lt;p&gt;MySQL 4.0.2版之后，FLOAT和DOUBLE都可以指定UNSIGNED属性。当指定该属性时，取值范围不平移到正数区间，而只是简单地把浮点类型的负数部份去掉。&lt;/p&gt;
&lt;p&gt;浮点类型也有M(1~255)和D(1~30，且不能大于M-2)。分别表示显示宽度和小数位数。M和D在FLOAT和DOUBLE中是可选的，默认，当MySQL版本大于3.23.6时，FLOAT和DOUBLE类型将被保存为硬件所支持的最大精度。DECIMAL的M和D值在MySQL3.23.6后可选，默认D值为0,M值为10。&lt;/p&gt;
&lt;h4 id=&quot;1-2-1-3-如何选择数值类数据列类型？&quot;&gt;&lt;a href=&quot;#1-2-1-3-如何选择数值类数据列类型？&quot; class=&quot;headerlink&quot; title=&quot;1.2.1.3. 如何选择数值类数据列类型？&quot;&gt;&lt;/a&gt;1.2.1.3. 如何选择数值类数据列类型？&lt;/h4&gt;&lt;p&gt;为了节省存储空间和提高数据库处理效率，我们应根据应用数据的取值范围来选择一个最适合的数据列类型。如果把一个超出数据列取值范围的数存入该列，则MySQL就会截短该值，如：我们把99999存入SMALLINT(3)数据列里，因为SMALLINT(3)的取值范围是-32768~32767，所以就会被截短成32767存储。显示宽度3不会影响数值的存储。只影响显示。&lt;/p&gt;
&lt;p&gt;对于浮点数据列，存入的数值会被该列定义的小数位进行四舍五入。如把一个1.234存入FLOAT(6.1)数据列中，结果是1.2。&lt;/p&gt;
&lt;p&gt;DECIMAL与FLOAT和DOUBLE的区别是：DECIMAL类型的值是以字符串的形式被储存起来的，它的小数位数是固定的。它的优点是，不会象FLOAT和DOUBLE类型数据列那样进行四舍五入而产生误差，所以很适合用于财务计算；而它的缺点是：由于它的存储格式不同，CPU不能对它进行直接运算，从而影响运算效率。DECIMAL(M，D)总共要占用M+2个字节。&lt;/p&gt;
&lt;h4 id=&quot;1-2-1-4-数值类数据列的属性&quot;&gt;&lt;a href=&quot;#1-2-1-4-数值类数据列的属性&quot; class=&quot;headerlink&quot; title=&quot;1.2.1.4. 数值类数据列的属性&quot;&gt;&lt;/a&gt;1.2.1.4. 数值类数据列的属性&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ZEROFILL属性适用于所有数值类数据列类型，作用是，如果数值的宽度小于定义的显示宽度，则在数值前填充0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UNSIGNED属性不允许数据列出现负数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AUTO_INCREMENT属性可生成独一无二的数字序列。只对整数类的数据列有效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NULL和NOT NULL属性设置数据列是否可为空。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DEFAULT属性可为数据列指定默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-2-2-字符串类数据列类型&quot;&gt;&lt;a href=&quot;#1-2-2-字符串类数据列类型&quot; class=&quot;headerlink&quot; title=&quot;1.2.2. 字符串类数据列类型&quot;&gt;&lt;/a&gt;1.2.2. 字符串类数据列类型&lt;/h3&gt;&lt;p&gt;字符串可以用来表示任何一种值，所以它是最基本的类型之一。我们可以用字符串类型来存储图象或声音之类的二进制数据，也可存储用gzip压缩的数据。下表介绍了各种字符串类型：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 1.3. 字符串类数据列类型&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;最大长度&lt;/th&gt;
&lt;th&gt;占用存储空间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CHAR[(M)]&lt;/td&gt;
&lt;td&gt;M字节&lt;/td&gt;
&lt;td&gt;M字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VARCHAR[(M)]&lt;/td&gt;
&lt;td&gt;M字节&lt;/td&gt;
&lt;td&gt;L+1字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYBLOD，TINYTEXT&lt;/td&gt;
&lt;td&gt;2^8-1字节&lt;/td&gt;
&lt;td&gt;L+1字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BLOB，TEXT&lt;/td&gt;
&lt;td&gt;2^16-1字节&lt;/td&gt;
&lt;td&gt;L+2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMBLOB，MEDIUMTEXT&lt;/td&gt;
&lt;td&gt;2^24-1字节&lt;/td&gt;
&lt;td&gt;L+3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONGBLOB，LONGTEXT&lt;/td&gt;
&lt;td&gt;2^32-1字节&lt;/td&gt;
&lt;td&gt;L+4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ENUM(‘value1’,’value2’,…)&lt;/td&gt;
&lt;td&gt;65535个成员&lt;/td&gt;
&lt;td&gt;1或2字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SET(‘value1’,’value2’,…)&lt;/td&gt;
&lt;td&gt;64个成员&lt;/td&gt;
&lt;td&gt;1,2,3,4或8字节&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;L+1、L+2是表示数据列是可变长度的，它占用的空间会根据数据行的增减面则改变。数据行的总长度取决于存放在这些数据列里的数据值的长度。L+1或L+2里多出来的字节是用来保存数据值的长度的。在对长度可变的数据进行处理时，MySQL要把数据内容和数据长度都保存起来。&lt;/p&gt;
&lt;p&gt;如果把超出字符串最大长度的数据放到字符类数据列中，MySQL会自动进行截短处理。&lt;/p&gt;
&lt;p&gt;ENUM和SET类型的数据列定义里有一个列表，列表里的元素就是该数据列的合法取值。如果试图把一个没有在列表里的值放到数据列里，它会被转换为空字符串(“”)。&lt;/p&gt;
&lt;p&gt;字符串类型的值被保存为一组连续的字节序列，并会根据它们容纳的是二进制字符串还是非二进制字符而被区别对待为字节或者字符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二进制字符串被视为一个连续的字节序列，与字符集无关。MySQL把BLOB数据列和带BINARY属性的CHAR和VARCHAR数据列里的数据当作二进制值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;非二进制字符串被视为一个连续排列的字符序列。与字符集有关。MySQL把TEXT列与不带BINARY属性的CHAR和VARCHAR数据列里的数据当作二进制值对待。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在MySQL4.1以后的版本中，不同的数据列可以使用不同的字符集。在MySQL4.1版本以前，MySQL用服务器的字符集作为默认字符集。&lt;/p&gt;
&lt;p&gt;非二进制字符串，即我们通常所说的字符串，是按字符在字符集中先后次序进行比较和排序的。而二进制字符串因为与字符集无关，所以不以字符顺序排序，而是以字节的二进制值作为比较和排序的依据。下面介绍两种字符串的比较方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二进制字符串的比较方式是一个字节一个字节进行的，比较的依据是两个字节的二进制值。也就是说它是区分大小写的，因为同一个字母的大小写的数值编码是不一样的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;非二进制字符串的比较方式是一个字符一个字符进行的，比较的依据是两个字符在字符集中的先后顺序。在大多数字符集中，同一个字母的大小写往往有着相同的先后顺序，所以它不区分大小写。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二进制字符串与字符集无关，所以无论按字符计算还是按字节计算，二进制字符串的长度都是一样的。所以VARCHAR(20)并不表示它最多能容纳20个字符，而是表示它最多只能容纳可以用20个字节表示出来的字符。对于单字节字符集，每个字符只占用一个字节，所以这两者的长度是一样的，但对于多字节字符集，它能容纳的字符个数肯定少于20个。&lt;/p&gt;
&lt;h4 id=&quot;1-2-2-1-CHAR和VARCHAR&quot;&gt;&lt;a href=&quot;#1-2-2-1-CHAR和VARCHAR&quot; class=&quot;headerlink&quot; title=&quot;1.2.2.1. CHAR和VARCHAR&quot;&gt;&lt;/a&gt;1.2.2.1. CHAR和VARCHAR&lt;/h4&gt;&lt;p&gt;CHAR和VARCHAR是最常用的两种字符串类型，它们之间的区别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CHAR是固定长度的，每个值占用相同的字节，不够的位数MySQL会在它的右边用空格字符补足。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VARCHAR是一种可变长度的类型，每个值占用其刚好的字节数再加上一个用来记录其长度的字节即L+1字节。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CHAR(0)和VARCHAR(0)都是合法的。VARCHAR(0)是从MySQL4.0.2版开始的。它们的作用是作为占位符或用来表示各种on/off开关值。&lt;/p&gt;
&lt;p&gt;如何选择CHAR和VARCHAR，这里给出两个原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果数据都有相同的长度，选用VARCHAR会多占用空间，因为有一位用来存储其长度。如果数据长短不一，选用VARCHAR能节省存储空间。而CHAR不论字符长短都需占用相同的空间，即使是空值也不例外。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果长度出入不大，而且是使用MyISAM或ISAM类型的表，则用CHAR会比VARCHAR好，因为MyISAM和ISAM类型的表对处理固定长度的行的效率高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在一个数据表里，只要有一个数据列的长度是可变的，则所有数据列的长度将是可变的。MySQL会进行自动地转换。一个例外，CHAR长度小于4的不会进行自动转换，因为MySQL会认为这样做没必要，节省不了多少空间。反而MySQL会把大量长度小的VARCHAR转换成CHAR，以减少空间占用量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-2-2-2-BLOB和TEXT&quot;&gt;&lt;a href=&quot;#1-2-2-2-BLOB和TEXT&quot; class=&quot;headerlink&quot; title=&quot;1.2.2.2. BLOB和TEXT&quot;&gt;&lt;/a&gt;1.2.2.2. BLOB和TEXT&lt;/h4&gt;&lt;p&gt;BLOB是二进制字符串，TEXT是非二进制字符串。两者都可存放大容量的信息。&lt;/p&gt;
&lt;p&gt;有关BLOB和TEXT索引的建立：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;BDB表类型和MySQL3.23.2以上版本的MyISAM表类型允许在BLOB和TEXT数据列上建立索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ISAM、HEAP和InnoDB表不支持大对象列的索引。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用BLOB和TEXT应注意的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;由于这两个列类型所存储的数据量大，所以删除和修改操作容易在数据表里产生大量的碎片，需定期运行OPTIMIZE TABLE以减少碎片和提高性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果使用的值非常巨大，就需对服务器进行相应的优化调整，增加max_allowed_packet参数的值。对那些可会用到变些巨大数据的客户程序，也需加大它们的数据包大小。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;1-2-2-3-ENUM和SET&quot;&gt;&lt;a href=&quot;#1-2-2-3-ENUM和SET&quot; class=&quot;headerlink&quot; title=&quot;1.2.2.3. ENUM和SET&quot;&gt;&lt;/a&gt;1.2.2.3. ENUM和SET&lt;/h4&gt;&lt;p&gt;ENUM和SET都是比较特殊的字符串数据列类型，它们的取值范围是一个预先定义好的列表。ENUM或SET数据列的取值只能从这个列表中进行选择。ENUM和SET的主要区别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ENUM只能取单值，它的数据列表是一个枚举集合。它的合法取值列表最多允许有65535个成员。例如：ENUM(“N”,”Y”)表示，该数据列的取值要么是”Y”，要么就是”N”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SET可取多值。它的合法取值列表最多允许有64个成员。空字符串也是一个合法的SET值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ENUM和SET的值是以字符串形式出现的，但在内部，MySQL以数值的形式存储它们。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ENUM的合法取值列表中的字符串被按声明定义的顺序被编号，从1开始。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SET的编号不是按顺序进行编号的，SET中每一个合法取值都对应着SET值里的一个位。第一个合法取值对应0位，第二个合法取值对应1位，以此类推，如果数值形式的SET值等于0,则说明它是一个空字符串，如果某个合法的取值出现在SET数据列里，与之对应的位就会被置位；如果某个合法的取值没有出现在SET数据列里，与之对应的位就会被清零。正因为SET值与位有这样的对应关系，所以SET数据列的多个合法取值才能同时出现并构成SET值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;1-2-2-4-字符串类型数据列的字符集属性&quot;&gt;&lt;a href=&quot;#1-2-2-4-字符串类型数据列的字符集属性&quot; class=&quot;headerlink&quot; title=&quot;1.2.2.4. 字符串类型数据列的字符集属性&quot;&gt;&lt;/a&gt;1.2.2.4. 字符串类型数据列的字符集属性&lt;/h4&gt;&lt;p&gt;在MySQL 4.1以前的版本，字符串数据列的字符集由服务器的字符决定，MySQL 4.1版以后的版本可对每个字符串数据列指定不同的字符串。如果按默认方式设置，可按数据列、数据表、数据库、服务器的顺序关联字符串的字符集，直到找一个明确定义的字符集。&lt;/p&gt;
&lt;h3 id=&quot;1-2-3-日期-时间型数据列类型&quot;&gt;&lt;a href=&quot;#1-2-3-日期-时间型数据列类型&quot; class=&quot;headerlink&quot; title=&quot;1.2.3. 日期,时间型数据列类型&quot;&gt;&lt;/a&gt;1.2.3. 日期,时间型数据列类型&lt;/h3&gt;&lt;p&gt;MySQL的日期时间类型有：DATE，DATETIME，TIME，TIMESTAMP和YEAR，下表是这些类型的取值范围和存储空间要求：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 1.4. 日期，时间类型列&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;取值范围&lt;/th&gt;
&lt;th&gt;存储空间&lt;/th&gt;
&lt;th&gt;零值表示法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DATE&lt;/td&gt;
&lt;td&gt;1000-01-01~9999-12-31&lt;/td&gt;
&lt;td&gt;3字节(MySQL3.23版以前是4字节 )&lt;/td&gt;
&lt;td&gt;0000-00-00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME&lt;/td&gt;
&lt;td&gt;-838:59:59~838:59:59&lt;/td&gt;
&lt;td&gt;3字节&lt;/td&gt;
&lt;td&gt;00:00:00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DATETIME&lt;/td&gt;
&lt;td&gt;1000-01-01 00:00:00~9999-12-31 23:59:59&lt;/td&gt;
&lt;td&gt;8字节&lt;/td&gt;
&lt;td&gt;0000-00-00 00:00:00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIMESTAMP&lt;/td&gt;
&lt;td&gt;19700101000000~2037年的某个时刻&lt;/td&gt;
&lt;td&gt;4字节&lt;/td&gt;
&lt;td&gt;00000000000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YEAR&lt;/td&gt;
&lt;td&gt;YEAR(4)：1901~2155 YEAR(2)：1970~2069&lt;/td&gt;
&lt;td&gt;1字节&lt;/td&gt;
&lt;td&gt;0000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;MySQL总是把日期和日期里的年份放在最前面，按年月日的顺序显示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-2-3-1-DATE、TIME、DATATIME数据列类型&quot;&gt;&lt;a href=&quot;#1-2-3-1-DATE、TIME、DATATIME数据列类型&quot; class=&quot;headerlink&quot; title=&quot;1.2.3.1. DATE、TIME、DATATIME数据列类型&quot;&gt;&lt;/a&gt;1.2.3.1. DATE、TIME、DATATIME数据列类型&lt;/h4&gt;&lt;p&gt;DATE、TIME和DATATIME类型分别存放日期值、时间值、日期和时间值的组合。它们的格式分别是“CCYY-MM-DD”、“hh:mm:ss”、“CCYY-MM-DD hh:mm:ss”。&lt;/p&gt;
&lt;p&gt;DATATIME里的时间值和TIME值是有区别的，DATATIME里的时间值代表的是几点几分，TIME值代表的是所花费的时间。当向TIME数据列插值时，需用时间的完整写法，如12分30秒要写成“00:12:30”。&lt;/p&gt;
&lt;h4 id=&quot;1-2-3-2-TIMESTAMP数据列类型&quot;&gt;&lt;a href=&quot;#1-2-3-2-TIMESTAMP数据列类型&quot; class=&quot;headerlink&quot; title=&quot;1.2.3.2. TIMESTAMP数据列类型&quot;&gt;&lt;/a&gt;1.2.3.2. TIMESTAMP数据列类型&lt;/h4&gt;&lt;p&gt;TIMESTAMP数据列的格式是CCYYMMDDhhmmss，取值范围从19700101000000开始，即1970年1月1号，最大到2037年。它的特点是能把数据行的创建或修改时间记录下来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果把一个NULL值插入TIMESTAMP列，这个数据列就将自动取值为当前的日期和时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在创建和修改数据行时，如果没有明确对TIMESTAMP数据列进行赋值，则它就会自动取值为当前的日期和时间。如果行中有多个TIMESTAMP列，只有第一个会自动取值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果对TIMESTAMP设置一个确定的日期和时间值，则会使TIMESTAMP的自动取值功能失效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TIMESTAMP默认的列宽是14,可指定列宽，以改变显示效果。但不论你指定的列宽如何，MySQL都是以4字节来存储TIMESTAMP值，也总是以14位精度来计算。&lt;/p&gt;
&lt;p&gt;如果需要把创建时间和最近一次修改时间同时记录下来，可以用两个时间戳来记录，一个记录创建时间，一个记录修改时间。不过需记住两件事，一是要把记录修改时间的TIMESTAMP数据列放在最前面，这样才会自动取值；二是创建一条新记录时，要用now()函数来初始化创建时间TIMESTAMP数据列，这样，该TIMESTAMP数据列就不会再变化。&lt;/p&gt;
&lt;h4 id=&quot;1-2-3-3-YEAR&quot;&gt;&lt;a href=&quot;#1-2-3-3-YEAR&quot; class=&quot;headerlink&quot; title=&quot;1.2.3.3. YEAR&quot;&gt;&lt;/a&gt;1.2.3.3. YEAR&lt;/h4&gt;&lt;p&gt;YEAR是一种单字节的数据列类型，YEAR(4)的取值范围是1901~2155,YEAR(2)的取值范围是1970~2069,但只显示最后两位数。MySQL能自动把两位数字年份转换成四位数字的年份，如97和14分被转换成1997和2014。转换规则是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;年份值00~69将被转换成2000~2069；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;年份值70~99将被转换成1970~1999。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;00被转换成0000,而不是2000。因为数值00也就是0,而0值是YEAR的一个合法取值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-3-唯一编号&quot;&gt;&lt;a href=&quot;#1-3-唯一编号&quot; class=&quot;headerlink&quot; title=&quot;1.3. 唯一编号&quot;&gt;&lt;/a&gt;1.3. 唯一编号&lt;/h2&gt;&lt;p&gt;在数据库应用，我们经常要用到唯一编号，以标识记录。在MySQL中可通过数据列的AUTO_INCREMENT属性来自动生成。MySQL支持多种数据表，每种数据表的自增属性都有差异，这里将介绍各种数据表里的数据列自增属性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ISAM表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果把一个NULL插入到一个AUTO_INCREMENT数据列里去，MySQL将自动生成下一个序列编号。编号从1开始，并1为基数递增。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把0插入AUTO_INCREMENT数据列的效果与插入NULL值一样。但不建议这样做，还是以插入NULL值为好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当插入记录时，没有为AUTO_INCREMENT明确指定值，则等同插入NULL值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当插入记录时，如果为AUTO_INCREMENT数据列明确指定了一个数值，则会出现两种情况，情况一，如果插入的值与已有的编号重复，则会出现出错信息，因为AUTO_INCREMENT数据列的值必须是唯一的；情况二，如果插入的值大于已编号的值，则会把该插入到数据列中，并使在下一个编号将从这个新值开始递增。也就是说，可以跳过一些编号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果自增序列的最大值被删除了，则在插入新记录时，该值被重用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果用UPDATE命令更新自增列，如果列值与已有的值重复，则会出错。如果大于已有值，则下一个编号从该值开始递增。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果用replace命令基于AUTO_INCREMENT数据列里的值来修改数据表里的现有记录，即AUTO_INCREMENT数据列出现在了replace命令的where子句里，相应的AUTO_INCREMENT值将不会发生变化。但如果replace命令是通过其它的PRIMARY KEY OR UNIQUE索引来修改现有记录的(即AUTO_INCREMENT数据列没有出现在replace命令的where子句中)，相应的AUTO_INCREMENT值–如果设置其为NULL(如没有对它赋值)的话–就会发生变化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;last_insert_id()函数可获得自增列自动生成的最后一个编号。但该函数只与服务器的本次会话过程中生成的值有关。如果在与服务器的本次会话中尚未生成AUTO_INCREMENT值，则该函数返回0。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它数据表的自动编号机制都以ISAM表中的机制为基础。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyISAM数据表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除最大编号的记录后，该编号不可重用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可在建表时可用“AUTO_INCREMENT=n”选项来指定一个自增的初始值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用alter table table_name AUTO_INCREMENT=n命令来重设自增的起始值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可使用复合索引在同一个数据表里创建多个相互独立的自增序列，具体做法是这样的：为数据表创建一个由多个数据列组成的PRIMARY KEY OR UNIQUE索引，并把AUTO_INCREMENT数据列包括在这个索引里作为它的最后一个数据列。这样，这个复合索引里，前面的那些数据列每构成一种独一无二的组合，最末尾的AUTO_INCREMENT数据列就会生成一个与该组合相对应的序列编号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HEAP数据表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HEAP数据表从MySQL4.1开始才允许使用自增列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自增值可通过CREATE TABLE语句的 AUTO_INCREMENT=n选项来设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可通过ALTER TABLE语句的AUTO_INCREMENT=n选项来修改自增始初值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编号不可重用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HEAP数据表不支持在一个数据表中使用复合索引来生成多个互不干扰的序列编号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BDB数据表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不可通过CREATE TABLE OR ALTER TABLE的AUTO_INCREMENT=n选项来改变自增初始值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可重用编号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持在一个数据表里使用复合索引来生成多个互不干扰的序列编号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InnDB数据表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不可通过CREATE TABLE OR ALTER TABLE的AUTO_INCREMENT=n选项来改变自增初始值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不可重用编号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不支持在一个数据表里使用复合索引来生成多个互不干扰的序列编号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在使用AUTO_INCREMENT时，应注意以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AUTO_INCREMENT是数据列的一种属性，只适用于整数类型数据列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置AUTO_INCREMENT属性的数据列应该是一个正数序列，所以应该把该数据列声明为UNSIGNED，这样序列的编号个可增加一倍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AUTO_INCREMENT数据列必须有唯一索引，以避免序号重复。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AUTO_INCREMENT数据列必须具备NOT NULL属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AUTO_INCREMENT数据列序号的最大值受该列的数据类型约束，如TINYINT数据列的最大编号是127,如加上UNSIGNED，则最大为255。一旦达到上限，AUTO_INCREMENT就会失效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当进行全表删除时，AUTO_INCREMENT会从1重新开始编号。全表删除的意思是发出以下两条语句时：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;delete from table_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;truncate table table_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是因为进行全表操作时，MySQL实际是做了这样的优化操作：先把数据表里的所有数据和索引删除，然后重建数据表。如果想删除所有的数据行又想保留序列编号信息，可这样用一个带where的delete命令以抑制MySQL的优化：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;delete from table_name where 1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这将迫使MySQL为每个删除的数据行都做一次条件表达式的求值操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强制MySQL不复用已经使用过的序列值的方法是：另外创建一个专门用来生成AUTO_INCREMENT序列的数据表，并做到永远不去删除该表的记录。当需要在主数据表里插入一条记录时，先在那个专门生成序号的表中插入一个NULL值以产生一个编号，然后，在往主数据表里插入数据时，利用LAST_INSERT_ID()函数取得这个编号，并把它赋值给主表的存放序列的数据列。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;insert into id set id = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into main set main_id = LAST_INSERT_ID();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用alter命令给一个数据表增加一个具有AUTO_INCREMENT属性的数据列。MySQL会自动生成所有的编号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要重新排列现有的序列编号，最简单的方法是先删除该列，再重建该，MySQL会重新生连续的编号序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在不用AUTO_INCREMENT的情况下生成序列，可利用带参数的LAST_INSERT_ID()函数。如果用一个带参数的LAST_INSERT_ID(expr)去插入或修改一个数据列，紧接着又调用不带参数的LAST_INSERT_ID()函数，则第二次函数调用返回的就是expr的值。下面演示该方法的具体操作：&lt;/p&gt;
&lt;p&gt;先创建一个只有一个数据行的数据表：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;create table seq_table (id int unsigned not null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into seq_table values (0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;接着用以下操作检索出序列号：

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;update seq_table set seq = LAST_INSERT_ID( seq + 1 );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select LAST_INSERT_ID();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


通过修改seq+1中的常数值，可生成不同步长的序列，如seq+10可生成步长为10的序列。

该方法可用于计数器，在数据表中插入多行以记录不同的计数值。再配合LAST_INSERT_ID()函数的返回值生成不同内容的计数值。这种方法的优点是不用事务或LOCK，UNLOCK表就可生成唯一的序列编号。不会影响其它客户程序的正常表操作。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;1-4-字符集支持&quot;&gt;&lt;a href=&quot;#1-4-字符集支持&quot; class=&quot;headerlink&quot; title=&quot;1.4. 字符集支持&quot;&gt;&lt;/a&gt;1.4. 字符集支持&lt;/h2&gt;&lt;p&gt;MySQL4.1以前版本服务器只能使用单一字符集，从MySQL4.1版本开始，不仅服务器能够使用多种字符集，而且在服务器、数据库、数据表、数据列以及字符串常数多个级别上设置不同的字符集。&lt;/p&gt;
&lt;h3 id=&quot;1-4-1-MySQL4-1以前版本&quot;&gt;&lt;a href=&quot;#1-4-1-MySQL4-1以前版本&quot; class=&quot;headerlink&quot; title=&quot;1.4.1. MySQL4.1以前版本&quot;&gt;&lt;/a&gt;1.4.1. MySQL4.1以前版本&lt;/h3&gt;&lt;p&gt;MySQL4.1以前版本的字符集由服务器默认指定，默认值是编译系统时指定的字符集，该字符集也可通过在启动服务器时指定–default-character-set来修改。这种修改会对数据表的索引造成影响，因为索引的顺序是和字符集有关的，修改字符集会使这个已排序的顺序产生错误。要解决该问题，我们要用修改后的字符集的排序顺序重建表的索引。重建索引有以下几种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用mysqldump导出数据，再清除表里的内容，最后用导出文件重新导入。数据表的索引将在导入数时重建。该方法适用于所有数据表类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除索引，然后重建。用alter table命令或drop index和create index命令来完成。该方法也适用于所有数据表类型。但该方法需要我们了解重建索引的精确定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyISAM数据表的索引可以用myisamchk程序的–recover和–quick选项加上一个用来设定新字符集的–set-character-set选项进行重建。还可以用mysqlcheck程序的–repair和–quick选项或者一个带QUICK选项的REPLACE TABLE语句来重建索引，这种方式较方便。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-4-2-MySQL4-1以后版本&quot;&gt;&lt;a href=&quot;#1-4-2-MySQL4-1以后版本&quot; class=&quot;headerlink&quot; title=&quot;1.4.2. MySQL4.1以后版本&quot;&gt;&lt;/a&gt;1.4.2. MySQL4.1以后版本&lt;/h3&gt;&lt;p&gt;MySQL4.1以后的版本对字符集的支持好了很多，具有以下新增功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;支持服务器同时使用多种字符集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;允许在服务器，数据库，数据表，数据列等多级别上设置不同的字符集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务器的默认字符集在编译时选定，但可在启动服务器时用–default-character-set选项来更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用ALTER DATABASE db_name DEFAULT CHARACTER SET charset来设置数据库字符集。 如果只有default参数，则使用服务器的字符集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用CREATE TABLE table_name(…) CHARACTER SET = charset设置数据表字符集。如果charset为default，则使用数据表所在数据库的字符集作为数据表的字符集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在数据列中，可用CHARACTER SET charset属性来设置数据列的字符集。charset不能是default，如果没有该属性，则默认使用数据表的字符集。允许设置字符集的数据列有char，varchar(不带binary属性)及TEXT类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用_charset str转换字符串常数的字符集。如：_utf8 ‘mysql’，_latinl ‘oracle’。该方法只适用于括在引号内的字符串，其它十六进制常数 、字符串表达式等可用CONVERT()函数进行转换，如：SELECT CONVERT( str USING charset)。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过MySQL提供的函数可进行字符集转换和查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新增的COLLATE操作符使我们可按某一种字符集的排序顺序来处理另一种字符集的数据。如：SELECT a from t ORDER BY a COLLATE utf-8；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用SHOW CHARACTER SET命令可显示服务器支持的字符集列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当服务器转换到另一种字符集时，会自动对索引进行重新排序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过UTF-8和UCS2字符集提供了Unicode支持。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL现在还不支持：1,在同一个字符串里混用不同字符集的字符；2,在同一个数据列里混用不同的字符集。&lt;/p&gt;
&lt;h3 id=&quot;1-4-3-各级字符集的查询方法&quot;&gt;&lt;a href=&quot;#1-4-3-各级字符集的查询方法&quot; class=&quot;headerlink&quot; title=&quot;1.4.3. 各级字符集的查询方法&quot;&gt;&lt;/a&gt;1.4.3. 各级字符集的查询方法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务器级&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SHOW CHARACTER SET；可查出可供使用的所有字符集。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHOW VARIABLES LIKE &amp;apos;character_set&amp;apos;；可查出服务器的默认字符集。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可查出数据库级的字符集。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SHOW CREATE DATABASE db_name；&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两条命令可查出数据表的字符集。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SHOW CREATE TABLE table_name；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHOW TABLE STATUS LIKE &amp;apos;table_name&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以下几命令可查出数据列的字符集：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DESCRIBE table_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHOW COLUMNS FROM table_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHOW CREATE TABLE table_name;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用CHARSET()函数可确定特定字符串，字符串表达式或数据列值相关联的字符串的字符集。如：SELECT CHARSET(str)。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-4-4-Unicode支持&quot;&gt;&lt;a href=&quot;#1-4-4-Unicode支持&quot; class=&quot;headerlink&quot; title=&quot;1.4.4. Unicode支持&quot;&gt;&lt;/a&gt;1.4.4. Unicode支持&lt;/h3&gt;&lt;p&gt;MySQL提供两种字符集来支持Unicode。一个是UTF-8，一种可变长的编码格式，需用1至4个字节来表示一个字符；另一个是UCS2，该字符集中的每个字符需要用两个字节来表示。&lt;/p&gt;
&lt;h2 id=&quot;1-5-如何选择数据列类型？&quot;&gt;&lt;a href=&quot;#1-5-如何选择数据列类型？&quot; class=&quot;headerlink&quot; title=&quot;1.5. 如何选择数据列类型？&quot;&gt;&lt;/a&gt;1.5. 如何选择数据列类型？&lt;/h2&gt;&lt;p&gt;选择正确的数据列类型能大大提高数据库的性能和使数据库具有高扩展性。在选择数据列类型时，请从以下几个方面考虑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;存放到数据列中的数据类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据值的取值范围。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;考虑性能和处理效率。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数值操作比字符操作快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;小类型的处理速度比大类型快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不同数据表中固定长度类型和可变长度类型的处理效率是不同的。&lt;/p&gt;
&lt;p&gt;可变长度类型在经过删除和修改操作后容易产生碎片，降低系统性能，需定期运行OPTIMIZE TABLE命令以优化数据表。&lt;/p&gt;
&lt;p&gt;固定长度类型由于有固定的长度，所以容易确定每条记录的起始点，可加快数据表的修复速度。&lt;/p&gt;
&lt;p&gt;在MyISAM和ISAM表中使用固定长度类型数据列有助改善数据库性能。&lt;/p&gt;
&lt;p&gt;在InnoDB表中，固定长度和可变长度数据列类型都以相同方式存储，所以固定长度数据列类型并没有性能优势，反而由于可度长度数据列类型由于占用存储空间较少，所以处理速度会快些。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可索引类型能加快数据的查询速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;明确指定数据列的NOT NULL属性可使MySQL在检索过程中不用去判断数据列是否是NULL，所以可加快处理速度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据如何进行比较，是否区分大小写。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;是否要在数据列上建立索引。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-6-表达式操作符&quot;&gt;&lt;a href=&quot;#1-6-表达式操作符&quot; class=&quot;headerlink&quot; title=&quot;1.6. 表达式操作符&quot;&gt;&lt;/a&gt;1.6. 表达式操作符&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Table 1.5. 算术操作符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;a + b&lt;/td&gt;
&lt;td&gt;相加&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;a - b&lt;/td&gt;
&lt;td&gt;相减&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;- a&lt;/td&gt;
&lt;td&gt;求负&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;a * b&lt;/td&gt;
&lt;td&gt;乘法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;a / b&lt;/td&gt;
&lt;td&gt;除法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;a % b&lt;/td&gt;
&lt;td&gt;求余&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Table 1.6. 逻辑操作符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AND 或 &amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;a AND b 或 a &amp;amp;&amp;amp; b&lt;/td&gt;
&lt;td&gt;逻辑与，若两个操作数同时为真，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OR 或 &amp;#124;&amp;#124;&lt;/td&gt;
&lt;td&gt;a OR b 或 a &amp;#124;&amp;#124; b&lt;/td&gt;
&lt;td&gt;逻辑或，只要有一个操作数为真，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;XOR&lt;/td&gt;
&lt;td&gt;a XOR b&lt;/td&gt;
&lt;td&gt;逻辑异或，若有且仅有一个操作数为真，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOT 或 ！&lt;/td&gt;
&lt;td&gt;NOT a 或 !a&lt;/td&gt;
&lt;td&gt;逻辑非，若操作数为假，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Table 1.7. 位操作符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;a &amp;amp; b&lt;/td&gt;
&lt;td&gt;按位与，若操作数同位同为1,则该位为1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;#124;&lt;/td&gt;
&lt;td&gt;a &amp;#124; b&lt;/td&gt;
&lt;td&gt;按位或，若操作数同位有一位为1,则该位为1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;a ^ b&lt;/td&gt;
&lt;td&gt;按拉异或，若操作数同一位分别为1和0,则该位为1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&amp;lt;&lt;/td&gt;
&lt;td&gt;a &amp;lt;&amp;lt; b&lt;/td&gt;
&lt;td&gt;把a中的各个位左移b个位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;a &amp;gt;&amp;gt; b&lt;/td&gt;
&lt;td&gt;把a中的各个位右移b个位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Table 1.8. 比较操作符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;a = b&lt;/td&gt;
&lt;td&gt;若两个操作数相等，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&amp;gt;&lt;/td&gt;
&lt;td&gt;a &amp;lt;=&amp;gt; b&lt;/td&gt;
&lt;td&gt;若两个操作数相等，则为真，可用于NULL值比较&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!= 或 &amp;lt;&amp;gt;&lt;/td&gt;
&lt;td&gt;a != b 或 a &amp;lt;&amp;gt; b&lt;/td&gt;
&lt;td&gt;若两个操用数不等，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;a &amp;lt; b&lt;/td&gt;
&lt;td&gt;若a小于b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;a &amp;lt;= b&lt;/td&gt;
&lt;td&gt;若a小于或等于b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;a &amp;gt; b&lt;/td&gt;
&lt;td&gt;若a大于b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;a &amp;gt; b&lt;/td&gt;
&lt;td&gt;若a大于或等于b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IN&lt;/td&gt;
&lt;td&gt;a IN (b1,b2,…)&lt;/td&gt;
&lt;td&gt;若a等于b1,b2,…中的某一个，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BETWEEN&lt;/td&gt;
&lt;td&gt;a BETWEEN b AND c&lt;/td&gt;
&lt;td&gt;若a在b和c之间(包括b和c)，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOT BETWEEN&lt;/td&gt;
&lt;td&gt;a NOT BETWEEN b AND c&lt;/td&gt;
&lt;td&gt;若a不在b和c之间(包括b和c)，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LIKE&lt;/td&gt;
&lt;td&gt;a LIKE b&lt;/td&gt;
&lt;td&gt;SQL模式匹配，若a匹配b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOT LIKE&lt;/td&gt;
&lt;td&gt;a NOT LIKE b&lt;/td&gt;
&lt;td&gt;SQL模式匹配，若a不匹配b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REGEXP&lt;/td&gt;
&lt;td&gt;a REGEXP b&lt;/td&gt;
&lt;td&gt;正则表达式匹配，若a匹配b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOT REGEXP&lt;/td&gt;
&lt;td&gt;a NOT REGEXP b&lt;/td&gt;
&lt;td&gt;正则表达式匹配，若a不匹配b，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IS NULL&lt;/td&gt;
&lt;td&gt;a IS NULL&lt;/td&gt;
&lt;td&gt;若a为NULL，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IS NOT NULL&lt;/td&gt;
&lt;td&gt;a IS NOT NULL&lt;/td&gt;
&lt;td&gt;若a不为NULL，则为真&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;LIKE模式匹配中的“%”匹配任意个字符，“_”匹配一个字符。匹配不区分大小写字符。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Table 1.9. 操作符优先级(由高至低排列)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BINARY，COLLATE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOT、！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;XOR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-(一元求负操作符)、~(一元取反操作符)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*、/、%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+、-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&amp;lt;、&amp;gt;&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;#124;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;、&amp;lt;=、=、&amp;lt;=&amp;gt;、!=、&amp;lt;&amp;gt;、&amp;gt;=、&amp;gt;、IN、IS、LIKE、REGEXP、RLIKE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BETWEEN、CASE、WHEN、THEN、ELSE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AND、&amp;amp;&amp;amp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OR、&amp;#124;&amp;#124;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:=&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;1-7-类型转换&quot;&gt;&lt;a href=&quot;#1-7-类型转换&quot; class=&quot;headerlink&quot; title=&quot;1.7. 类型转换&quot;&gt;&lt;/a&gt;1.7. 类型转换&lt;/h2&gt;&lt;p&gt;在MySQL的表达式中，如果某个数据值的类型与上下文所要求的类型不相符，MySQL则会根据将要进行的操作自动地对数据值进行类型转换。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 + &amp;apos;2&amp;apos;      会转换成1 + 2 = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1+ &amp;apos;abc&amp;apos;     会转换成1 + 0 = 1 由于abc不能转换成任何的值，所以默认为0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MySQL会根据表达式上下文的要求，把字符串和数值自动转换为日期和时间值&lt;/p&gt;
&lt;p&gt;对于超范围或非法的值，MySQL也会进行转换，但转换出来的结果是错误的。出现该情况时，MySQL会提示警告信息，我们可捕获该信息以进行相应的处理。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-2-查询优化&quot;&gt;&lt;a href=&quot;#Chapter-2-查询优化&quot; class=&quot;headerlink&quot; title=&quot;Chapter 2. 查询优化&quot;&gt;&lt;/a&gt;Chapter 2. 查询优化&lt;/h2&gt;&lt;p&gt;数据库是数据的集合，与数学的集合论有密不可分的关系。&lt;/p&gt;
&lt;p&gt;为提高查询速度，我们可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对数据表添加索引，以加快搜索速度；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过编程技巧最大限度地利用索引；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优化查询语句，以使服务器最快响应多客户的请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;研究硬件处理过程，减少物理约束。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-1-索引&quot;&gt;&lt;a href=&quot;#2-1-索引&quot; class=&quot;headerlink&quot; title=&quot;2.1. 索引&quot;&gt;&lt;/a&gt;2.1. 索引&lt;/h2&gt;&lt;p&gt;索引技术是关系数据查询中最重要的技术。如果要加提升数据库的性能，索引优化是首先应该考虑的。因为它能使我们的数据库得到最大性能方面的提升。&lt;/p&gt;
&lt;p&gt;索引的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;没有索引的表是没有排序的数据集合，如果要查询数据需进行全表扫描。有索引的表是一个在索引列上排序了数据表，可通过索引快速定位记录。在MyISAM和ISAM数据表中，数据行保存在数据文件中，索引保存在索引文件中。BDB与InnoDB数据表把数据与索引放在同一个文件中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在多表关联查询中，索引的作用就更大。如果没有索引，在最坏的情况下，全表扫描的次数可能是各表数据行的组合个数，可能是一个天文数字。这样的查询是破坏性的，可能会造成数据库瘫痪。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于使用了MIN()或是MAX()函数的查询，如果相关的数据列上有索引，MySQL能直接找到该最大、最小值的行，根本不用一个一个地去检查数据行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;索引加快ORDER BY 和 GROUP BY子句的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当在数值型数据列上查询数据，而该列有索引，索引能使MySQL根本不用去读取数据行，直接从索引取值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;索引的缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;索引需占用磁盘空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;索引会减慢在索引数据列上的插入、删除和修改操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;索引列的选择&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;索引应该创建在搜索、排序、分组等操作所涉及的数据列上。也就是说，在where子句，关联检索中的from子句、order by或group by子句中出现过的数据列最适合用来创建索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量使用唯一索引，它能使索引发挥最好的效能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量用比较短的值进行索引。当对字符串进行索引时，应该指定一个前缀长度，比如对字符串的前10位或20位的字符进行排序，而不用把整个字符串几十个字符用来索引排序。这样能减少磁盘I/O，提高处理速度。最重要的一点是，键值越短，索引缓冲区里容纳的键值也就越多，而MySQL同时保存在内存里的索引越多，索引缓冲区的命中率也就越高。当然，只对数据列第一个字符进行索引是没什么意义的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;充分利用最左前缀。所谓最左前缀也就是在复合索引中最边的索引列。如复合索引(a,b,c) ，其中a就是最左前缀。它是使用率最高的索引，需认真选择。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要建太多索引，索引是会消耗系统资源的，要适可而止。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;索引主要用于&amp;lt;、&amp;lt;=、=、&amp;gt;=、&amp;gt;、BETWEEN等的比较操作中，所以索引应该建立在与这样操作相关的数据列上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用慢查询日志来找出性能差的查询，通过mysqldumpslow可查看该日志。针对性能差的查询可利用索引来加快查询速度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-2-查询优化程序&quot;&gt;&lt;a href=&quot;#2-2-查询优化程序&quot; class=&quot;headerlink&quot; title=&quot;2.2. 查询优化程序&quot;&gt;&lt;/a&gt;2.2. 查询优化程序&lt;/h2&gt;&lt;p&gt;当我们发一条查询命令时，MySQL分对它进行分析，以优化查询。把explain语名放到查询前面可显示查询的执行路线，对优化查询提供有用的信息。以下几个原则可帮助系统挑选和使用索引：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;尽量对同类型的数据列进行比较。如：VARCHAR(5)和VARCHAR(5)是同类型的，CHAR(5)和VARCHAR(5)是不同类型的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量让索引的数据列在比较表达式中单独出现，不要把它包含在函数或复杂表达式。否则索引会不起作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量不要在LIKE模式的开头使用通配符。如：%string%。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于MyISAM和BDB数据表，用ANALYZE TABLE语句让服务器对索引键值的分布进行分析，为优化程序提供更有价值的信息。另一个方法是用myisamchk –analyze(适用于MyISAM表)或isamchk –analyze(适用于ISAM表)命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用EXPLAIN语句来分析查询语句的执行效率。检查查询所使用的索引是不是能够迅速地排除不符合条件的数据行，如果不是，可以试着用STRAIGHT_JOIN强制各有关数据表按指定顺序进行关联。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尝试查询的不同写法，比较运行情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要滥用MySQL的类型自动转换功能。自动转换会减慢查询的速度并会使有关的索引失效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-3-数据列类型与查询效率&quot;&gt;&lt;a href=&quot;#2-3-数据列类型与查询效率&quot; class=&quot;headerlink&quot; title=&quot;2.3. 数据列类型与查询效率&quot;&gt;&lt;/a&gt;2.3. 数据列类型与查询效率&lt;/h2&gt;&lt;p&gt;选用适当的数据列类型有助于提高查询命令的执行速度，下面是几点关于如何选择合适数据列类型的建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;尽量选用尺寸较小的数据列。这样能节约磁盘空间和加快查询速度。如果较短的数据列上建有索引，则索引的处理速度会进一步提高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;针对数据列类型，尽量选择最适用的数据表类型。如固定长度数据列在MyISAM或ISAM数据表中的速度是最快的，所以在这样数据表中尽量使用char类型而不是varchar类型来保存字符串数据。对于InnoDB数据表类型，由于varchar类型可有效减少占用空间，从而减少磁盘I/O，所以使用varchar类型是有利的。对于BDB类型数据表，使用定长和不定长列类型的区别就不大，可任选一种。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量把数据列声明为NOT NULL，以节约存储空间和加快处理速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于取值范围有限的数据列，考虑使用ENUM数据列类型。ENUM数据列类型在MySQL中的处理速度是很快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用PROCEDURE ANALYSE()语句来分析数据表，它会对数据列的声明提出建议，我们可根据建议进行修改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;select * from table_name PROCEDURE ANALYSE();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from table_name PROCEDURE ANALYSE(16,256);    #(16,256)含义是：如果某列的不同取值在16个以上或长度超过256字节，就不提出使用ENUM的建议。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用OPTIMIZE TABLE语句对容易出现碎片的数据表进行整理。包含可变长数据列的数据表都会产生碎片，从而占用多余的磁盘空间和影响查询速度。所以要定期运行OPTIMIZE TABLE语句以防止数据表查询性能降低。但该语句只对MyISAM数据表有效。对各种数据表通用的碎片整理方法是这样的：先用工具程序mysqldump导出数据表，再删除数据表后重建，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysqldump --opt db_name table_name &amp;amp;gt; dump.sql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mysql db_name &amp;amp;lt; dump.sql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把非结构化和变化大的数据放在BLOB数据列里，定期用OPTIMIZE TABLE命令优化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;人为地给数据表增加一个数据列，以充当索引。做法是这样的，先根据数据表里的其它数据列计算出一个散列值，并保存在一个数据列里，然后通过搜索散列值来检索数据行。注意，该技巧只适用于精确匹配型查询。散列值在大于，小于等的操作中不起作用。散列值可以MD5()(适用于3.23及以上版本)，SHA1()(适用于4.0.1及以上版本)，CRC32()(适用于4.1及以上版本)等函数生成。使用散列值支检索BLOB和TEXT值的做法比直接检索BLOB和TEXT本身的做法快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量避免对大尺寸的BLOB值进行检索。如果要检索都应该通过它的上面提到散列值先进行筛选。而不应该盲目地在网络中传送大量BLOB值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果把BLOB值剥离到另外一个数据表里去，可实现数据表中其它数据列转变成固定长度数据列的话。就即可减少数据表碎片，又可使在原始表中的select *查询不会把大尺寸的BLOB值不必要地通过网络传送。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-4-有效地加载数据&quot;&gt;&lt;a href=&quot;#2-4-有效地加载数据&quot; class=&quot;headerlink&quot; title=&quot;2.4. 有效地加载数据&quot;&gt;&lt;/a&gt;2.4. 有效地加载数据&lt;/h2&gt;&lt;p&gt;有时我们需大量地把数据加载到数据表，采用批量加载的方式比一个一个记录加载效率高，因为MySQL不用每加载一条记录就刷新一次索引。下面介绍几个有助于加快数据加载的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用LOAD DATA语句要比INSERT语句的加载速度快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LOAD DATA比LOAD DATA LOCAL语句的效率高。前者可由服务器直接从本地磁盘读取加载数据，后者需由客户程序去读取文件并通过网络传送到服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果一定要用INSERT语句，应尽量在一条语句中插入多个数据行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果必须使用多条INSERT语句，则应尽量把它们集中在一起放到一个事务中进行处理，而不是在自动提交模式下执行它们：如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BEGIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name values (...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name values (...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name values (...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COMMIT;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于不支持事务的表，应对表进行写锁定，然后在表锁定期间对表进行INSERT操作，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LOCK TABLES table_name WRITE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name ...;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name ...;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name ...;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UNLOCK TABLES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用客户/服务器通信协议中的压缩功能以减少网络传输的数据量。但该压缩会消耗大量的系统资源，所以小心使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量让MySQL插入默认值。不要在INSERT中写太多值，以减少网络传输量和服务器端的语法分析时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于MyISAM和ISAM数据表，如果需加载大量数据，应先建立一个没索引的表，加载数据后再创建索引。该方法不适用于InnoDB或BDB数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;禁用和重新激活索引的方法有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用ALTER TABLE语句的DISABLE KEYS和ENABLE KEYS命令，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE table_name DISABLE KEYS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE table_name ENABLE KEYS;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用myisamchk或isamchk工具。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ myisamchk --keys-used=0 table_name                   #禁止&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ myisamchk --recover --quick --key-used=n table_name  #激活&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;n是用来表明需要激活索引的位掩码，第0位对应第一个索引，如果有三个索引，n值就是7(二进制111)。索引编号可以下命令确定：

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ myisamchk --description table_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;2-5-调度和锁定&quot;&gt;&lt;a href=&quot;#2-5-调度和锁定&quot; class=&quot;headerlink&quot; title=&quot;2.5. 调度和锁定&quot;&gt;&lt;/a&gt;2.5. 调度和锁定&lt;/h2&gt;&lt;p&gt;在很多客户一起查询数据表时，如果使客户能最快地查询到数据就是调度和锁定做的工作了。在MySQL中，我们把select操作叫做读，把对数据表修改增加的操作(INSERT,UPDATE,REPLACE…)叫做写。MySQL的基本调度策略可以归纳为以下两条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;写入请求将按它们到达服务器的顺序进行处理；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;写操作的优先级要高于读操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MyISAM和ISAM数据表的调度策略是在数据表锁的帮助下实现的，在客户程序要访问数据表之前，需获得相应的锁，在完成对数据表的操作后，再释放该锁。锁的管理通常由服务器管理，也可人为地用LOCK TABLES和UNLOCK TABLES命令来申请和释放锁。写操作时，需要申请一个独占性的锁，也就是说在写操作其间，该表只能由写操作的客户使用。读操作时，客户必须申请一个允许其他客户对数据表进行写操作的锁，以确保客户在读的过程中数据表不会发生改变。但读操作锁不是独占的，可有多个读操作同时作用于同一个数据表。&lt;/p&gt;
&lt;p&gt;通过一些修饰符可影响调度策略，如LOW_PRIORITY(用于DELETE,INSERT,LOAD DATA,REPLACE,UPDATE语句)、HIGH_PRIORITY(用于SELECT语句)、DELAYED(用于INSERT和REPLACE语句)。它们的作用是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LOW_PRIORITY会使写操作的优先级降低到读操作以下，也就是说读操作会阻塞该级别的写操作，SELECT的HIGH_PRIORITY有类似的作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;INSERT语句中的DELAYED修饰会使插入操作被放入一个“延迟插入”队列。并返回状态信息给客户，使客户程序可在新数据行还没插入到数据表之前继续执行后面的操作。如果一直有客户读该数据表，新数据行会一直待在队列中，直到数据表没有读操作时，服务器才会把队列中的数据行真正插入到数据表中。该语句可用在以下场合，在一个有冗长查询的数据表中插入数据，而你又不想被阻塞，你就可发出INSERT DELAYED语句，把插入操作放入服务器“延迟插入”队列，你无需等待就马上可进行接下来的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当一个数据表里从未进行过删除操作或刚刚对它进行过碎片整理的情况下，用INSERT语句插入的数据行只会被添加到数据表的末尾，而不会插入到数据表的中间位置。这样，对于MyISAM表，MySQL允许在有其它客户正在读操作的时间进行写操作。我们称之这并发插入。要使用该技巧，需注意以下两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不要在INSERT语句中使用LOW_PRIORITY修饰符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;读操作应用LOCK TABLES … READ LOCAL而不是用LOCK TABLES … READ语句来进行数据表读锁定。LOCAL关键字只对数据表中已存在行进行锁定，不会阻塞把新行添加到数据表末尾。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BDB数据表使用页面级操作锁，InnoDB数据表使用数据行级操作锁。所以这两种表的并发性比MyISAM和ISAM数据表这种表级锁的并发性会好很多。其中InnoDB的并发性最好。综上所述，我们可得出以下结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MyISAM和ISAM数据表的检索速度最快，但如果在检索和修改操作较多的场合，会出锁竞争的问题，造成等待时间延长。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BDB和InnoDB数据表能在有大量修改操作的环境下提供很好的并发性，从而提供更好的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyISAM和ISAM数据表由于进行表级锁定，所以不会出现死锁现象，BDB和InnoDB数据表则存在死锁的可能性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-6-服务器优化&quot;&gt;&lt;a href=&quot;#2-6-服务器优化&quot; class=&quot;headerlink&quot; title=&quot;2.6. 服务器优化&quot;&gt;&lt;/a&gt;2.6. 服务器优化&lt;/h2&gt;&lt;p&gt;优化原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;内存里的数据要比磁盘上的数据访问起来快；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;站数据尽可能长时间地留在内存里能减少磁盘读写活动的工作量；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让索引信息留在内存里要比让数据记录的内容留在内存里更重要。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对以上几个原则，我们应该调整服务器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;增加服务器的缓存区容量，以便数据在内存在停留的时间长一点，以减少磁盘I/0。下面介绍几个重要的缓冲区：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数据表缓冲区存放着与打开的数据表相的信息，它的大小可由服务器参数“table_cache”设置。Opened_tables参数记录服务器进行过多少次数据表打开操作，如果该值变化很大，就可能是数据表缓冲区已满，需把一些不常用的表移出缓冲区，以腾出空打开新的数据表。可用以下命令查看Opened_tables的值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SHOW STATUS LIKE &amp;apos;Opened_tables&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在MyISAM和ISAM数据表中，索引被缓存在“key buffer”里，它的大小由服务器参数“key_buffer_size”来控制。系统默认的大小是8M，如果内存充足的话可适当扩大该值，以使更多索引块缓存在该区里，以加快索引的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InnoDB和BDB数据表也各有一个缓冲区，分别叫innodb_buffer_pool_size和bdb_cache_size。InnoDB还有一个日志缓冲区叫innodb_log_buffer_size。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自4.0.1开始，MySQL多了一个缓冲区，叫查询缓冲区，主要用来存放重复执行的查询文本和结果，当再次遇到相同的查询，服务器会直接从缓冲区中返回结果。该功能是内建的功能，如不想支持该功能，可在编译服务器时用configure脚本的–without-query-cache选项去掉该功能。&lt;/p&gt;
&lt;p&gt;查询缓冲区由三个服务器参数控制，分别是：&lt;/p&gt;
&lt;p&gt;1、query_cache_size&lt;br&gt;控制缓冲区的大小，如果该值为0,则禁用查询缓冲功能。设置方法是在选项文件中设置:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set-variable = query_cache_size = 16M&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;这样就设置了一个16M的查询缓冲区

2、query_cache_limit
缓冲结果集的最大容量(以字节为单位)，如果查询的结果集大于该值，则不缓冲该值。

3、query_cache_type

缓冲区的操作模式。

0表示不进行缓冲；

1表示除SELECT SQL_NO_CACHE开头的查询外，其余的都缓冲；

2表示只对以SELECT SQL_ON_CACHE开头的查询进行缓冲。

默认情况下，按服务器的设置进行缓冲，但客户端也可通过命令改变服务器设置。客户端可直接用SELECT SQL_NO_CACHE和SELECT SQL_CACHE命令来要求服务器缓冲或不缓冲查询结果。如果不想每条查询都写参数，我们也可在客户端用SET SQL_QUERY_CACHE_TYPE = val;来改变服务器的查询缓冲行为。val可取值0，1,2或OFF，ON，或DEMAND。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;禁用用不着的数据表处理程序。如服务器是从源码创建，就可彻底禁用ISAM，InnoDB和BDB数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;权限表里的权限关系应尽可能简单，当然了，是要在保证安全的前提下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在从源码创建服务器时，尽量使用静态库而不是共享库来完成其配置工作。静态库的执行速度更快，但如果要加载用户定义函数(UDF)的话，就不能使用静态库，因为UDF机制必须依赖动态库才能实现。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-7-硬件优化&quot;&gt;&lt;a href=&quot;#2-7-硬件优化&quot; class=&quot;headerlink&quot; title=&quot;2.7. 硬件优化&quot;&gt;&lt;/a&gt;2.7. 硬件优化&lt;/h2&gt;&lt;p&gt;为了提高数据运行速度，升级硬件是最直接的解决方案。针对数据库应用的特点，在升级硬件时应考虑以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对于数据库服务器，内存是最重要的一个影响性能因素。通过加大内存，数据库服务器可把更多的数据保存在缓冲区，可大大减少磁盘I/O，从而提升数据库的整体性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置高速磁盘系统，以减少读盘的等待时间，提高响应速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合理分布磁盘I/O，应把磁盘I/O分散在多个设备上，以减少资源竞争，提高并行操作能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置多处理器，MySQL是多线程的数据库，多处理器可同时执行多个线程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-3-数据库管理&quot;&gt;&lt;a href=&quot;#Chapter-3-数据库管理&quot; class=&quot;headerlink&quot; title=&quot;Chapter 3. 数据库管理&quot;&gt;&lt;/a&gt;Chapter 3. 数据库管理&lt;/h2&gt;&lt;p&gt;数据库是一个复杂而又关键的系统，为确保系统安全、高效运行，需熟悉数据库内部的运作机制，掌握各种维护工具，并做好日常的管理工作。下面列举几项主要工作职责：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务器的关闭和启动；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;管理用户帐号；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;管理日志文件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库备份恢复；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库优化；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确保数据库数据安全；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库软件升级。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-1-数据目录&quot;&gt;&lt;a href=&quot;#3-1-数据目录&quot; class=&quot;headerlink&quot; title=&quot;3.1. 数据目录&quot;&gt;&lt;/a&gt;3.1. 数据目录&lt;/h2&gt;&lt;p&gt;数据目录是用来存放数据表和相关信息的地方，是数据库的核心。在MySQL中的数据目录根据不同平台的有一些差异：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在UNIX/Linux系统上，如果用源码编译安装，数据目录的位置默认是在/usr/local/mysql/var中；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在UNIX/Linux系统上，如果用二进制发行版安装，数据目录的位置默认是在/usr/local/mysql/data中；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在WINDOWS系统上，数据目录的位置默认是在c:/mysql/data中；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在服务器启动时，可用–datadir=dir_name来指定数据目录，也可把它写到配置文件中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们还可用命令向服务器查询数据目录的位置，数据目录的变量名是datadir，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin variables&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果在一台机器上同时运行多个服务器，则可根据端口的不时来查询每个服务器的数据目录，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin --host=127.0.0.1 --port=port_number variables&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果–host是localhost，系统则会用一个UNIX套接字去连接数据库服务器，这时要使用–socket选项，所以查询语句变成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin --host=localhost --socket=/path/to/socket variables&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SHOW VARIABLES LIKE &amp;apos;datadir&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在windows NT平台上可以使用“.”作为一条命名管道连接的主机名，用–socket选项给出命名管道的名字，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\ mysqladmin --host=. --socket=pipe_name variables&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置文件的中[mysqld]段中的datadir=/path/to/datadir设置也可查询到数据目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在mysqld程序的帮助信息里也有程序编译时默认的数据目录信息，可用以下命令显示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqld --help&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据目录是存放数据文件的地方，每个数据库对应目录的不同文件。InnoDB数据表由于用表空间来管理数据库，所以就没这种对应关系。但也是保存在数据目录中的，在数据目录除保存数据库文件外，还可能会保存以下几类文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务器的配置文件，my.cnf；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器的进程ID(PID)文件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器的日志文件和状态文件，这些文件对管理数据库有重要的价值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DES密钥文件或服务器的SSL证书与密钥文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据目录中的所有数据库全部由服务器(mysqld)来管理，客户端不直接操作数据。服务器是客户使用数据的唯一通道。&lt;/p&gt;
&lt;p&gt;在MySQL中，每个数据库其实就是在数据目录下一个子目录，show databases命令相当于列出数据目录中的目录清单。create database db_name命令会在数据目录下新建一个db_name的目录，以存放数据库的数据文件。所以我们也可下面的shell命令方式来建立一个空数据库：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% cd datadir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mkdir db_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chmod u=rwx,go-rwx db_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同理，删除数据库drop database db_name也就是删除数据目录中一个名为db_name的目录及目录中的数据表文件。我们也可用shell这进行操作：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% cd datadir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% rm -rf db_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;比较shell方式与drop database方式，drop database db_name命令不能删除db_name目录中创建的其它非数据表文件；由于InnoDB是表空间来管理数据表，所以不能用rm或del命令删除InnoDB的数据表。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;3-2-MySQL数据表在系统中表现形式&quot;&gt;&lt;a href=&quot;#3-2-MySQL数据表在系统中表现形式&quot; class=&quot;headerlink&quot; title=&quot;3.2. MySQL数据表在系统中表现形式&quot;&gt;&lt;/a&gt;3.2. MySQL数据表在系统中表现形式&lt;/h2&gt;&lt;p&gt;MySQL数据表类型有：ISAM、MyISAM、MERGE、BDB、InnoDB和HEAP。每种数据表在文件系统中都有不同的表示方式，有一个共同点就是每种数据表至少有一个存放数据表结构定义的.frm文件。下面介绍每种数据表文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ISAM数据表是最原始的数据表，有三个文件，分别是：&lt;/p&gt;
&lt;p&gt;.frm，存放数据表的结构定义；&lt;/p&gt;
&lt;p&gt;.ISD，数据文件，存放数据表中的各个数据行的内空；&lt;/p&gt;
&lt;p&gt;.ISM，索引文件，存放数据表的所有索引信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyISAM数据表是ISAM数据表的继承者，也有三个文件，分别是：&lt;/p&gt;
&lt;p&gt;.frm，结构定义文件；&lt;/p&gt;
&lt;p&gt;.MYD，数据文件；&lt;/p&gt;
&lt;p&gt;.MYI，索引文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MERGE数据表是一个逻辑结构，代表一组结构完全相同的MyISAM数据表构成的集合。它在文件系统中有二个文件，分别是：&lt;/p&gt;
&lt;p&gt;.frm，结构定义文件；&lt;/p&gt;
&lt;p&gt;.MRG，构成MERGE表的MyISAM数据表清单，每个MyISAM数据表名占一行。也就是说可通过改变该表的内容来改变MERGE数据表的结构。修改前请先刷新缓存(flush tables)，但不建议这样修改MERGE数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BDB数据表用两个文件来表示，分别是：&lt;/p&gt;
&lt;p&gt;.frm，结构定义文件；&lt;/p&gt;
&lt;p&gt;.db，数据表数据和索引文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InnoDB由于采用表空间的概念来管理数据表，所以它只有一个与数据表对应.frm文件，同一目录下的其它文件表示为表空间，存储数据表的数据和索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HEAP数据表是一个存在于内存中的表，所以它的数据和索引都存在于内存中，文件系统中只有一个.frm文件，以定义结构。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解MySQL数据表在文件系统中表现形式后，我们可知道，创建、修改或删除数据表，其实就是对这些文件进行操作。例如一些数据表(除InnoDB和HEAP数据表外)，我们可直接在文件系统中删除相应的文件来删除数据表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% cd datadir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% rm -f mydb/mydb.*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上命令可删除mydb数据库中的mydb数据表。&lt;/p&gt;
&lt;h2 id=&quot;3-3-数据表最大尺寸限制&quot;&gt;&lt;a href=&quot;#3-3-数据表最大尺寸限制&quot; class=&quot;headerlink&quot; title=&quot;3.3. 数据表最大尺寸限制&quot;&gt;&lt;/a&gt;3.3. 数据表最大尺寸限制&lt;/h2&gt;&lt;p&gt;在MySQL中影响数据表尺寸的因素有很多，下面分别进行介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MySQL数据表类型的不同对数据表尺寸的限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ISAM数据表中单个.ISD和.ISM文件的最大尺寸为4G；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyISAM数据表中单个.MYD和.MYI文件的默认最大尺寸也是4G，但可在创建数据表时用AVG_ROW_LENGTH和MAX_ROWS选项把这个最值扩大到800万TB。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MERGE数据表的最大尺寸是它的各组成MyISAM数据表的最大尺寸之和。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BDB数据表的尺寸受限于BDB处理程序所允许的.db文件的最大尺寸。这个最大尺寸随着数据表页面尺寸(编译时确定)而变化，但即使是最小的页面尺寸(512字节)，.db文件的最大尺寸也可达2TB。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InnoDB数据表的表空间的最大尺寸是40亿个页面，默认的页面尺寸是16K，该值可在8K到64K之间，在编译时确定。InnoDB数据表的最大尺寸也就是表空间的最大尺寸。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;操作系统对文件的尺寸限制，一般文件系统都对单个文件不得超过2G的限制。该约束会对数据库文件造成限制。InnoDB数据表可通过利用未格式化硬盘作为表空间来绕过该限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于数据和索引分开两个文件存放的数据表，其中任何一个文件达到操作系统文件的最大限制，数据库表也就达到最大尺寸。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;包含AUTO_INCREMENT数据列的表受到该数据列类型最大上限值的限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由于InnoDB数据表用表空间来管理，一个表空间可同时空纳多个数据表，所以数据表的最大尺寸受系统文件和同一表空间中数据表空间的约束。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-4-状态文件和日志文件&quot;&gt;&lt;a href=&quot;#3-4-状态文件和日志文件&quot; class=&quot;headerlink&quot; title=&quot;3.4. 状态文件和日志文件&quot;&gt;&lt;/a&gt;3.4. 状态文件和日志文件&lt;/h2&gt;&lt;p&gt;在MySQL数据目录中还包含着许多状态文件和日志文件，这些文件的文件名都是以主机名加上相关后缀来命名的。下面是这些文件的一个说明列表：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.1. 状态文件和日志文件&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件类型&lt;/th&gt;
&lt;th&gt;默认名&lt;/th&gt;
&lt;th&gt;文件内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;进程ID文件&lt;/td&gt;
&lt;td&gt;hostname.pid&lt;/td&gt;
&lt;td&gt;MySQL服务器进程的ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;常规查询日志&lt;/td&gt;
&lt;td&gt;hostname.log&lt;/td&gt;
&lt;td&gt;连接/断开连接事件和查询信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;慢查询日志&lt;/td&gt;
&lt;td&gt;hostname-slow.log&lt;/td&gt;
&lt;td&gt;记录查询时间很长的命令信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;变更日志&lt;/td&gt;
&lt;td&gt;hostname.nnn&lt;/td&gt;
&lt;td&gt;创建或修改数据表结构和内容的查询命令信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;二进制变更日志&lt;/td&gt;
&lt;td&gt;hostname-bin.nnn&lt;/td&gt;
&lt;td&gt;创建或修改数据表结构和内容的查询命令的二进制表示法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;二进制变更日志的索引文件&lt;/td&gt;
&lt;td&gt;hostname-bin.index&lt;/td&gt;
&lt;td&gt;使用中的“二进制变更日志”列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;错误日志&lt;/td&gt;
&lt;td&gt;hostname.err&lt;/td&gt;
&lt;td&gt;记录“启动/关闭”事件和异常情况&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;变更日志和二进制变更日志主要用于MySQL数据库服务器的崩溃恢复中，由于变更日志记录了数据库的所有变更操作，所以可以进行事件重放。具体操作请参考相关数据库备份恢复章节。对于变更日志，我们可用–log-long-format选项来让它以扩展方式记录有关事件。扩展方式可记录谁发出查询和什么时候发出查询的信息。可使我们更好地掌握客户端的操作情况。日志记录着查询命令的所有操作，里面可能会有一些敏感信息。所以我们要确保日志文件的安全。&lt;/p&gt;
&lt;h2 id=&quot;3-5-调整MySQL数据目录位置&quot;&gt;&lt;a href=&quot;#3-5-调整MySQL数据目录位置&quot; class=&quot;headerlink&quot; title=&quot;3.5. 调整MySQL数据目录位置&quot;&gt;&lt;/a&gt;3.5. 调整MySQL数据目录位置&lt;/h2&gt;&lt;p&gt;MySQL数据库的数据目录位置，包括目录里的各种文件的位置)可根据实际情况进行调整。调整的方法有两种，一种是使用符号链接；一种用服务器启动选项。下面一个列表说明了数据目录及目录中文件各自适宜采用的方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.2. MySQL数据目录及目录中文件位置的调整方法&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;调整对象&lt;/th&gt;
&lt;th&gt;适用方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;整个数据目录&lt;/td&gt;
&lt;td&gt;启动选项和符号链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库目录&lt;/td&gt;
&lt;td&gt;符号链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据表&lt;/td&gt;
&lt;td&gt;符号链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;InnoDB数据表空间&lt;/td&gt;
&lt;td&gt;启动选项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PID文件&lt;/td&gt;
&lt;td&gt;启动选项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;日志文件&lt;/td&gt;
&lt;td&gt;启动选项&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下面是各种调整方法的具体操作过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在调整MySQL的数据目录时，要先停止服务器，再把数据目录移动到新的位置。接着，我们可选择在原来目录下创建一个符号链接指向新的位置，或者用启动选择–datadir指向新的数据目录。推荐用创建符号链接的方法，因为如果那个数据目录中有my.cnf文件，相应的服务器还能找到它。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库只能存在于MySQL数据目录中，所以只能使用符号链接的方法调整它的位置。在Linux系统的操作步骤如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关闭服务器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把数据库目录拷贝到新的位置；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除原来的数据库目录；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在原来的MySQL数据目录中创建一个同名符号链接指向新的位置；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新启动服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在windows下的操作方法不些不同，操作方法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关闭服务器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把数据库目录移动新的位置；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除原来的数据库目录；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在原来数据目录下建一个同名的.sym文件，在文件中输入数据库新目录的全路径，如c:\mysql\newdir\mydb。这个文件就相当于Linux下的符号链接；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启服务器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了支持符号链接功能，必须用–use-symbolic-links选项启动服务器；或在选项文件的[mysqld]节中添加use-symbolic-links选项。&lt;/p&gt;
&lt;p&gt;MySQL必须是3.23.16以上版本且是max服务器(mysqld-max或mysqld-max-nt)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要移动数据表，必须满足以下所有条件才行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MySQL的版本必须是4.0或以上的版本；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;操作系统必须有一个可用的realpath()调用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移动的数据表必须是MyISAM类型的数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在满足以上所有条件后，我们就可把.MYD数据文件和MYI索引文件移到新位置，再在原来位置创建两个同名符号链接指定新的位置。注意，.frm定义文件仍需留在原来的数据库目录中。&lt;/p&gt;
&lt;p&gt;如以上条件不能全部满足，最好不要移动数据表文件。否则一旦你运行ALTER TABLE、OPTIMIZE TABLE、REPAIR TABLE语句对移动过的数据表进行优化或修改，这样数据表就会回到原来的位置，使移动操作失效。因为这些命令的执行过程是这样的：它会先在数据目录中创建一个临时数据表并对这个临时数据表进行优化或修改，然后删除原来的数据表(这里是你为了移动数据表而创建的一个符号链接)，再把临时数据表更名为原来的数据表名称。这样一来，你移走的数据表就和这个数据库完全没有关系了。基于以下的不稳定因素，如无特殊必要，不建议移动数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InnoDB表空间是通过在选项文件中使用innodb_data_home_dir和innodb_data_file_path选项列出InnoDB表空间组成文件清单的方法来配置的，所以我们可通过修改这些选项来重新安置InnoDB表空间的组成文件。步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;关闭服务器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移动组成表空间的文件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改选项文件，指出组成表空间的文件的新位置；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态文件和日志文件的位置可通过选项文件或启动服务器时指定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-4-MySQL数据库日常管理&quot;&gt;&lt;a href=&quot;#Chapter-4-MySQL数据库日常管理&quot; class=&quot;headerlink&quot; title=&quot;Chapter 4. MySQL数据库日常管理&quot;&gt;&lt;/a&gt;Chapter 4. MySQL数据库日常管理&lt;/h2&gt;&lt;p&gt;为了确保数据库平稳可靠运行，我们需进行维护和管理，这是每一位数据库管理员的职责。下面分几个专题分别介绍。&lt;/p&gt;
&lt;h2 id=&quot;4-1-数据库安全管理&quot;&gt;&lt;a href=&quot;#4-1-数据库安全管理&quot; class=&quot;headerlink&quot; title=&quot;4.1. 数据库安全管理&quot;&gt;&lt;/a&gt;4.1. 数据库安全管理&lt;/h2&gt;&lt;p&gt;MySQL数据库通过用户和密码来控制用户对数据库的访问，当我们新安装了一个数据库服务器时，MySQL的权限表设置是很不安全，它默认允许任何人不需要密码就可访问数据库。所以我们安装好服务器后第一件需要做的就是设置用户密码。&lt;/p&gt;
&lt;p&gt;在MySQL中的mysql数据库的user数据表中存有用户的帐号信息，在初始状态下已存在root和一些匿名用户，且所有用户都没有设置密码。该数据表的这些用户信息是通过一个mysql_install_db脚本安装的。该表的主要列有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;User，连接数据库的用户名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Host，允许连接到数据库服务器的主机名，“%”通配符代表所有主机。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Password，连接密码，已加密。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其它权限列，以“Y”或“N”标识是否有效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这种状态下的数据库是极不安全的，我们可用以下命令轻易地访问数据库：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql -h localhost -u root     #通过本地主机，root用户访问，不需要密码验证&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysql -h localhost             #通过本地主机，匿名用户访问，不需要密码验证&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置MySQL用户帐号密码的方法有三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用mysqladmin程序：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin -h localhost -u root password &amp;quot;password&amp;quot;   #设置在本地以root身分登录的密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin -h remote -u root password &amp;quot;password&amp;quot;      #设置远程主机以root身分登录的密码&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在初始设置时，这两条语句都要运行，以确保数据库本地访问和网络访问的安全。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过set password这条SQL语句设置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; set password for &amp;apos;root&amp;apos;@&amp;apos;localhost&amp;apos; = password(&amp;apos;password&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; set password for &amp;apos;root&amp;apos;@&amp;apos;remote&amp;apos; = password(&amp;apos;password&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;直接修改user权限表：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; use mysql;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; update user set password=password(&amp;apos;password&amp;apos;) where user=&amp;apos;root&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; flush privileges;                            #重载权限表，使修改马上生效&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MySQL使用驻留在内存中的权限表拷贝来进行访问控制，当使用mysqladmin和set password设置密码，MySQL会监察到权限表已被修改，它自动重载该表。而用update的方式，MySQL就监察不到变化，需手动用flush privileges命令刷新内存中的权限表，以使它马上生效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为root用户设置密码后，如果需以root身份连接数据库，就需验证密码。我们可用以下语句连接数据库：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql -u root -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter password:                         #输入root的密码&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在user表中，user列为空的为匿名用户。它也是没有密码的，我们需为它们设置一个密码，或干脆把它们删除。在windows系统上的本地匿名用户帐号和root用户有着同样的权限，这是一个很大的安全漏洞。应该把它删除或把权限削弱。&lt;/p&gt;
&lt;h2 id=&quot;4-2-服务器的启动和关闭&quot;&gt;&lt;a href=&quot;#4-2-服务器的启动和关闭&quot; class=&quot;headerlink&quot; title=&quot;4.2. 服务器的启动和关闭&quot;&gt;&lt;/a&gt;4.2. 服务器的启动和关闭&lt;/h2&gt;&lt;p&gt;在Linux和windows平台下MySQL服务器的启动方式有很大不同，这里将分开介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Linux平台：&lt;/p&gt;
&lt;p&gt;Linux平台下，每一个进程都需由一个用户来运行，MySQL最好不要以root用户来运行。我们可创建一个mysql用户和mysql组，MySQL服务器程序目录和数据目录由这个用户和组所拥有，其它用户没有任何权限。以mysql用户来运行MySQL服务器。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqld --user=mysql     #即使以root用户执行该命令，MySQL数据库还是会与mysql用户ID关联。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了使服务器在系统启动时自动以mysql用户运行，需配置my.cnf配置文件 ，把user=mysql包含在[mysqld]段中。&lt;/p&gt;
&lt;p&gt;关闭服务器可用% mysql.server stop或% mysqladmin -u root -p shutdown&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;windows平台：&lt;/p&gt;
&lt;p&gt;手动方式：直接运行c:\mysqld命令。&lt;/p&gt;
&lt;p&gt;作为服务方式：运行c:\mysqld-nt –install命令，把mysqld-nt安装为windows的服务，此后，每当windows启动时，它就会自动运行。mysqld-nt是一个支持命名管道的MySQL服务器。运行c:\mysqld-nt –remove可把服务删除。手动启动关闭服务的方法是运行c:\net start mysql和c:\net stop mysql命令。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-3-连接故障恢复&quot;&gt;&lt;a href=&quot;#4-3-连接故障恢复&quot; class=&quot;headerlink&quot; title=&quot;4.3. 连接故障恢复&quot;&gt;&lt;/a&gt;4.3. 连接故障恢复&lt;/h2&gt;&lt;p&gt;当由于误删mysql套接字时(/tmp/mysql.sock)，我们就不能通过套接字连接服务器。这时我们可通过tcp/ip来连接服务器，要建立一个tcp/ip连接，需用127.0.0.1代替locahost作为-h参数的值来连接服务器。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin -h 127.0.0.1 -u root -p shutdown       #关闭服务器再重启会重建套接字&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们因为忘记root用户密码而不能连接服务器时，重设置密码的步骤如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用 % kill -TERM PID关闭服务器，用-TERM信息可使服务器在关闭前把内存中的数据写入磁盘。如果服务器没有响应，我们可用% kill -9 PID来强制删除进程，但不建议这样做。这时内存中的数据不会写入磁盘，造成数据不完整。如果你是用mysql_safe脚本启动MySQL服务器的，这个脚本会监控服务器的运行情况并在它被终止时重启服务器，所以如需关闭服务器，要先终止该进程，然后再真正终止mysqld进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着用–skip_grant-tables启动服务器。这时MySQL服务器将不使用权限表对连接操作进行验证。你就可在不提供root密码的情况下连接上服务器，并获得root的权限。这样你就可用上面介绍的修改密码的方法重设root用户的密码。注意：连接上服务器后，要马上执行flush privileges命令，使权限表读入内存并生效，以阻止其他的连接。该语句还重新激活grant语句，在MySQL服务器不使用权限表时，grant语句被禁用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改完root用户密码后，我们就可关闭服务器并重启使所有配置正常运作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-4-MySQL用户帐号管理&quot;&gt;&lt;a href=&quot;#4-4-MySQL用户帐号管理&quot; class=&quot;headerlink&quot; title=&quot;4.4. MySQL用户帐号管理&quot;&gt;&lt;/a&gt;4.4. MySQL用户帐号管理&lt;/h2&gt;&lt;p&gt;MySQL用户帐号管理主要用grant(授权)和revoke(撤权)两个SQL指令来管理。这两个指令实质是通过操作user(连接权限和全局权限)、db(数据库级权限)、tables_priv(数据表级权限)、columns_priv(数据列级权限)四个权限表来分配权限的。host权限表不受这两个指令影响。下面将会详细介绍用户权限管理的内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GRANT语法说明：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GRANT privileges (columns)          #privileges表示授予的权限，columns表示作用的列(可选) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ON what                       #设置权限级别，全局级、数据库级、数据表级和数据列级&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      TO account                    #权限授予的用户，用&amp;quot;user_name&amp;quot;@&amp;quot;host_name&amp;quot;这种用户名、主机名格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      IDENTIFIED BY &amp;apos;password&amp;apos;      #设置用户帐号密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      REQUIRE encryption requirements       #设置经由SSL连接帐号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      WITH grant or resource management options;   #设置帐号的管理和资源(连接服务器次数或查询次数等)选项&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;grant all on db.* to &amp;apos;test&amp;apos;@&amp;apos;localhost&amp;apos; identified by &amp;apos;test&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;上例运行后的效果是，test用户只能通过‘test’密码从本机访问db数据库

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;grant all on db.* to &amp;apos;test&amp;apos;@&amp;apos;%&amp;apos; identified by &amp;apos;test&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

上例运行后的效果是，test用户可通过‘test’密码从任意计算机上访问db数据库。‘%’代表任意字符，‘_’代表一个任意字符。主机名部份还可以是IP地址。

&amp;gt; 如果没有给定主机部份，则默认为任意主机，也就是&amp;apos;test&amp;apos;和&amp;apos;test&amp;apos;@&amp;apos;%&amp;apos;是等价的。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Table 4.1. 访问权限表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 权限 | 权限说明 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| CREATE TEMPORARY TABLES | 创建临时数据表 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| EXECUTE | 执行存储过程(暂不支持) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| FILE | 操作系统文件 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| GRANT OPTION | 可把本帐号的权限授予其它用户 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| LOCK TABLES | 锁定指定数据表 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| PROCESS | 查看运行着的线程信息 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| RELOAD | 重新加载权限表或刷新日志及缓冲区 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| REPLICATION CLIENT | 可查询主/从服务器主机名 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| REPLICATION SLAVE | 运行一个镜像从服务器 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| SHOW DATABASES | 可运行SHOW DATABASES指令 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| SHUTDOWN | 关闭数据库服务器 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| SUPER | 可用kill终止线程以及进行超级用户操作 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ALTER | 可修改表和索引的结构 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| CREATE | 创建数据库和数据表 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| DELETE | 删除数据表中的数据行 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| DROP | 删除数据表和数据行 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| INDEX | 建立或删除索引 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| INSERT | 插入数据行 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| REFERENCES | (暂时不支持) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| SELECT | 查询数据行 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| UPDATE | 更新数据行 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ALL | 所有权限，但不包括GRANT。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| USAGE | 无权限权限 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Table 4.2. 权限作用范围(由ON子句设置)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 权限限定符 | 作用范围 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ON *.* | 全局级权限，作用于所有数据库 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ON * | 全局级权限，若未指定默认数据库，其作用范围是所有数据库，否则，其作用范围是当前数据库 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ON db_name.* | 数据库级权限，作用于指定数据库里的所有数据表 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ON db_name.tbl_name | 数据表级权限，作用于数据表里的所有数据列 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ON tbl_name | 数据表级权限，作用于默认数据库中指定的数据表里的所有数据列 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;USAGE权限的用法：修改与权限无关的帐户项，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;GRANT USAGE ON *.* TO account IDENTIFIED BY &amp;apos;new_password&amp;apos;;     #修改密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;GRANT USAGE ON *.* TO account REQUIRE SSL;                      #启用SSL连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;GRANT USAGE ON *.* TO account WITH MAX_CONNECTIONS_PER_HOUR 10; #设置资源&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拥有WITH GRANT OPTION权限的用户可把自已所拥用的权限转授给其他用户，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;GRANT ALL ON db.* TO &amp;apos;test&amp;apos;@&amp;apos;%&amp;apos; IDENTIFIED BY &amp;apos;password&amp;apos; WITH GRANT OPTION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这样test用户就有权把该权限授予其他用户。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;限制资源使用，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;GRANT ALL ON db.* TO account IDENTIFIED BY &amp;apos;password&amp;apos; WITH MAX_CONNECTIONS_PER_HOUR 10 MAX_QUERIES_PER_HOUR 200 MAX_UPDATES_PER_HOUR 50;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;允许account用户每小时最多连接20次服务器，每小时最多发出200条查询命令(其中更新命令最多为50条)&lt;/p&gt;
&lt;p&gt;默认都是零值，即没有限制。FLUSH USER_RESOURCES和FLUSH PRIVILEGES可对资源限制计数器清零。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;REVOKE语法说明：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;REVOKE privileges (columns) ON what FROM account;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;REVOKE SELECT ON db.* FROM &amp;apos;test&amp;apos;@&amp;apos;localhost&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除test帐号从本机查询db数据库的权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;REVOKE可删除权限，但不能删除帐号，即使帐号已没有任何权限。所以user数据表里还会有该帐号的记录，要彻底删除帐号，需用DELETE命令删除user数据表的记录，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql -u root -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;use mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;DELETE FROM user where User=&amp;apos;test&amp;apos; and Host=&amp;apos;localhost&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql fulsh privileges;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;REVOKE不能删除REQUIRE和资源占用的配置。他们是要用GRANT来删除的，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GRANT USAGE ON *.* TO account REQUIRE NONE;      #删除account帐号的SSL连接选项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GRANT USAGE ON *.* TO account WITH MAX_CONNECTIONS_PER_HOUR 0 MAX_QUERIES_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0;       #删除account帐号的资源限制&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-5-日志文件管理&quot;&gt;&lt;a href=&quot;#4-5-日志文件管理&quot; class=&quot;headerlink&quot; title=&quot;4.5. 日志文件管理&quot;&gt;&lt;/a&gt;4.5. 日志文件管理&lt;/h2&gt;&lt;p&gt;有关MySQL的日志文件前面章节已简要讨论过了，主要有四种日志文件，分别是常规查询日志、慢查询日志、变更查询日志和二进制变更日志。这些日志文件的创建需在启动服务器时用选项指定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 4.3. 日志启动选项&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;启动选项&lt;/th&gt;
&lt;th&gt;激活日志&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;–log[=file_name]&lt;/td&gt;
&lt;td&gt;常规日志文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–log-bin[=file_name]&lt;/td&gt;
&lt;td&gt;二进制变更日志文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–log-bin-index=file_name&lt;/td&gt;
&lt;td&gt;二进制变更日志文件索引文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–log-update[=file_name]&lt;/td&gt;
&lt;td&gt;变更日志文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–log-slow-queries[=file_name]&lt;/td&gt;
&lt;td&gt;慢查询日志文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–log-isam[=file_name]&lt;/td&gt;
&lt;td&gt;ISAM/MyISAM日志文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–log-long-format&lt;/td&gt;
&lt;td&gt;设置慢查询日志和变更日志的格式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;BDB和InnoDB数据表的日志文件会自动创建不用指定选项。但可用以下选项指时日志文件的存放路径。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 4.4. BDB和InnoDB数据表日志选项&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;启动选项&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;–bdb-logdir=dir_name&lt;/td&gt;
&lt;td&gt;存放BDB日志文件的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–innodb-log_arch_dir=dir_name&lt;/td&gt;
&lt;td&gt;存放InnoDB日志文件的归档目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–innodb_log_group_home_dir=dir_name&lt;/td&gt;
&lt;td&gt;存放InnoDB日志文件的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;MySQL日志文件选项可在mysqld和mysqld_safe脚本中使用，也可在选项文件my.cnf的[mysqld]中使用。推荐在选项文件中使用，因为每次启动服务器的日志选项基本上都是一致的。&lt;/p&gt;
&lt;p&gt;日志的刷新可用mysqladmin flush-logs命令或flush logs语句实现。另外，对MySQL服务器发送一条SIGHUP信号也会刷新日志。错误日志和DBD/InnoDB日志不能用以上方法刷新。&lt;/p&gt;
&lt;p&gt;错误日志记录MySQL数据库系统的论断和出错信息，由mysqld_safe脚本创建，文件名默认为hostname.err，也可通过–err-log或选项文件的err-log语句指定另外的名字。如果直接用mysqld程序启动服务器，错误信息会直接输出到输出设备，也就是屏幕。但我们可用重定向方法把错误信息输出到其它地方，如把错误信息输出到/var/log/mysql.err文件中，可以执行以下语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqld &amp;gt; /var/log/mysql.err 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在windows平台下，MySQL服务器默认把诊断信息写到数据目录的mysql.err文件中，并且不允许另外指定错误日志文件名。如在启动MySQL服务器时给出了–console选项，则MySQL会把诊断信息输出到控制台窗口而不创建错误日志。但如MySQL是作为一个服务运行，则–console选项不起作用。&lt;/p&gt;
&lt;h3 id=&quot;4-5-1-日志失效处理&quot;&gt;&lt;a href=&quot;#4-5-1-日志失效处理&quot; class=&quot;headerlink&quot; title=&quot;4.5.1. 日志失效处理&quot;&gt;&lt;/a&gt;4.5.1. 日志失效处理&lt;/h3&gt;&lt;p&gt;在服务器正常运行中，会产生大量的日志文件。我们要对这些日志文件进行失效管理，以节省磁盘空间和方便查询。进行日志失效处理的方式主要有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;日志轮转。该方法适用于常规查询日志和慢查询日志这些文件名固定的日志文件，在日志轮转时，应进行日志刷新操作(mysqladmin flush-logs命令或flush logs语句)，以确保缓存在内存中的日志信息写入磁盘；&lt;/p&gt;
&lt;p&gt;日志轮转的操作过程是这样的：第一次轮转时，把log更名为log.1，然后服务器再创建一个新的log文件，在第二轮转时，再把log.1更名为log.2，把log更名为log.1，然后服务器再创建一个新的log文件。如此循环，创建一系列的日志文件。当到达日志轮转失效位置时，下次轮转就不再对它进行更名，直接把最后一个日志文件覆盖掉。例如：如果每天进行一次日志轮转并想保留最后7天的日志文件，就需要保留log.1–log.7共七个日志文件，等下次轮转时，用log.6覆盖原来的log.7成新的log.7，原来的log.7就自然失效。下面是一个失效处理的shell脚本，以供参考：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# shell script ---  rotate_log.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $# -ne 1 ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;Usage: $0 logname&amp;quot; 1&amp;amp;gt;&amp;amp;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   exit 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logfile=$1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv $logfile.6 $logfile.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv $logfile.5 $logfile.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv $logfile.4 $logfile.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv $logfile.3 $logfile.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv $logfile.2 $logfile.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv $logfile.1 $logfile.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv $logfile $logfile.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysqladmin -u flush -pflushpass flush-logs     #执行mysqladmin flush-logs会打开一个日志文件----重新生成一个新的日志文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该脚本以日志文件名为参数，执行方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% rotate_log.sh /usr/local/mysql/data/log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，脚本中的mysqladmin命令是带有-u和-p参数的，因为我们进行日志刷新时需连接服务器。为确保安全，我们建立一个flush用户，密码为flushpass。该用户只有日志刷新的权限(reload权限)。创建该用户的语句如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GRANT RELOAD ON *.* TO &amp;apos;flush&amp;apos;@&amp;apos;localhost&amp;apos; IDENTIFIED BY &amp;apos;fulshpass&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置好后，我们就可利用系统的自动处理机制定期运行该脚本以生成轮转日志。在Linux系统上的MySQL发行版中带有一个用来安装mysql-log-rotate日志轮转脚本的logrotate工具，如用RPM安装,则在/usr/share/mysql目录，如用二进制方式安装,则在MySQL安装目录的support-files目录，如用源码安装，则在安装目录的share/mysql目录中。&lt;/p&gt;
&lt;p&gt;在windows平台下，不能在线更名，需停掉服务器，再进行。下面是一个进行日志更名的批处理文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@echo off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;REM script name : rotate_log.bat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if not &amp;quot;%1&amp;quot; == &amp;quot;&amp;quot; goto ROTATE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @echo Usage: rotate_log logname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   goto DONE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:ROTATE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set logfile=%1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;erase %logfile%.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename %logfile%.6 %logfile%.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename %logfile%.5 %logfile%.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename %logfile%.4 %logfile%.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename %logfile%.3 %logfile%.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename %logfile%.2 %logfile%.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename %logfile%.1 %logfile%.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename %logfile% %logfile%.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:DONE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该脚本的执行方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\rotate_log c:\mysql\data\log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以时间为依据对日志进行失效处理。该方法将定期删除超过给定时间的日志文件，适用于变更日志和二进制日志等文件名用数字编号标识的日志文件。下面是一个用Perl写成的处理脚本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/perl -w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# script name: expire_log.pl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Usage: expire_log.pl logfile ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use strict&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;die &amp;quot;Usage: $0 logfile ...\n&amp;quot; if @ARGV == 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my $max_allowed_age = 7;      #max allowed age in days&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foreach my $file (@ARGV)      #chack each argument&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   unlink ($file) if -e $file &amp;amp;&amp;amp; -M $file &amp;amp;gt;= $max_allowed_age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exit(0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该脚本需提供一个将被轮转的日志文件名作为参数，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% expire_log.pl /usr/local/mysql/data/log.[0-9]*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;在给脚本参数时请小心，如给出*为参数，则会删除目录中所有更新时间大于7天的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;镜像机制。把日志文件镜像到所有的从服务器上。要使用镜像机制，你必须知道主服务器有多少个从服务器，哪些正在运行，并需依次连接每一个从服务器并发出show slave status语句以确定它正处理主服务器的哪个二进制日志文件(语句输出列表的Master_Log_File项)，只有所有的从服务器都不会用到的日志文件才能删除。删除方法是在主服务器上发出以下语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; PURGE MASTER LOGS TO &amp;apos;last_log.xx&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面语句中的last_log.xx是所有从服务器已处理的最小编号日志文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-6-MySQL服务器的一些优化配置&quot;&gt;&lt;a href=&quot;#4-6-MySQL服务器的一些优化配置&quot; class=&quot;headerlink&quot; title=&quot;4.6. MySQL服务器的一些优化配置&quot;&gt;&lt;/a&gt;4.6. MySQL服务器的一些优化配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务器的监听端口设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TCP/IP端口3306是MySQL服务器默认的网络监听端口，如用–skip-networking选项启动服务器，则不监听TCP/IP端口。可用–port端口另行指定一个监听端口。如服务器主机有多个IP，还可用–bind-address选项对服务器在监听客户连接时使用的IP地址进行设定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在UNIX系统上，MySQL可在一个UNIX域套接字文件上监听有无本地客户在试图以localhost为主机名进行连接。默认的套接字文件是/tmp/mysql.sock，可用–socket选项指定另外一个套接字文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在基于NT的Windows平台上，有-nt的MySQL服务器都支持命名管道。默认的命名管道是MySql，可用–socket选项另行指定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启用或禁用LOAD DATA语句的LOCAL能力&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可在MySQL服务器编译时，用configure脚本的–enable-local-infile或–disable-local-infile选项把LOAD DATA语句的LOCAL能力设置为启用或禁用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在MySQL服务器启动是，可以用–local-infile或–disable-local-infile选项来启用或禁用服务器的LOCAL能力(在MySQL 4.0.2之前的版本里，要用–local-infile=0来禁用它)。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果在服务器端禁用了LOCAL的能力，则客户端就不能使用该功能；如服务器启用了LOCAL的能力，客户端默认也是禁止使用的，但可用mysql程序的–local-infile选项启用它。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;国际化和本地化，国际化是指软件能够在世界多个国家地区使用，而本地化则是指可从国际化软件中选择一套适合本地区的语言和习惯的设置来使用。在MySQL中的国际化和本地化设置有以下几方面内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;时区，如果时区设置不对，则服务器显示的时间将会和当地时间有冲突。设置方法可通过mysqld_safe脚本的–timezone选项来设置，但最好还是在选项文件里设置，如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld_safe]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timezone=US/Central&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置显示信息的语言，MySQL能用多种语言来显示诊断信息与出错信息，默认是英语。查看share/mysql目录下有几个以语言名称作为目录名的目录就可知道有哪些语言可供选择。可用–language启动选项来指定语言，如–language=/usr/local/mysql/share/mysql/french。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置服务器的字符集，MySQL支持多种字符集，可在share/mysql/charsets目录下查询支持的字符集，也可用show variables like ‘character_sets’来显示支持的字符集清单。MySQL把latin1作为默认的字符集。可在编译时用–with-charset指定另外一个字符集为默认字符集。如要增加另外的字符集支持，可用–with-extra-charasets选项进行添加。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% ./configure --with-extra-charsets=latin1,gb2312,big5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;–with-extra-charsets有两个特殊的选项，一个是all，代表所有可用字符集；一个是complex，代表所有的复杂字符集(包括多字节字符集和有特殊排序规则的字符集)。&lt;/p&gt;
&lt;p&gt;服务器启动时，使用默认字符集，如需指定另外的字符集，需用–default-character-set选项指明。&lt;/p&gt;
&lt;p&gt;在MySQL 4.1以前，如果在创建好数据表后改变服务器的默认字符集，就需对索引重新排序才能保证索引键值能够正确反映出数据表记录在新字符集下的排列顺序。重新排序的操作命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% myisamchk --recover --quick --set-character-set=gb2312       #在执行该语句需关闭服务器，适用于MyISAM数据表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;也可用：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqlcheck --repair --quick                                  #不需关闭服务器，适用于各种数据表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者用：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; REPLACE TABLE ... QUICK；&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在客户端，可用–default-character-set选项指定客户程序使用的字符集。–character-sets-dir选项可指出字符集文件的安装目录。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;升级数据表到4.1，支持多字符集数据表。步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;用mysqldump程序备份数据库：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqldump -p -u root --all-databases --opt &amp;amp;gt; dumpfile.sql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--all-databases选项的作用是转储所有数据库；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--opt选项的作用是对转储文件进行优化。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭服务器，升级MySQL服务器软件到4.1版。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用备份文件重新加载数据表：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql -p -u root &amp;amp;lt; dumpfile.sql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样，字符集信息就被分配到每一个数据列中，此后，即使服务器改变了默认的字符集，各数据列的字符集也不会改变。当以后修改某个数据列的字符集时，服务器会自动重索引，以反映最新变化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置InnoDB表空间。InnoDB表空间在逻辑上是一个连接的存储区域，但实际上是由一个或多个磁盘文件组成。这些文件可以是普通的文件，也可以是一个未格式化的原始硬盘分区。InnoDB表空间通过一系列的配置选项来设置，其中最重要的有以下两个：&lt;/p&gt;
&lt;p&gt;为确保服务器每次启动时都能调用同样的选项，InnoDB的选项最好存放到选文件中。下面是一个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_home_dir = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=/usr/loca/mysql/data/idbdata1:10M:autoextend:max:100M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;InnoDB表空间文件默认存放到了MySQL的数据目录中，名字叫idbdata1；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;文件长度为10M；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可自动扩展，以8M为步长扩展，如有多个数据文件，只允许最后一个文件可自动扩展；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;规定了最大的可扩展尺寸为100M。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;innodb_data_home_dir，设置InnoDB表空间各组成文件的父目录，如果没有指出，则默认是MySQL的数据目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;innodb_data_file_path，描述InnoDB主目录中各有关文件，包括文件名，文件长度和一些选项。各文件以分号分隔，各组成文件长度至少为10M。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把选项写入选项文件后，启动服务器就可自动创建和初始化InnoDB表空间。&lt;/p&gt;
&lt;p&gt;利用原始磁盘分区作为InnoDB表空间可创建一个非常大的表空间，不受操作系统单文件最大容量的限制。并且能有效减少磁盘碎片的产生。要使用原始磁盘分区，需作如下配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先，要进行初始化，在选项文件的[mysqld]中配置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_home_dir=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=/dev/hda1:10Gnewraw     #初始化/dev/hda1这个10G容量的分区&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动服务器，服务器会对这个10G的分区进行初始化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着，关闭服务器，修改配置文件，把newraw改为raw，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_home_dir=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=/dev/hda1:10Graw&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重新启动服务器，MySQL就会以读/写方式使用该表空间了。在windows平台上配置InnoDB表空间时，windows路径名中的反斜杠可以写成单个的斜线字符(/)。也可写成两个反斜杠(\)。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_home_dir=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=c:/mysql/data/ibdata1:10M;d:/ibdata2:20M&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认情况下，InnoDB的日志文件会存储在MySQL的数据目录，文件名以ib开头。一旦完成InnoDB表空间的初始化，就不能改变组成文件的大小，但可通过添加数据文件或设置自动扩展来增加表空间容量。如需通过增加文件的方法扩大表空间的容量，可按以下步骤进行：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关闭正在运行的MySQL服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果InnoDB表空间的最后一个组成文件是可自扩展的，就要先把它改变成一个固定长度文件才能把另一个文件添加到它后面。方法是先计算出该文件的近似大小，重新设置，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=ibdata1:100M:autoextend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;改成：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=ibdata1:150M&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把新的组成文件添加到文件清单的末尾，该文件可以是普通文件，也可以是一个原始硬盘分区。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;还有一种方法重新配置InnoDB表空间，就是先备份，再重新配置，最后重新加载备份。具体步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用mysqldump备份整个InnoDB数据库；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭服务器，删除所有InnoDB表空间、InnoDB日志文件 及InnoDB数据表的.frm文件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新配置InnoDB表空间；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置完成后，用备份文件重载数据，生成新的InnoDB数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-7-优化服务器&quot;&gt;&lt;a href=&quot;#4-7-优化服务器&quot; class=&quot;headerlink&quot; title=&quot;4.7. 优化服务器&quot;&gt;&lt;/a&gt;4.7. 优化服务器&lt;/h2&gt;&lt;p&gt;MySQL服务器为我们提供了丰富的参数，以调整服务器满足不同环境的要求。下面分别讨论一下这些参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务器参数变量的设置。MySQL服务器参数可在服务器启动时设置，在MySQL4.0.3及以后的版本中，有些参数也允许在线设置。在MySQL4.0.2及以后的版本里，可以把一个变量名视为一个选项名来设置。如数据表缓冲区的尺寸由服务器参数talbe_cache来设置。如果需把它设置为128,则可以在命令行里增加&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--table_cache=128&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可在选项文件中设置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table_cache=128&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在命令行选项中’_’可写’-‘，变成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--table-cache=128     #这种写法更像一个标准选项&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有一种是使用–set-variable或-O选项，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--set-variable=table_cache=128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-O table_cache=128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在选项文件中可写成：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set-variable=table_cache=128&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;服务器参数分为全局级和会话级两个级别。全局级参数将影响整个服务器，会话级参数则只影响某给定客户连接上的工作。如果某个变量同时存在于两个级别，则服务器在客户建立连接时用全局变量的值去初始化相应的会话级参数，一旦客户连接建立起来后，对全局参数所作的修改不会影响到相应的会话级参数当前值。设置全局参数和会话级参数的语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;全局级：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SET GLOBAL variable = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SET @@GLOBAL.variable = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;会话级：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SET SESSION variable = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SET @@SESSION.variable = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;默认不带级别限定符的SET语句修改的参数属会话级，如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SET variable = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SET @@variable = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可用一条SET语句设置多个参数，参数间用逗号分隔，如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SET SESSION variable = value1,value2,value3;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;SESSION和LOCAL是同义语，可用LOCAL代替SESSION，如：@@LOCAL&lt;/p&gt;
&lt;p&gt;具备SUPER权限才能设置全局参数，新设置值的效力将持续到该参数被再次修改或服务器退出。设置会话级参数不用特殊的权限，新设置值的效力将持续到该值被再次修改或连接断开。显示参数的语句如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SHOW GLOBAL VARIABLES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHOW GLOBAL VARIABLES LIKE &amp;apos;TEST&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHOW SESSION VARIABLES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHOW SESSION VARIABLES LIKE &amp;apos;TEST&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如不带限定符，则返回会话级参数，如会话级参数不存在则返回全局级参数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;也可用命令行方式显示服务器参数变量，如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin variables&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面介绍一些MySQL服务器通用的参数变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;back_log，当多个客户同时连接服务器时，客户处理过程需进入一个队列排队等待服务器处理。该值定义服务器等待处理队列长度的最大值，如果站点访问量大，需加大该值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;delayed_queue_size，在实际插入数据表前，来自insert delayed语句的数据行会进入一个队列等待服务器处理。该值定义该队列能容纳的数据行的最大个数。当队列满时，会阻塞后续的语句。加大该值能提高insert delayed语句的执行速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flush_time，自动存盘间隔。如果系统经常死机或重启，把这个变量设置为一个适当的非零值，使MySQL服务器每隔flush_time称去刷新一次数据表缓冲区，将其中的信息写入磁盘。这将导致系统性能下降，但可减少数据表被破坏或丢失数据的概率。在命令行上用–flush选项启动服务器可使数据表在每次修改后被自动存盘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;key_buffer_size，用来容纳索引块的缓冲区的长度。加大该值可加快索引创建和修改操作的速度，该索引缓冲区越大，在内存中找到键值的可能性就越大，读盘次数就越少。MySQL3.23前的版本里，该参数叫key_buffer。3.23版本之后，两种叫法都可以。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max_allowed_packet，服务器与客户程序之间通信时使用的缓冲区在最大值。MySQL 4版本之前，该最大值可取16MB，MySQL 4版本以后，该值的最大值是1GB。如果客户端与服务器需传送大容量的数据，如BLOB或TEXT值，就要加大该值。客户端也有一个同名的变量，默认是16MB，该值也要加大。客户端的启动命令为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql --set-variable=max_allowed_packet=64M&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max_connections，允许同时打开的连接数，如果站点繁忙，需加大该值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;table_cache，数据表缓存区的尺寸。加大该值可使服务器能够同时打开更多的数据表，从而减少文件打开/关闭操作的次数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：加大max_connections和table_cache参数的值，会使服务器占用更多的文件描述符。运行多个服务器可绕过该限制。对一些分配给每个客户的资源变量，设置时不能过大，因为当连接数快速增长时会很快耗尽服务器的资源，造成服务器性能下降。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InnoDB处理程序变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;innodb_buffer_pool_size，InnoDB数据库缓冲池的大小，如果有足够的内存，可把该值设置得大些以减少读盘操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;innodb_log_file_size和innodb_log_files_in_group，前者设置日志文件的长度，后者设置日志文件的个数。InnoDB日志文件的总长度是两者的乘积，它的总长度不得超过4GB。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-8-运行多个MySQL服务器&quot;&gt;&lt;a href=&quot;#4-8-运行多个MySQL服务器&quot; class=&quot;headerlink&quot; title=&quot;4.8. 运行多个MySQL服务器&quot;&gt;&lt;/a&gt;4.8. 运行多个MySQL服务器&lt;/h2&gt;&lt;p&gt;需运行多个服务器的原因有很多，比如上面提到的可绕过最大文件描述符的限制，还有是进行版本测试和提供专用服务等。运行多个服务器比运行单个服务器复杂很多，需注意以下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在安装不同版本的程序时，需分开目录存放程序和数据目录。如果同一版本的服务器软件，则程序目录可一样，但数据目录则要不同。可用–basedir=dir_name和–datadir=dir_name两个启动选项指时这两个目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要为不同的服务器指定不时的–port=port_name(TCP/IP监听端口)，–socket=file_name(套接字文件名)和–pid-file=file_name(进程ID文件)值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果激活了日志功能，就要为不同的服务器指定不同的日志文件名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Windows平台上，被安装为服务的多个MySQL服务器必须有不同的服务名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多服务器环境下选项文件的配置方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用–defaults-file选项指定每个选项文件，这样，每个服务器就不会去读/etc/my.cnf这些配置文件，而会使用你所指定的配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可把一些公共的选项放到/etc/my.cnf文件里，再用–defaults-extra-file选项指出特定服务器的特定选项文件。这样就不用在所有的配置文件时重复公共的选项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用mysql_multi脚本启动服务器，它允许我们把所有的选项放到同一个选项文件里。每一个服务器对应该文件中的一个选项组。&lt;/p&gt;
&lt;p&gt;下面介绍用mysql_multi脚本启动多服务器的方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为每个服务器编一个编号xxx，对应选项文件的[mysqldxxx]选项组。mysql_multi本身要用到的选项可放到[mysqld_multi]里。这样/etc/my.cnf选项配置文件看起来就象下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld001]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir=/usr/local/mysql/001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir=/usr/local/mysql/001/data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysqld=/usr/local/mysql/001/bin/mysqld_safe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket=/usr/local/mysql/001/mysql.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port=3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;local-infile=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user=mysqladm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log=log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-update=update-log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=ibdata1:10M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld002]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir=/usr/local/mysql/002&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir=/usr/local/mysql/002/data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysqld=/usr/local/mysql/002/bin/mysqld_safe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket=/usr/local/mysql/002/mysql.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port=3307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;local-infile=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user=mysqladm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log=log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-update=update-log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path=ibdata1:10M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置好选项文件后，就可用以下命令启动服务器：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqld_multi --no-log start 001,002      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#启动001和002两个服务器，并把启动信息发送到控制台，也可用区间的形式给出服务器编号&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用以下命令可查看服务器状态：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqld_multi --no-log --user=root --password=password report 001&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可用以下命令停止MySQL服务器：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqld_multi --no-log --user=root --password=password stop 001&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在windows平台下运行多个MySQL服务器的方式有两种，一种是运行同一个MySQL程序的两个实例，一种是运行多个windows服务，下面分别介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;第一种情况需设置两个选项文件，指定不同的数据目录，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\mysql\my.cnf1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir=c:/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datedir=c:/mysql/data1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port=3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c:\mysql\my.cnf2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir=c:/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir=c:/mysql/data2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port=3307&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在启动服务器时，用–defaults-file选项指出选项文件即可。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\&amp;amp;gt; mysqld --defaults-file=c:\mysql\my.cnf1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c:\&amp;amp;gt; mysqld --defaults-file=c:\mysql\my.cnf2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在MySQL 4.0.2版本开始，可以把MySQL安装为一个服务，并可指定一个服务名，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\&amp;amp;gt; mysql-nt --install service_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;在MySQL 4.0.3开始，安装服务还支持--defaults-file=file_name选项

这样，我们就可把MySQL安装为一系列不同的服务，如果不指定service_name，则安装的服务名默认为MySql，如果指定service_name，则安装的服务名为指定的service_name，并对应选项文件中的[service_name]选项组。以默认服务名运行的服务器还支持一个名为MySql的命名管道，而明确给出服务名的服务器将只监听TCP/IP连接而不支持命名管道--除非还用socket选项明确指定一个套接字文件。

移除服务需先用mysqladmin shutdown命令停掉服务器，再执行以下命令：

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\&amp;amp;gt; mysql-nt --remove                 #移除默认的服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c:\&amp;amp;gt; mysql-nt --remove service_name    #移除指定服务&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;4-9-MySQL服务器镜像配置&quot;&gt;&lt;a href=&quot;#4-9-MySQL服务器镜像配置&quot; class=&quot;headerlink&quot; title=&quot;4.9. MySQL服务器镜像配置&quot;&gt;&lt;/a&gt;4.9. MySQL服务器镜像配置&lt;/h2&gt;&lt;p&gt;通过镜像机制可把数据从一个地方复制到另一个地方，并能实现同步两个或多个地方的数据。MySQL服务器也支持镜像，大提高数据的安全性和稳定性。下面介绍一下MySQL数据中的镜像机制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在镜像关系中，一个MySQL服务器扮演主服务器角色，另外一个或多个服务器扮演从服务器角色，从服务器中的数据和主服务器中的数据完全一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在镜像建立之前，主服务器和从服务器必须进行一次完全同步。同步之后，在主服务器上所做的操作将会在从服务器上再实现，主服务器上的操作不是直接作用于从服务器上的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;负责在主、从服务器上传输各种修改动作的媒介是主服务器上的二进制变更日志，该日志记录着主服务器上所有的操作动作。因此，主服务器必须激活二进制日志功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从服务器必须有足够的权限从主服务器上接收二进制日志文件。镜像协调信息记录从服务器的进展情况，包括，从服务器正在读取的二进制变更日志文件名和它在该文件里的当前读写位置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每个主服务器可以有多个从服务器，但每个从服务器只能有一个主服务器。但MySQL服务器允许把一个从服务器作为另一个从服务器的主服务器，这样就可创建一个镜像服务器链。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;镜像机制在MySQL中还是一个新生事物，最早实现于3.23.15版。各版本间的镜像能力有差异，一般来说，建议大家尽量使用最新的版本，下面列举了不同版本的MySQL服务器在镜像机制方面的兼容规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;3.23.x系统版本的从服务器不能与4.x系统版本的主服务器通信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4.0.0版本的从服务器只能与4.0.0版本的主服务器通信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4.0.1或更高版本的从服务器既能与3.23.x系统版本的主服务器通信，也能与4.x系统版本的主服务器通信。但后一种情况要求主服务器的版本号等于或大于从服务器的版本号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来说，建议遵循以下原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;要尽可能地让主服务器和从服务器都使用同一版本系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在选定系统后，尽量使用该系统的最新版本。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建立主从镜像服务器的步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;确定主从服务器的镜像ID号，主从服务器的ID号不能相同。在启动主从服务器时，用–server_id启动选项给出其ID。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从服务器必须在主服务器上有一个具备足够的权限的帐户，从服务器将使用该帐户去连接主服务器并请求主服务器把二进制变更日志发送给它。可用以下命令创建这个帐户：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; GRANT REPLICATION SLAVE ON *.* TO &amp;apos;slave_user&amp;apos;@&amp;apos;slave_host&amp;apos; IDENTIFIED BY &amp;apos;slave_pass&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#REPLICATION权限只MySQL4.0.2后版本，之前的版本请用FILE权限。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把主服务器上的数据库文件拷贝到从服务器上完成最初同步工作。也可用备份后再加载的方法。在MySQL 4.0.0及以后版本里，还可用在主服务器上运行LOAD DATA FROM MASTER语句来建立从服务器。但有约束条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数据表要全部是MyISAM表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为发出这条指令而在连接从服务器时使用的帐户必须有SUPER权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从服务器用来连接主服务器的帐户必须具备RELOAD和SUPER权限。注意，这是一个主服务器上的帐户，而用来发出LOAD DATA FROM MASTER语句的帐户是一个从服务器上的帐户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LOAD DATA FROM MASTER语句在执行时需申请一个全局性的读操作锁，这个锁在语句执行期间阻塞主服务器上一切的写操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论用哪种方法同步数据，都要确保在开始制作备份到给主服务器重新配置好二进制日志功能这段时间，不能在主服务器上发生修改操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对主服务器的配置进行修改–把它的镜像ID告诉它并激活其二进制日志功能。在主服务器要读取的选项文件内增加以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server-id=master_server_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-bin=binlog_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新启动主服务器，从现在开始，它将把客户对数据库的修改操作记录到二进制变更日志里。如果在此之前已经激活了二进制日志功能，则要在重启前把二进制变更日志备份下来，在重启后再发一条RESET MASTER语句去清除现有的二进制变更日志。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭从服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对从服务器进行配置，使它知道自已的镜像ID，到哪里去找主服务器以及如何去连接主服务器。配置内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server-id=slave_server_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;master-host=master_host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;master-user=slave_user          #在主服务器上为从服务器建立的帐户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msater-password=slave_pass      #在主服务器上为从服务器建立的帐户的密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;master-connet-retry=30         #设置连接重试间隔，默认为60秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;master-retry-count=100000       #设置重试次数，默认为86400次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注：最后两个选项在网络连接不可靠时设置&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新启动从服务器。从服务器用两个信息源来确定它自已在镜像工作中的进度位置：一个是数据目录中的master.info文件，另一个是启动选项所给定的配置信息。第一次启动从服务器时，master.info文件不存在，从服务器会根据选项文件中给出的各种master-xxx选项值去连接主服务器。一旦连接成功，从服务器会创建一个master.info文件以保存各种连接参数和它自已的镜像工作状态。如果以后再重启从服务器，从服务器会优先读取该文件，而不是选项文件。所以如果你修改了选项文件的内容，想该选项生效就要删除master.info文件并重启从服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上步骤是镜像所有数据库的操作过程，如果我们想把mysql权限数据保留在主服务器上，排除在镜像机制外的话，可用在选项文件的[mysqld]中加入–binlog-ignore-db=mysql选项，这样，mysql数据库上的操作就不会记录在二进制变更日志里。如要排除其它数据库，只要增加多几个该选项即可。&lt;/p&gt;
&lt;p&gt;通过以下几个命令可监控和管理主从服务器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SLAVE STOP，SLAVE START用于挂起来恢复从服务器上镜像，如当备份时，可用该语句让从服务器暂时停止镜像活动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHOW SLAVE STATUS，在从服务器上查看其镜像协调信息，这些信息可以用来判断哪些二进制变更日志已经不再使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PURGE MASTER，在主服务器上对二进制变更日志进行失效处理。删除所有从服务器都不再使用的二进制变更日志。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CHANGE MASTER，在从服务器上修改镜像参数。如正在读取主服务器上哪个二进制变更日志，正在写哪个中继日志文件等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在MySQL4.0.2之后版本中，镜像机制中的从服务器由两个内部线程组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一个叫“I/O线程”，负责与主服务器通信，请求主服务器发送二进制变更日志，并把接收到的数据修改命令写入某个中继日志文件；用SLAVE STOP IO_THREAD或SLAVE START IO_THREAD可挂起或恢复该线程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;另一个叫“SQL线程”，负责从中继日志中读取数据修改命令并执行。同理，用SLAVE STOP SQL_THREAD或SLAVE START SQL_THREAD可挂起或恢复该线程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中继日志文件默认的文件为hostname-relay-bin.nnn和hostname-relay-bin.index。可用从服务器的–relay-log和–relay-log-index选项修改。在从服务器中还有一个relay-log.info中继信息文件，可用–relay-log-info-file启动选项修改文件名。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-5-数据库安全&quot;&gt;&lt;a href=&quot;#Chapter-5-数据库安全&quot; class=&quot;headerlink&quot; title=&quot;Chapter 5. 数据库安全&quot;&gt;&lt;/a&gt;Chapter 5. 数据库安全&lt;/h2&gt;&lt;p&gt;安全是一个过程，而不是一个方法，它贯穿在我们使用和维护MySQL数据库的过程中。这不单是系统管理员工作，用户也要有安全的意识，使安全问题得到有效控制。MySQL服务器的安全问题可分为内部安全和外部安全两部份。内部安全问题大都与系统文件有关，我们需确保MySQL程序文件和数据文件的安全。外部安全是指通过网络连接到服务器的安全问题，应该只允许合法用户访问数据库，在一些情况下还可用SSL加密信息传输通道。下分别介绍内部安全和外部安全的防范措施。&lt;/p&gt;
&lt;h2 id=&quot;5-1-保护MySQL安装程序文件&quot;&gt;&lt;a href=&quot;#5-1-保护MySQL安装程序文件&quot; class=&quot;headerlink&quot; title=&quot;5.1. 保护MySQL安装程序文件&quot;&gt;&lt;/a&gt;5.1. 保护MySQL安装程序文件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在重设置文件权限时，请先关闭数据库服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用以下命令把MySQL安装程序目录的属主和所属组设置为MySQL管理员帐号的用户名和用户组名。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% chown -R mysql.mysql /usr/local/mysql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外一种方法是把除数据目录外的所有目录属主设置为root所有，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% chown -R root.mysql /usr/local/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chown -R mysql.mysql /usr/local/mysql/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置安装目录及各有关子目录的权限，允许管理员进行所有操作，只允许其他人进行读和执行访问，设置命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#设置mysql目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chmod 755 /usr/local/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chmod u=rwx,go=rx /usr/local/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置mysql/bin目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chmod 755 /usr/local/mysql/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chmod u=rwx,go=rx /usr/local/mysql/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置mysql/libexec目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chmod 700 /usr/local/mysql/libexec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% chmod u=rwx,go-rwx /usr/local/mysql/libexec&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把数据目录及目录中的所有子目录和文件设置为只允许MySQL管理员访问。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% chmod -R go-rwx /usr/local/mysql/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果数据目录下有选项文件或套接字文件，并一些客户需访问这些文件，则可用以下的权限设置，使客户在没有读权限的前提下使用这些文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% chmod go+x /usr/local/mysql/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysql.sock套接字文件一般放以/tmp目录下，要确保该目录设置了粘着位，使自户只能删除自已创建的文件，不能删除其他用户创建的文件。/etc/my.cnf中公共选项文件，是对所有用户可读的，所以不应把一些敏感信息保存在里面。.my.cnf是用户专用选项文件，要确保只有该用户有权访问。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这样设置以后，只有MySQL管理员才能启动服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-2-权限表&quot;&gt;&lt;a href=&quot;#5-2-权限表&quot; class=&quot;headerlink&quot; title=&quot;5.2. 权限表&quot;&gt;&lt;/a&gt;5.2. 权限表&lt;/h2&gt;&lt;p&gt;MySQL服务器通过权限表来控制用户对数据库的访问，权限表存放在mysql数据库里，由mysql_install_db脚本初始化。这些权限表分别user，db，table_priv，columns_priv和host。下面分别介绍一下这些表的结构和内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;user权限表：记录允许连接到服务器的用户帐号信息，里面的权限是全局级的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;db权限表：记录各个帐号在各个数据库上的操作权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;table_priv权限表：记录数据表级的操作权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;columns_priv权限表：记录数据列级的操作权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;host权限表：配合db权限表对给定主机上数据库级操作权限作更细致的控制。这个权限表不受GRANT和REVOKE语句的影响。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家注意到，以上权限没有限制到数据行级的设置。在MySQL只要实现数据行级控制就要通过编写程序(使用GET-LOCK()函数)来实现。&lt;/p&gt;
&lt;p&gt;MySQL的版本很多，所以权限表的结构在不同版本间会有不同。如果出现这种情况，可用mysql_fix_privilege_tables脚本来修正。运行方式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql_fix_privilege_tables rootpassword            #这里要给出MySQL的root用户密码&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最好一下子升级到MySQL 4.0.4版本，因为4.0.2和4.0.3的db表没有Create_tmp_table_priv和Lock_tables_priv权限。&lt;/p&gt;
&lt;p&gt;MySQL的权限表定义了两部份内容，一个部份定义权限的范围，即谁(帐户)可以从哪里(客户端主机)访问什么(数据库、数据表、数据列)；另一部份定义权限，即控制用户可以进行的操作。下面是一些常用的权限介绍，可直接在GRANT语句中使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CREATE TEMPORARY TABLES，允许创建临时表的权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EXECUTE，允许执行存储过程的权限，存储过程在MySQL的当前版本中还没实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FILE，允许你通过MySQL服务器去读写服务器主机上的文件。但有一定限制，只能访问对任何用户可读的文件，通过服务器写的文件必须是尚未存在的，以防止服务器写的文件覆盖重要的系统文件。尽管有这些限制，但为了安全，尽量不要把该权限授予普通用户。并且不要以root用户来运行MySQL服务器，因为root用户可在系统任何地方创建文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GRANT OPTION，允许把你自已所拥有的权限再转授给其他用户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LOCK TABLES，可以使用LOCK TABLES语句来锁定数据表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PROCESS，允许你查看和终止任何客户线程。SHOW PROCESSLIST语句或mysqladmin processlist命令可查看线程，KILL语句或mysqladmin kill命令可终止线程。在4.0.2版及以后的版本中，PROCESS权限只剩下查看线程的能力，终止线程的能力由SUPER权限控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RELOAD，允许你进行一些数据库管理操作，如FLUSH，RESET等。它还允许你执行mysqladmin命令：reload，refresh，flush-hosts，flush-logs，flush-privileges，flush-status，flush-tables和flush-threads。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;REPLICATION CLIENT，允许查询镜像机制中主服务器和从服务器的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;REPLICATION SLAVE，允许某个客户连接到镜像机制中的主服务器并请求发送二进制变更日志。该权限应授予从服务器用来连接主服务器的帐号。在4.0.2版这前，从服务器是用FILE权限来连接的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHOW DATABASES，控制用户执行SHOW DATABASES语句的权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SUPER，允许终止线程，使用mysqladmin debug命令，使用CHANGE MASTER，PURGE MASTER LOGS以及修改全局级变量的SET语句。SUPER还允许你根据存放在DES密钥文件里的密钥进行DES解密的工作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;user权限表中有一个ssl_type数据列，用来说明连接是否使用加密连接以及使用哪种类型的连接，它是一个ENUM类型的数据列，可能的取值有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NONE，默认值，表示不需加密连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ANY，表示需要加密连接，可以是任何一种加密连接。由GRANT的REQUIRE SSL子句设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;X509，表示需要加密连接，并要求客户提供一份有效的X509证书。由GRANT的REQUIRE X509子句设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SPECIFIED，表示加密连接需满足一定要求，由REQUIRE子句的ISSUER，SUBJECT或CIPHER的值进行设置。只要ssl_type列的值为SPECIFIED，则MySQL会去检查ssl_cipher(加密算法)、x509_issuer(证书签发者)和x509_subject(证书主题)列的值。这几列的列类型是BLOB类型的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;user权限表里还有几列是设置帐户资源使用情况的，如果以下数据列中的数全为零，则表示没有限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;max_connections，每小时可连接服务器的次数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max_questions，每小时可发出查询命令数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max_updates，每小时可以发出的数据修改类查询命令数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置权限表应注意的事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除所有匿名用户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查出所有没有口令用户，重新设置口令。可用以下命令查询空口令用户：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SELECT host,user FROM user WHERE password = &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量不要在host中使用通配符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最好不要用user权限表进行授权，因为该表的权限都是全局级的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要把mysql数据库的权限授予他人，因为该数据库包含权限表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用GRANT OPTION权限时不要滥用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FILE权限可访问文件系统中的文件，所以授权时也要注意。一个具有FILE权限的用户执行以下语句就可查看服务器上全体可读的文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; CREATE TABLE etc_passwd(pwd_entry TEXT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; LOAD DATA INFILE &amp;apos;/etc/passwd&amp;apos; INTO TABLE etc_passwd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; SELECT * FROM etc_passwd；&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果MySQL服务器数据目录上的访问权限设置得不好，就会留下让具有FILE权限的用户进入别人数据库的安全漏洞。所以建议把数据目录设置成只能由MySQL服务器读取。下面演示一个利用具有FILE权限的用户读取数据目录中文件权限设置不严密的数据库数据的过程：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; use test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; create table temp(b longblob);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show databases                   #显示数据库名清单，--skip-show-database可禁止该功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; load data infile &amp;apos;./db/xxx.frm&amp;apos; into table temp fields escaped by &amp;apos;&amp;apos; lines terminated by &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from temp into outfile &amp;apos;xxx.frm&amp;apos; fields escaped by &amp;apos;&amp;apos; lines terminated by &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; delete from temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; load data infile &amp;apos;./db/xxx.MYD&amp;apos; into table temp fields escaped by &amp;apos;&amp;apos; lines terminated by &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from temp into outfile &amp;apos;xxx.MYD&amp;apos; fields escaped by &amp;apos;&amp;apos; lines terminated by &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; delete from temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; load data infile &amp;apos;./db/xxx.MYI&amp;apos; into table temp fields escaped by &amp;apos;&amp;apos; lines terminated by &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from temp into outfile &amp;apos;xxx.MYI&amp;apos; fields escaped by &amp;apos;&amp;apos; lines terminated by &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; delete from temp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，你的数据库就给人拷贝到本地了。如果服务器是运行在root用户下，那危害就更大了，因为root可在服务器上做任何的操作。所以尽量不要用root用户来运行服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只把PROCESS权限授予可信用户，该用户可查询其他用户的线程信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要把RELOAD权限授予无关用户，因为该权限可发出FLUSH或RESET语句，这些是数据库管理工具，如果用户不当使用会使数据库管理出现问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ALTER权限也不要授予一般用户，因为该权限可更改数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GRANT语句对权限表的修改过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当你发送一条GRANT语句时，服务器会在user权限表里创建一个记录项并把你用户名、主机名和口令记录在User、Host和Password列中。如果设置了全局权限，由把该设置记录在相在的权限列中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果在GRANT里设置了数据库级权限，你给出的用户名和主机名就会记录到db权限表的User和Host列中，数据库名记录在Db列中，权限记录到相关的权限列中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着是到数据表和数据列级的权限设置，设置方法和上面的一样。服务器会把用户名、主机名、数据库名以及相应的数据表名和数据列名记录到数据表中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删除用户权限其实就是把这些权限表中相应的帐号记录全部删除即可。&lt;/p&gt;
&lt;h2 id=&quot;5-3-建立加密连接&quot;&gt;&lt;a href=&quot;#5-3-建立加密连接&quot; class=&quot;headerlink&quot; title=&quot;5.3. 建立加密连接&quot;&gt;&lt;/a&gt;5.3. 建立加密连接&lt;/h2&gt;&lt;p&gt;加密连接可提高数据的安全性，但会降低性能。要进行加密连接，必须满足以下要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;user权限表里要有相关的SSL数据列。如果安装的MySQL服务器是4.0.0版的，user权限表已包含相关的SSL数据列，否则，我们也可用mysql_fix_privilege_tables脚本升级权限表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器和客户程序都已经编译有OpenSSL支持。首先要安装openssl，在编译时MySQL服务器时加–with-vio和–with-openssl选项加上openssl支持。可用以下语句查询服务器是否支持SSL：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show variables like &amp;apos;have_openssl&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在启动服务器时用有关选项指明证书文件和密钥文件的位置。在建立加密连接前，要准备三个文件，一个CA证书，是由可信赖第三方出具的证书，用来验证客户端和服务器端提供的证书。CA证书可向商业机构购买，也可自行生成。第二个文件是证书文件，用于在连接时向对方证明自已身份的文件。第三个文件是密钥文件，用来对在加密连接上传输数据的加密和解密。MySQL服务器端的证书文件和密钥文件必须首先安装，在sampdb发行版本的ssl目录里有几个供参考的样本文件：ca-cert.pem(CA证书)，server-cert.pem(服务器证书)，server-key.pem(服务器公共密钥)。把这几个文件拷贝到服务器的数据目录中，再在选项文件里加上以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssl-ca=/usr/local/mysql/data/ca-cert.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssl-cert=/usr/local/mysql/data/server-cert.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssl-key=/usr/local/mysql/data/server-key.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重启服务器，使配置生效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要想让某个客户程序建立加密连接，必须在调用这个客户程序时用有关选项告诉它在哪里能找到其证书文件和密钥文件。在sampdb发行版的ssl目录中提供了client-cert.pem(客户证书文件)，client-key.pem(客户密钥文件)，CA证书与服务器使用同样的ca-cert.pem。把他们拷贝到个人目录下，并在.my.cnf选项文件中指出文件位置，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysql]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssl-ca=/home/mysql/ca-cert.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssl-cert=/home/mysql/client-cert.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssl-key=/home/mysql/client-key.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置完成后，调用mysql程序运行\s或SHOW STATUS LIKE ‘SSL%’命令，如果看到SSL:的信息行就说明是加密连接了。如果把SSL相关的配置写进选项文件，则默认是加密连接的。也可用mysql程序的–skip-ssl选项取消加密连接。如果用命令行方式启用加密连接可以这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql --ssl-ca=ca-cert.pem --ssl-cert=client-cert.pem --ssl-key=client-key.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可用GRANT语句的REQUIRE SSL选项来强制用户使用加密连接。&lt;/p&gt;
&lt;p&gt;使用sampdb发行版的证书可以建立一个加密连接，但由于该文件已公开，所以安全性不好，我们可以在测试成功后自行建立证书或购买商业证书，以提高安全性。如何自行建立SSL证书的文档在sampdb发行版的ssl/README文件里有说明。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-6-数据库的备份、维护和修复&quot;&gt;&lt;a href=&quot;#Chapter-6-数据库的备份、维护和修复&quot; class=&quot;headerlink&quot; title=&quot;Chapter 6. 数据库的备份、维护和修复&quot;&gt;&lt;/a&gt;Chapter 6. 数据库的备份、维护和修复&lt;/h2&gt;&lt;p&gt;数据库在运行中，会因为人为因素或一些不可抗力因素造成数据损坏。所以为了保护数据的安全和最小停机时间，我们需制定详细的备份/恢复计划，并定期对计划的有效性进行测试。本章结合MySQL服务器的运行机制和所提供的工具，介绍如何进行数据库的备份、维护和修复。&lt;/p&gt;
&lt;p&gt;以下是几点防范的措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;制定一份数据库备份/恢复计划，并对计划进行仔细测试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动数据库服务器的二进制变更日志，该功能的系统开销很小(约为1%)，我们没有理由不这样做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定期检查数据表，防范于未燃。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定期对备份文件进行备份，以防备份文件失效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把MySQL的数据目录和备份文件分别放到两个不同的驱动器中，以平衡磁盘I/O和增加数据的安全。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-1-检查-修复数据表&quot;&gt;&lt;a href=&quot;#6-1-检查-修复数据表&quot; class=&quot;headerlink&quot; title=&quot;6.1. 检查/修复数据表&quot;&gt;&lt;/a&gt;6.1. 检查/修复数据表&lt;/h2&gt;&lt;p&gt;对数据表进行维护最好通过发出CHECK TABLE(检查数据表)或REPAIRE TABLE(修复数据表)命令来做，这样MySQL服务器自动进行表锁定以协调数据表中数据的读写一致性问题。也可用myisamchk工具来做数据表的维护，但它直接访问有关的数据表文件，不通过服务器，所以需人为地协调数据表数据的读写一致性问题。使用myisamchk检查数据表的具体操作步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以mysql客户端程序连接服务器，并发出LOCK TABLE命令，以只读方式锁住数据表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; use db&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; LOCK TABLE table_name READ;     #以只读方式锁定表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; FLUSH TABLE table_name;        #关闭数据表文件，并把内存中的信息写入磁盘&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保持上面的状态不退出，另开一个shell窗口，用以下命令维护(检查)数据表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% myisamchk table_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果不保持上面状态，退出mysql会话，则表锁定会自动取消。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;维护完成，切换回mysql状态的shell窗口，发出以下命令解除表锁定。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UNLOCK TABLES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用myisamchk修复数据表的具体操作步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进行修复操作需以读/写方式锁定数据表，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; use db&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; LOCK TABLE table_name WRITE;     #以读/写方式锁定数据表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; FLUSH TABLE table_name;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保持mysql客户端连接状态，切换到第二个shell窗口，运行修复命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% myisamchk --recover table_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;运行修复命令前最好先备份一下数据文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修复完成后，切换回mysql客户端连接窗口，运行以下命令解除数据表锁定：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; FLUSH TABLE table_name;     #使服务器觉察新产生的索引文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UNLOCK TABLE;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还可用以下命令锁定所有表，锁定后，所有用户就只能读不能写数据，这样就可使我们能安全地拷贝数据文件。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; FLUSH TABLES WITH READ LOCK;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面是解除锁语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UNLOCK TABLES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-2-备份数据库&quot;&gt;&lt;a href=&quot;#6-2-备份数据库&quot; class=&quot;headerlink&quot; title=&quot;6.2. 备份数据库&quot;&gt;&lt;/a&gt;6.2. 备份数据库&lt;/h2&gt;&lt;p&gt;定期的备份可使我们数据库崩溃造成的损失大大降低。在MySQL中进行数据备份的方法有两种，一种是使用mysqldump程序，一种是使用mysqlhotcopy、cp、tar或cpio等打包程序直接拷贝数据库文件。mysqldump程序备份数据库较慢，但它生成的文本文件便于移植。使用mysqlhotcopy等程序备份速度快，因为它直接对系统文件进行操作，需人为协调数据库数据的备份前后一致性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用mysqldump备份数据库其实就是把数据库转储成一系列CREATE TABLE和INSERT语句，通过这些语句我们就可重新生成数据库。使用mysqldump的方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqldump --opt testdb | gzip &amp;amp;gt; /data/backup/testdb.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#--opt选项会对转储过程进行优化，生成的备份文件会小一点，后的管道操作会进行数据压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqldump --opt testdb mytable1,mytable2 | gzip &amp;amp;gt; /data/backup/testdb_mytable.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#可在数据库后接数据表名，只导出指定的数据表，多个数据表可用逗号分隔&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;–opt选项还可激活–add-drop-table选项，它将会在备份文件的每条CREATE TABLE前加上一条DROP TABLE IF EXISTS语句。这可方便进行数据表的更新，而不会发生“数据表已存在”的错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用mysqldump命令还可直接把数据库转移到另外一台服务器上，不用生成备份文件。重复执行可定期更新远程数据库。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin -h remote_host create testdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqldump --opt testdb | mysql -h remote_host testdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;另外还可通过ssh远程调用服务器上的程序，如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% ssh remote_host mysqladmin create testdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqldump --opt testdb | ssh remote_host mysql testdb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过直接拷贝系统文件的方式备份数据库，在备份时，要确保没有人对数据库进行修改操作。要做到这点，最好关闭服务器。如果不能关闭的，要以只读方试锁定有关数据表。下面是一些示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% cp -r db /backup/db                 #备份db数据库到/backup/db目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% cp table_name.* /backup/db          #只备份table_name数据表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% scp -r db remotehot:/usr/local/mysql/data      #用scp把数据库直接拷贝到远程服务器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;在把数据库直接拷贝到远程主机时，应注意两台机器必须有同样的硬件结构，或者将拷贝的数据表全部是可移植数据表类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用mysqlhotcopy工具，它是一个Perl DBI脚本，可在不关闭服务器的情况下备份数据库，它主要的优点是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;它直接拷贝文件，所以它比mysqldump快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可自动完成数据锁定工作，备份时不用关闭服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;能刷新日志，使备份文件和日志文件的检查点能保持同步。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是该工具的使用示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqlhotcopy db  /bakcup/                 #把db数据库备份到backup/db目录里，会自动创建一个db目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用BACKUP TABLE语句进行备份，该语句最早出现在MySQL 3.23.25版本中，仅适用于MyISAM数据表。用法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; BACKUP TABLE mytable TO &amp;apos;/backup/db&amp;apos;;         #把mytable数据表备份到/backup/db目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了执行该语句，你必须拥有那些表的FILE权限和SELECT权限，备份目录还必须是服务器可写的。该语句执行时，会先把内存中的数据写入磁盘，再把各个数据表的.frm(表结构定义文件)、.MYD(数据)文件从数据目录拷贝到备份目录。它不拷贝.MYI(索引)文件，因为它能用另外两个文件重建。BACKUP TABLE语句备份时，依次锁定数据表，当同时备份多个数据表时，数据表可能会被修改，所以备份0完成时，备份文件中的数据和现时数据表中的数据可能会有差异，为了消除该差异，我们可用只读方式锁定数据表，在备份完成后再解锁。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; LOCK TABLES tb1 READ,tb2 READ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; BACKUP TABLE tb1,tb2 TO &amp;apos;backup/db&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UNLOCK TABLES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用BACKUP TABLE语句备份的数据表可用RESTORE TABLE重新加载到服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InnoDB和BDB数据库也可用mysqldump和直接拷贝法进行备份。使用直接拷贝法时应注意需把组成InnoDB和BDB数据库的所有文件都拷贝下来，如InnoDB的.frm文件、日志文件和表空间配置文件；BDB的数据文件、日志文件等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用镜像机制进行备份，我们可用SLAVE STOP语句挂起从服务器的镜像，在从服务器上通过直接拷贝法或其它工具制作备份。备份完成，用SLAVE START重新启动镜像，从服务器重新与主服务器同步，接收备份时主服务器所做的修改。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在MySQL中没有为数据库重命名的命令，但我们可用mysqldump转储数据库，再创建一个新的空数据库，把转储文件加载到该新数据库，这样就完成数据库重命名的工作。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqldump old_db &amp;gt;db.sql          #转储db数据库数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin create new_db          #新建一个空的数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysql new_db &amp;lt; db.sql             #把db数据库的数据加载到新的数据库中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqladmin drop old_db            #删除旧的数据库&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个更简单的重命名数据库的方法是直接修改数据库目录名，但该方法不适用于InnoDB和BDB数据库。注意，在更名后，需在权限表中更新相关数据表信息，需执行以下语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UPDATE db SET db=&amp;apos;new_db&amp;apos; WHERE db=&amp;apos;old_db&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UPDATE tables_priv SET db=&amp;apos;new_db&amp;apos; WHERE db=&amp;apos;old_db&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UPDATE columns_priv SET db=&amp;apos;new_db&amp;apos; WHERE db=&amp;apos;old_db&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; UPDATE host SET db=&amp;apos;new_db&amp;apos; WHERE db=&amp;apos;old_db&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-3-使用备份恢复数据&quot;&gt;&lt;a href=&quot;#6-3-使用备份恢复数据&quot; class=&quot;headerlink&quot; title=&quot;6.3. 使用备份恢复数据&quot;&gt;&lt;/a&gt;6.3. 使用备份恢复数据&lt;/h2&gt;&lt;p&gt;恢复过程包括两个信息源—备份文件和二进制日志，备份文件可使用数据恢复到执行备份时的状态，而二进制日志可恢复到发生故障时的状态。下面分别介绍如何利用这两个文件恢复一个数据库或恢复单个数据表。&lt;/p&gt;
&lt;p&gt;恢复整个数据库的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;把需恢复的数据库的整个目录的内容拷贝到其它地方，以备用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用最近的备份文件重载数据库。如果使用mysqldump生成的备份，则可使用它们作为mysql的输入重载；如果是通过拷贝数据库目录来备份的，则要关闭数据库服务器，再把备份重新拷贝到数据目录，再重启数据库服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过二进制日志重做事务，恢复到出错点的数据。具体操作是这样的，用mysqlbinlog把日志转换成ASCII格式，再把它作为mysql的输入，并指定–one-database选项，以便mysql只执行你指定的数据库恢复。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% ls -t -r -l binlog.[0-9]* | xargs mysqlbinlog | mysql --one-database db_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但上面命令只适合所有日志文件名具有相同长度的情况。否则需用下面的Perl代码来处理：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/perl -w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# sort_num.pl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use strict;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my @files = &amp;amp;lt;&amp;amp;gt;;             #read all input file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@files = sort &amp;#123; my $anum = $1 if $a =~/\.(\d+)$/;         #sort them by numeric extension&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                my $bnum = $1 if $b =~/\.(\d+)$/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $anum &amp;amp;lt;=&amp;amp;gt; $bnum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125; @files;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print @files;              #print them&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exit(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如下使用该脚本：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% ls -l binlog.[0-9]* | sort_num.pl | xargs mysqlbinlog | mysql --one-database db_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面讨论的是需所有日志文件的情况，但多数情况下我们只需备份后生成的几个日志文件，这时，可用以下命令来重做。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqlbinlog binlog.1234 | mysql --one-database db_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% mysqlbinlog binlog.1235 | mysql --one_database db_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们需恢复因执行DROP DATABASE，DROP TABLE或DELETE语句而损坏的数据库，就需在日志文件中删除该语句，否则重做后结果还是一样。所以需把日志转换成ASCII格式并保存起来，再用编辑器打开该文件，删除这些语句后再重做。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果使用文本变更日志，则不需使用mysqlbinlog程序，因为该日志文件本身就是ASCII格式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;恢复使用BACKUP TABLE命令备份的数据表可用RESTORE TABLE语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;备份语句：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; BACKUP TABLE table_name1,table_name2 TO &amp;apos;/backup/table_backup&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;恢复语句：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; RESTORE TABLE table_name1,table_name2 FROM &amp;apos;/backup/table_backup&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;恢复有外键的数据表，可用SET FOREIGN_KEY_CHECK = 0;语句先关闭键字检查，导入表后再重启它，赋值为1表示检查有效。&lt;/p&gt;
&lt;p&gt;恢复InnoDB表空间，当服务器重启时，InnoDB处理程序会执行自动恢复工作，通过选项文件[mysqld]段中的set-variable=innodb_force_recovery=level设置自动恢复的级别，推荐典型的启动值为4。如果需从备份文件恢复，则和上面介绍的方法一样。BDB数据表的恢复也一样，启动服务器时它会进行自动恢复。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-7-MySQL程序介绍&quot;&gt;&lt;a href=&quot;#Chapter-7-MySQL程序介绍&quot; class=&quot;headerlink&quot; title=&quot;Chapter 7. MySQL程序介绍&quot;&gt;&lt;/a&gt;Chapter 7. MySQL程序介绍&lt;/h2&gt;&lt;p&gt;安装完MySQL后，在MySQL的安装目录下会生成很多有用的程序，下面对这些程序进行一一介绍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;libmysqld—-嵌入式MySQL服务器，它不能独立运行，它是一个函数库，可嵌入到其它程序中，使程序具有MySQL服务器的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;myisamchk和isamchk—-检查和修复数据表、分析键值的分布情况、禁止或启用数据表索引的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;myisampack和pack_isam—-压缩数据表并生成只读数据表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysql—-最常用的一个与服务器交互的命令行客户端程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqlaccess—-一个用来测试数据库访问权限的脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqladmin—-一个用来执行各种系统维护和管理工作的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqlbinlog—-一个以ASCII格式显示二进制变更日志内容的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqlbug—-一个用来生成程序漏洞报告的脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysql_config—-当准备编译基于MySQL的程序时，可以利用这个工具程序来确定该程序的编译选项和标志。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqld—-MySQL服务器程序，MySQL数据的核心。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqld_multi—-一个用来同时启动和关闭多个MySQL服务器的脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysql_safe—-一个用来启动和监控MySQL服务器的脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqldump—-一个用来导出数据表内容的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqlhotcopy—-数据库备份工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqlimport—-一个对数据表批量加载数据的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysql_install_db—-一个初始化系统权限表和数据目录的脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysql.server—-一个用来启动和关闭MySQL服务器的脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysqlshow—-一个用来显示数据库中数据表的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-8-MySQL-How-To&quot;&gt;&lt;a href=&quot;#Chapter-8-MySQL-How-To&quot; class=&quot;headerlink&quot; title=&quot;Chapter 8. MySQL How-To&quot;&gt;&lt;/a&gt;Chapter 8. MySQL How-To&lt;/h2&gt;&lt;h2 id=&quot;8-1-连接数据库服务器&quot;&gt;&lt;a href=&quot;#8-1-连接数据库服务器&quot; class=&quot;headerlink&quot; title=&quot;8.1. 连接数据库服务器&quot;&gt;&lt;/a&gt;8.1. 连接数据库服务器&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./mysql -h host_name -u user_name -p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-h host_name(--host=host_name)&lt;/code&gt;，连接的数据库主机名，如果在本地主机上则可省略。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-u user_name(--user=user_name)&lt;/code&gt;，数据库用户名，在unix系统上，如果系统的登录名与数据用户名一样，则可省略。在windows系统中，可通过设置环境变量USER来给出数据库用户名，如set USER=username。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-p(--password)&lt;/code&gt;，提供数据库用户密码，有该选项mysql就会提示你输入密码。输入的密码以星号显示，以确保安全。也可直接在-p后写上密码(-p和密码间不能有空格)，但这不安全，不推荐。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;连接成功后，mysql数据库服务器会显示一些欢迎信息。接着就可用mysql&amp;gt;use database_name命令打开指定的数据库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;$ ./mysql -h host_name -u user_name -p database_name&lt;/code&gt;命令可直接打开指定数据库。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;8-2-更新用户密码&quot;&gt;&lt;a href=&quot;#8-2-更新用户密码&quot; class=&quot;headerlink&quot; title=&quot;8.2. 更新用户密码&quot;&gt;&lt;/a&gt;8.2. 更新用户密码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;update user set password=passowrd(&amp;apos;your passowrd&amp;apos;) where host=&amp;apos;%&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;刷新权限设置：&lt;code&gt;mysql&amp;gt;flush privileges;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;8-3-MySQL读取配置文件的顺序&quot;&gt;&lt;a href=&quot;#8-3-MySQL读取配置文件的顺序&quot; class=&quot;headerlink&quot; title=&quot;8.3. MySQL读取配置文件的顺序&quot;&gt;&lt;/a&gt;8.3. MySQL读取配置文件的顺序&lt;/h2&gt;&lt;p&gt;my.cnf是MySQL数据库的配置文件，它存在多个地方，在/etc目录，数据目录和用户主目录都有。放在不同位置，里面的选项有不同的作用范围，下面是MySQL读取配置文件的顺序和作用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql 读取配置文件的顺序:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/etc/my.cnf              Global options.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DATADIR/my.cnf           Server-specific options.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;defaults-extra-file      The file specified with the --defaults-extra-file option.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~/.my.cnf                User-specific options.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;8-4-重设置MySQL管理员密码的方法&quot;&gt;&lt;a href=&quot;#8-4-重设置MySQL管理员密码的方法&quot; class=&quot;headerlink&quot; title=&quot;8.4. 重设置MySQL管理员密码的方法&quot;&gt;&lt;/a&gt;8.4. 重设置MySQL管理员密码的方法&lt;/h2&gt;&lt;p&gt;有时我们会因为设置原因或时间长了忘记了数据库管理员的密码，使得我们被关在MySQL服务器外。MySQL服务器提供了一种方法可使我们在服务器上重设密码。在windows和linux/unix平台上操作稍有不同，下面分别介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Linux/Unix平台下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;用 % kill -TERM PID关闭服务器，用-TERM信息可使服务器在关闭前把内存中的数据写入磁盘。如果服务器没有响应，我们可用% kill -9 PID来强制删除进程，但不建议这样做。这时内存中的数据不会写入磁盘，造成数据不完整。如果你是用mysql_safe脚本启动MySQL服务器的，这个脚本会监控服务器的运行情况并在它被终止时重启服务器，所以如需关闭服务器，要先终止该进程，然后再真正终止mysqld进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用–skip-grant-tables参数启动MySQL Server，这时MySQL服务器将不使用权限表对连接操作进行验证。你就可在不提供root密码的情况下连接上服务器，并获得root的权限。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% mysqld_safe --skip-grant-tables &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用以下命令登录服务器，并重设密码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; % mysql -u root         #不用密码就可连接到服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; use mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; set password for &amp;apos;root&amp;apos;@&amp;apos;localhost&amp;apos; = password(&amp;apos;password&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;修改MySQL服务器帐户密码有三种方式，你可参考本笔记中数据库日常管理一章中的相关内容。在这种环境下，使用mysaladmin修改密码好象不行，还是提示要输入密码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭服务器，再用正常方式启动服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;windows平台下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;用管理员帐号登录服务器，关闭MySQL数据库服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用–skip-grant-tables参数启动服务器：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\mysql\bin&amp;amp;gt;mysqld-nt --skip-grant-tables&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新打开一个console窗口，用mysql命令登录服务器设置root的新密码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\mysql\bin&amp;amp;gt;mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; use mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; set password for &amp;apos;root&amp;apos;@&amp;apos;localhost&amp;apos; = password(&amp;apos;password&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭服务器，再用正常方式启动服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;8-5-NULL值&quot;&gt;&lt;a href=&quot;#8-5-NULL值&quot; class=&quot;headerlink&quot; title=&quot;8.5. NULL值&quot;&gt;&lt;/a&gt;8.5. NULL值&lt;/h2&gt;&lt;p&gt;NULL是空值，代表什么也没有。它不能与值进行比较操作和算术操作，也不能和NULL进行比较，因为两个空值比较是没有意义的。我们可用“is NULL” 或 “is not NULL”来判断是不空值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from test where mytest is NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from test where mytest is not NULL;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在MySQL3.23以后的版本有一个新的比较操作符“&amp;lt;=&amp;gt;”，它可对NULL值进行相等比较。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from test where mytest &amp;lt;=&amp;gt; UNLL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from test where not (mytest &amp;lt;=&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果查询后排序中的数据中包含NULL，则从MySQL4.0.2开始，有NULL值的数据行总是出现在查询结果的开头，即使设置的desc参数。4.0.2以前版本，如果设置了asc，则出在查询结果的开头，如果设置了desc，则出现在查询结果的结尾。&lt;/p&gt;
&lt;h2 id=&quot;8-6-使用SQL变量&quot;&gt;&lt;a href=&quot;#8-6-使用SQL变量&quot; class=&quot;headerlink&quot; title=&quot;8.6. 使用SQL变量&quot;&gt;&lt;/a&gt;8.6. 使用SQL变量&lt;/h2&gt;&lt;p&gt;MySQL3.23.6以后的版本允许通过查询结果来设置变量，设置好的变量可在以后使用。变量用@name定义，赋值方式用@name:=value。下面是一个在查询语句中进行赋值和使用变量的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select @name:=id from test where mytest=&amp;quot;test&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from test where mytest=@name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;8-7-改变默认提示符&quot;&gt;&lt;a href=&quot;#8-7-改变默认提示符&quot; class=&quot;headerlink&quot; title=&quot;8.7. 改变默认提示符&quot;&gt;&lt;/a&gt;8.7. 改变默认提示符&lt;/h2&gt;&lt;p&gt;用mysql登录进数据库后，MySQL数据的默认提示符是“mysql”，我们可设置它根据用户打开的数据库名而变化，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;prompt \d&amp;gt;\_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;none&amp;gt;use test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test&amp;gt;use mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;prompt为设置命令，\d代表当前数据库，_代表一个空格。&lt;/p&gt;
&lt;h2 id=&quot;8-8-非优化的全数据表DELETE操作&quot;&gt;&lt;a href=&quot;#8-8-非优化的全数据表DELETE操作&quot; class=&quot;headerlink&quot; title=&quot;8.8. 非优化的全数据表DELETE操作&quot;&gt;&lt;/a&gt;8.8. 非优化的全数据表DELETE操作&lt;/h2&gt;&lt;p&gt;为了清空数据表，又需知道删除的行数和保持AUTO_INCREMENT序列的值，需用以下的删除语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# delete from table_name where 1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;8-9-MySQL事务处理示例&quot;&gt;&lt;a href=&quot;#8-9-MySQL事务处理示例&quot; class=&quot;headerlink&quot; title=&quot;8.9. MySQL事务处理示例&quot;&gt;&lt;/a&gt;8.9. MySQL事务处理示例&lt;/h2&gt;&lt;p&gt;MYSQL高级特性 – 事务处理下面以两个银行账户之间的转账为例子进行演示。要使用MySQL中的事务处理，首先需要创建使用事务表类型(如BDB = Berkeley DB或InnoDB)的表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE account (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;account_id BIGINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;balance DOUBLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) TYPE = InnoDB;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要在事务表上使用事务处理，必须要首先关闭自动提交：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SET AUTOCOMMIT = 0;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;事务处理以BEGIN命令开始：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BEGIN;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在mysql客户处在于服务器相关的事物上下文中。任何对事务表所做的改变在提交之前不会成为永久性的改变。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UPDATE ACCOUNT SET balance = 50.25 WHERE account_id = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPDATE ACCOUNT SET balance = 100.25 WHERE account_id = 2;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在做出所有的改变之后，使用COMMIT命令完成事务处理：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;COMMIT;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，事务处理的真正优点是在执行第二条语句发生错误时体现出来的，若在提交前终止整个事务，可以进行回滚操作：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ROLLBACK;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面是另一个例子，通过MYSQL直接进行数学运算：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SELECT @first := balance FROM account WHERE account_id = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT @second := balance FROM account WHERE account_id = 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPDATE account SET balance = @first - 25.00 WHERE account_id = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPDATE account SET balance = @second + 25.00 WHERE account_id = 2;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除了COMMIT命令外，下列命令也会自动结束当前事务：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BEGIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE INDEX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DROP DATABASE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DROP TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCK TABLES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RENAME TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TRUNCATE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UNLOCK TABLES&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:yjnet@21cn.com&quot;&gt;yjnet@21cn.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间: 2004年11月06日&lt;/p&gt;
&lt;p&gt;最近更新: 2005年01月12日&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://it-ebooks.flygon.net/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Python标准库 中文版</title>
    <link href="http://it-ebooks.flygon.net/python-stdlib/"/>
    <id>http://it-ebooks.flygon.net/python-stdlib/</id>
    <published>2016-03-13T04:11:25.000Z</published>
    <updated>2016-03-13T04:18:05.457Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s1512655.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;翻译: Python 江湖群&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://old.sebug.net/paper/books/python/%E3%80%8APython%E6%A0%87%E5%87%86%E5%BA%93%E3%80%8B%E4%B8%AD%E6%96%87%E7%89%88.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sebug下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YRi_vpB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1000eb.com/1j0va&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;千易下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s1512655.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;翻译: Python 江湖群&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>XML 学习笔记</title>
    <link href="http://it-ebooks.flygon.net/xml-note/"/>
    <id>http://it-ebooks.flygon.net/xml-note/</id>
    <published>2016-03-13T04:00:17.000Z</published>
    <updated>2016-03-13T08:51:58.452Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间:2004年12月03日&lt;/p&gt;
&lt;p&gt;最近更新:2006年02月17日，新增CSS内容&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;XML技术是Internet技术的又一次革命。本笔记记录标记语言的历史和发展，还有我的学习历程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2875121&quot;&gt;1. XML简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810081&quot;&gt;2. XML语法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810137&quot;&gt;2.1. 基本语法规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810559&quot;&gt;2.2. 良构XML文档和有效XML文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810333&quot;&gt;2.3. XML文档的组成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810496&quot;&gt;2.4. XML文档树&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810509&quot;&gt;3. DTD&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861409&quot;&gt;3.1. 文档类型声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861485&quot;&gt;3.2. 元素声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861808&quot;&gt;3.3. 属性声明&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861852&quot;&gt;3.3.1. 属性类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808545&quot;&gt;3.3.2. 属性缺省值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808624&quot;&gt;3.4. 实体&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808845&quot;&gt;4. XML名称空间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809084&quot;&gt;5. XHTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875593&quot;&gt;6. 样式表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2875778&quot;&gt;6.1. CSS2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876470&quot;&gt;6.2. XSLT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876923&quot;&gt;6.3. XPath&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2877015&quot;&gt;6.3.1. 匹配模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877227&quot;&gt;6.3.2. XPath轴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877462&quot;&gt;6.3.3. 谓词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877773&quot;&gt;6.3.4. XPath表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877892&quot;&gt;6.3.5. XPath函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877959&quot;&gt;6.4. XLink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878164&quot;&gt;7. 分析XML&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2878286&quot;&gt;7.1. 分析器工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878314&quot;&gt;7.2. Unicode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878622&quot;&gt;A. 附录&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2878629&quot;&gt;A.1. 标记语言的历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878688&quot;&gt;A.2. XML相关技术名词解释&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878814&quot;&gt;A.3. XML应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-1-XML简介&quot;&gt;&lt;a href=&quot;#Chapter-1-XML简介&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1. XML简介&quot;&gt;&lt;/a&gt;Chapter 1. XML简介&lt;/h2&gt;&lt;p&gt;XML(eXtensible Markup Language，可扩展标记语言)是SGML的一个子集，但比SGML简单，用以创建可相互转换的结构化文本文档和数据文档。下面说明一下与XML相关的一些概念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SGML(Standard Generalized Markup Language，标准通用标记语言)，由于IBM公司的三位先驱者Charles GoldFarb、Edward Mosher和Raymond Lorie创立，主要作为大型文档的编制工具。DTD(Document Type Definition，文档类型定义)是SGML文档的核心，它定义了SGML文档必须遵循的一组语法规则。由于它很复杂，所以只是在一些大公司或大项目中使用。直到HTML面世，它还是默默无闻。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML(Hypertext Markup Language，超文本标记语言)，它是在SGML框架中通过DTD定义的标记语言，是SGML的一种应用。它由于结构简单，容易学习而迅速普及，每个人都能很快地建立自已的页面，HTML造就了现时Internet上无数的信息资源。HTML标记只描述文档的外观，而不描述文档的内容本身–里面有什么。HTML是不明白网页内容的，这样就造成了内容搜索的差异和不确定性。另一个问题是，HTML不是可扩展的，这意味着没有一种方便的途径来扩展标记。每一个新标记的引入都会造成系统的不一致性和对标准的修订。这就是为什么现在我们用不同的浏览器浏览同一个网站时表现效果会有差异。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XHTML(eXtensible Hypertext Markup Language，可扩展超文本标记语言)，它是按XML规则编写的HTML，由于有统一的规则约束，所以它不会出现如HTML一样的不规范、不一致性问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML(eXtensible Markup Language，可扩展标记语言)，继承了SGML的优点，但又没有了SGML的复杂性。XML专门为WEB应用而设计，和HTML不同，它是一种元标记语言(meta-markup language)，也就是说它没有一套能够适用于各个领域中所有用户的固守的标签和元素，相反，它允许开发者根据自已的需要定义自已的元素，XML中的X(eXtensible)就是说明了这一点。它的特点有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;XML使用Unicode字符集，可生成英文、中文、希腊文或梵文等多种语言。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可将多个来源(包括其他XML文档和二进制文件)汇合进一个XML文档。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可利用DTD或Schema(模式）管理一致性问题。DTD主要用于文档型文档，Schema主要用数据型文档。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;具有很好的扩展性，可定义自已的元素和属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过XML可从关系数据库管理系统中提取数据到结构化文档。它还被设计成可对各种数据对象进行操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在一个设计良好的XML应用中，XML标记不涉及文档如何显示，只表示文档的结构。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;XML被设计用来存储、支持和交换数据，而不是用来显示数据的。通常，XML被用于数据交换，而不是数据存储。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;元数据，定义数据的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标记语言是一种定义文档的格式语言。SGML、XML、XHML、HTML都属标记语言。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XML文档是什么？它有时是一个文件，有时是关系数据库中的一条记录，有时是由Object Request Broker(对象请求代理程序)传送的一个对象，有时是到达网络接口的一个字节流。XML文档可使不同系统、不同平台的数据实现统一接口，这就是XML真正的威力所在。下面列举几个使用XML的领域：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文档设计和管理，可利用XML维护公司的文档资料。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web开发，利用XHTML和XSLT实现的Web页面扩展性更好，更容易维护。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库应用和程序开发，可从数据库中提取数据并生成XML文档，实现信息的跨平台、跨系统沟通。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定义其它语言，WML和WAP就是用通过XML建立的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XML不是什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;XML只是一种标记语言，不是一种编程语言。不存在一种编译器，把XML文档转化成可执行二进制代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML不是一种网络传输协议，但通过网络协议传输的数据格式则可以是XML格式的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML不是数据库，不能替代Oracle或MySQL这类的关系数据库管理系统。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-2-XML语法&quot;&gt;&lt;a href=&quot;#Chapter-2-XML语法&quot; class=&quot;headerlink&quot; title=&quot;Chapter 2. XML语法&quot;&gt;&lt;/a&gt;Chapter 2. XML语法&lt;/h2&gt;&lt;p&gt;创建一个简单的index.xml文档：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml-stylesheet type=&amp;quot;text/xsl&amp;quot; href=&amp;quot;basic.xsl&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;basic&amp;gt;Hello World&amp;lt;/basic&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面创建一个名为basic.xsl的XML样式表(XSL)，以便在浏览器中显示XML文档内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;xsl:template match=&amp;quot;/&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;title&amp;gt;a basic stylesheet&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;xsl:value-of select=&amp;quot;/&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着在浏览器中打开index.xml文档，则可显示“Hello World”。上面两个文档都是合法的XML文件，具体的语法规则下面会详细介绍，上例可先给大家一个感性的认识。&lt;/p&gt;
&lt;p&gt;合法的XML文档可有种意思，一个是良构文档(well-format)，即符合XML规则书写的文档；另一种是有效文档，是已验证符合一个DTD的文档。&lt;/p&gt;
&lt;h2 id=&quot;2-1-基本语法规则&quot;&gt;&lt;a href=&quot;#2-1-基本语法规则&quot; class=&quot;headerlink&quot; title=&quot;2.1. 基本语法规则&quot;&gt;&lt;/a&gt;2.1. 基本语法规则&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;XML是区分大小写的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有元素的起始和结束标注必须成对出现，且要正确嵌套；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果使XML说明，则它必须是XML文档的第一行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;元素属性必须用引号引起来，单、双引号都可以，但必须成对出现。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;basic attr=&amp;quot;1.0&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;basic attr=&amp;apos;1.0&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML命名规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;XML名以下划线或字母开始；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML名可包含字母、数字、句点、下划线和冒号；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML名不能包含空格；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML名不能以数字开始，但可包含数字；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML名区分大小写。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保留标记字符，如果要在XML中显示&amp;lt;或&amp;amp;之类的标记，就要使用字符的实体形式，XML中有五种预先定义了的实体：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;lt;          表示&amp;amp;lt;字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;gt;          表示&amp;amp;gt;字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;amp;         表示&amp;amp;字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;apos;        表示&amp;apos;字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;quot;        表示&amp;quot;字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们也可用ENTITY自定义实体：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY linux &amp;quot;linux is a very good system&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这样我们可用&amp;amp;linux;来调用。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML文档内容中的空格是有意义的，在转换后会保留。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;空元素以&amp;lt;开始并以/&amp;gt;结束，如&amp;lt;br/&amp;gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-2-良构XML文档和有效XML文档&quot;&gt;&lt;a href=&quot;#2-2-良构XML文档和有效XML文档&quot; class=&quot;headerlink&quot; title=&quot;2.2. 良构XML文档和有效XML文档&quot;&gt;&lt;/a&gt;2.2. 良构XML文档和有效XML文档&lt;/h2&gt;&lt;p&gt;符合XML语法规则的XML文档称为良构文档，这些规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;应当只有一个父标志，由父标志派生所有其它子标志，在一个文档中不能存在多个父标志。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;嵌套元素应按正确的顺序开始和结束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子标志应在父标志完成前关闭。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性值应放在双引号中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过某个DTD或Schema验证的文档称为有效XML文档。&lt;/p&gt;
&lt;h2 id=&quot;2-3-XML文档的组成&quot;&gt;&lt;a href=&quot;#2-3-XML文档的组成&quot; class=&quot;headerlink&quot; title=&quot;2.3. XML文档的组成&quot;&gt;&lt;/a&gt;2.3. XML文档的组成&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;XML声明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;version，定义XML规范的版本号，到现在为止，只有一个版本号1.0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;encoding，指定文档的编码系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;standalone，定义文档是独立的还是需要装入其他元素才能正确分析。如果XML文档没有外部实体或DTD，则可以设置为no，否则设置为yes。可用该值提高性能：如果为no，则可提高处理速度；如果设置为yes，则首先要分析文档，确定需要其他哪些文件，然后才能完全分析文档。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根元素，每篇XML文档都需要有且只能有一个根元素。由元素是文档的第一个元素，包含其它所有元素。下例的portal就是根元素，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;name&amp;gt;jims&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;email&amp;gt;&amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性，每个元素都可以设置一个或多个属性，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;name id=&amp;apos;1&amp;apos;,sex=&amp;quot;male&amp;quot;&amp;gt;Jims&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;元素和属性都可以表示信息，什么时候使用元素，什么时候使用属性呢？属性信息表现能力有限，它只能表示字符串。所以当需灵活表示信息时应该使用元素。一般把信息主体放到元素中，属性只放一些注释或额外的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CDATA部份，它用&amp;lt;![CDATA[和]]&amp;gt;表示，它们之间的数据作为原始字符显示，唯一不能出现的标志是]]&amp;gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注释，注释是很重要，不论是在编写程序和文档时，所以XML也提供了注释功能，以&amp;lt;!–开头–&amp;gt;结尾的一对区间为注释。在以–&amp;gt;结束之前，不能出现“–”号，“—”更不允许。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;处理指令，处理指令以&amp;lt; 开头以 &amp;gt;结尾。如PHP处理指令可写成，&amp;lt; php … &amp;gt;。处理指令是标记，而不是元素。因此，与注释一样，处理指令可出现在XML文档的标签外的任何位置，包括根元素之前或之后。最常见的处理指令是，xml-stylesheet样式表指令，它会告诉浏览器在显示文档时应用什么样式表。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml-stylesheet href=&amp;quot;sample.css&amp;quot; type=&amp;quot;text/css&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;name&amp;gt;...&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-4-XML文档树&quot;&gt;&lt;a href=&quot;#2-4-XML文档树&quot; class=&quot;headerlink&quot; title=&quot;2.4. XML文档树&quot;&gt;&lt;/a&gt;2.4. XML文档树&lt;/h2&gt;&lt;p&gt;XML文档是一种结构化的文档，可用树的形式表示出来。树是一种由节点和分支组成的简单结构，两个节点间由分支连接。上端的节点称为父节点，下端的节点称为子节点。一个节点如果没有父节点，则称为树的根节点(根)，每个树必须有且只能有一个根节点。一个节点如果没有子节点，则称为树的叶节点。只有一个节点的树也是允许的。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-3-DTD&quot;&gt;&lt;a href=&quot;#Chapter-3-DTD&quot; class=&quot;headerlink&quot; title=&quot;Chapter 3. DTD&quot;&gt;&lt;/a&gt;Chapter 3. DTD&lt;/h2&gt;&lt;p&gt;由于XML可自定义标签，所以每个人定义的标签集都会不同，如果没有一套标准来规定标签的定义原则，则应用程序就不能对XML文档进行处理。解决该问题的方案采用DTD，DTD(Document Type Definition，文档类型定义)，用于定义XML文档的编写规则。如哪些元素可出现在文档中，及元素的内容和属性的要求等。应用程序会利用这个DTD对文档进行检验，符合DTD约束规则的XML文档称之为有效文档，可以进行下一步处理，否则会报错，应用程序可捕获该错误进行相应的异常处理。检验过程是可选，这要视具体应用而定。&lt;/p&gt;
&lt;h2 id=&quot;3-1-文档类型声明&quot;&gt;&lt;a href=&quot;#3-1-文档类型声明&quot; class=&quot;headerlink&quot; title=&quot;3.1. 文档类型声明&quot;&gt;&lt;/a&gt;3.1. 文档类型声明&lt;/h2&gt;&lt;p&gt;要使用DTD进行有效性检验，就要使用文档类型定义声明指定DTD。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; standalone=&amp;quot;no&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE portal SYSTEM &amp;quot;http://www.w3c.com/dtd/portal.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;name&amp;gt;Jims&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;email&amp;gt;Jims@163.com&amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;email&amp;gt;Jims@21cn.com&amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;文档类型声明位于XML声明之后，根元素之前。如果dtd文档位于本机，可用路径名直接指出dtd文档的位置。portal.dtd的内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT portal (name,email*)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT email (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的内容也可直接写到XML文档内，这种dtd声明方式叫内部dtd子集，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; standalone=&amp;quot;no&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE portal [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT portal (name,email*)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT email (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;name&amp;gt;Jims&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;email&amp;gt;Jims@163.com&amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;email&amp;gt;Jims@21cn.com&amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/portal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果dtd位于XML文档外，则叫外部dtd子集。我们可以结合内外dtd，共同组成一个dtd来为XML文档作验证。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE portal SYSTEM &amp;quot;external.dtd&amp;quot; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT portal (name,email*)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT email (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，使用内外dtd时，这两个dtd要互相兼容，不能有冲突。&lt;/p&gt;
&lt;h2 id=&quot;3-2-元素声明&quot;&gt;&lt;a href=&quot;#3-2-元素声明&quot; class=&quot;headerlink&quot; title=&quot;3.2. 元素声明&quot;&gt;&lt;/a&gt;3.2. 元素声明&lt;/h2&gt;&lt;p&gt;上节文档类型声明中的每一项都是元素声明，定义了每个元素的约束。元素声明的格式为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT element_name (content_model)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有效文档中使用的每个元素都必须在文档的DTD中用元素声明进行声明。element_name可是任何合法的XML名称，content_model(内容模型)指定元素可以或必须包含的子元素以及子元素的顺序。下面具体介绍内容模型的内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;#PCDATA，规定元素只包含已析的字符数据。下面声明指出一个name元素可以包含文本，但不能划分为独立的area_code、number和extension元素：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子元素，可指明元素的子元素。下面声明表示name元素必须包含且只包含一个desc元素。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (desc)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可用逗号为分隔符，指明多个子元素。并且子元素出现的次序必须按定义时的顺序。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (id,desc)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;name元素的id子元素必须在desc子元素前面，否则验证会出错，该文档不是一个有效的XML文档。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;下面这个文档是有效的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;id&amp;gt;1&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;desc&amp;gt;dtd test&amp;lt;/desc&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;下面这个文档是无效的，顺序颠倒了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;desc&amp;gt;dtd test&amp;lt;/desc&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;id&amp;gt;1&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;下面的文档也是无效的，有多余的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;id&amp;gt;1&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;desc&amp;gt;dtd test&amp;lt;/desc&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;date&amp;gt;2005/01/31&amp;lt;/date&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子元素的个数，我们可通过正则表达式来规定子元素的个数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;，允许零个或一个该元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*，允许零个或多个该元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;+，允许一个或多个该元素&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面我们可利用这些符号规定id子元素必须出现，且只能出现一次，而desc子元素可选。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (id，desc*)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据上面的声明，下面的name元素都是有效的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;id&amp;gt;1&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;desc&amp;gt;dtd test&amp;lt;/desc&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;id&amp;gt;2&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;id&amp;gt;3&amp;lt;/id&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;desc&amp;gt;dtd test&amp;lt;/desc&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;desc&amp;gt;another test&amp;lt;/desc&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可选项(|)，选项是一个参数列表，每个参数间用“|”分隔，代表能且只能选一个子元素。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT choice (good | bad)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上例的choice元素可选一个good子元素，或bad子元素，且只能从选一个。可选的参数列可以多项，不限于两项。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT choice (one | two | three | four)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;小括号，可用小括号把选项括起来，以表达更丰富的意思，如我们想表示choice元素必须包含一个good子元素，并且必须包含ok子元素或bad子元素的一个。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT choice (good，(ok|bad))&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;混合内容，在一些文档中，一个元素可能既包含子元素，也包含字符串，这些内容叫混合内容。可用以下方式表示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!EMEMENT description (#PCDATA | term)* )&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该声明表示description元素可包含已析的字符串和term子元素，且允许出现零次或多次，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a &amp;lt;term&amp;gt;dtd&amp;lt;/term&amp;gt; test.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;#PCDATA必须在第一位，可选的子元素可任意多项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;空元素，某些元素不用包含任何内容，称之为空元素。写成以/&amp;gt;结束的独立标签。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT image EMPTY&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;image src=&amp;quot;http://www.xml.com/dtd.jpg&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ANY，允许元素内包含任意内容。该选项在dtd测试时很有用，在生产系统中尽量不要使用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT page ANY&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-3-属性声明&quot;&gt;&lt;a href=&quot;#3-3-属性声明&quot; class=&quot;headerlink&quot; title=&quot;3.3. 属性声明&quot;&gt;&lt;/a&gt;3.3. 属性声明&lt;/h2&gt;&lt;p&gt;一个有效的XML文档，必须对元素的属性进行声明。使用ATTLIST声明来完成，一个ATTLIST可以为一个元素类型声明多个属性。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST image src CDATA #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上例声明image元素必须有一个src属性，该属性的值是字符数据。可用ATTLIST声明为一个元素声明多个属性，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST image src    CDATA #REQUIRED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                width  CDATA #REQUIRED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                height CDATA #REQUIRED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                alt    CDATA #IMPLIED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述声明指出src、width、height属性是必须的，alt属性是可选的。&lt;/p&gt;
&lt;h3 id=&quot;3-3-1-属性类型&quot;&gt;&lt;a href=&quot;#3-3-1-属性类型&quot; class=&quot;headerlink&quot; title=&quot;3.3.1. 属性类型&quot;&gt;&lt;/a&gt;3.3.1. 属性类型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CDATA类型属性值可包含任意文本字符串。DTD不能指定属性为一个整数或一个日期，Schema能提供更为强大的数据类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NMTOKEN类型属性值是一个XML名称记号。XML名称记号与XML名称类似，但XML名称记号允许所有的字符作为名称的开始字符，而XML名称的第一个字母必须是字母、表意字符和下划线。因此10，.bashrc是合法的XML名称标记，但不是合法的XML名称。每个XML名称都是一个XML名称标记，然而XML名称标记不全是XML名称。如果属性包含1990，2005之类的整数，则应该指定其类型为NMTOKEN。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT person birthday NMTOKEN #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NMTOKENS类型属性包含一个或多个用空白分隔的XML名称记号。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;person dates=&amp;quot;02-01-2005 03-01-2005 05-01-2005&amp;quot;&amp;gt;person&amp;lt;/person&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对应的声明应为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST person dates NMTOKENS #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一方面，对01/02/2005这样的形式不能使用该声明，因为其中的正斜杠不是合法的名称字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;枚举声明，枚举不用关键字。直接列举所有的值，中间用竖线分隔。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST date month(January | February | March | April | May | June | July | August | September | October | November | December) #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;针对上述声明，date元素的month属性可选十二个月份的中一个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ID类型的属性必须包含一个XML名称，而且该名称在文档中是独一无二的。ID属性可为元素分配一个唯一的标识符。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST name card_id ID #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于数字不是合法的XML名称，所以ID编号不能以数字开头，解决办法是在前面加下划线或字母。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IDREF类型的属性指向文档中某元素的ID类型的属性。因此，它必须是一个XML名称，它的作用是当简单的包含关系不能满足要求时在元素间建立多对多关系。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;project project_id=&amp;quot;p1&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;goal&amp;gt;deploy linux&amp;lt;/goal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;team_member person_card_id=&amp;quot;c123&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;person card_id=&amp;quot;c123&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;name&amp;gt;linuxsir&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;assignment project_project_id=&amp;quot;p1&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;project元素的project_id属性和person元素的card_id属性应该是ID类型。team_member元素的person_card_id属性和assignment元素的project_project_id属性是IDREF类型。对应的声明如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST person  card_id    ID #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST project project_id ID #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST team_member person_card_id     IDREF #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST assignment  project_project_id IDREF #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IDREFS类型的属性包含一个XML名称列表。名称间用空白间隔，且每个名称都是文档中某个元素的ID。当某个元素需要引用多个其他元素时使用该元素。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST person card_id    ID     #REQUIRED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 assignment IDREFS #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST project project_id ID     #REQUIRED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 team        IDREFS #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对应的文档可写成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;project project_id=&amp;quot;p1&amp;quot; team=&amp;quot;c123&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;gold&amp;gt;deploy linux&amp;lt;/gold&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;person card_id=&amp;quot;c123&amp;quot; assignment=&amp;quot;p1&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;name&amp;gt;Linuxsir&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ENTITY类型的属性包含在DTD的其它位置声明的未析实体的名称中。如movie元素可能有一个标识激活时播放mpeg或rm文件的实体属性：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST movie src ENTITY #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果DTD声明了一个名为play的未析实体，则此movie元素可用于在XML文档中嵌入视频文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;movie src=&amp;quot;play&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ENTITIES类型的属性包含在DTD的其它位置声明的多个未析实体名称，其间用空白隔开。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST slide_show slides ENTITIES #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果DTD声明了未析实体slide1、slide2、slide3、…，则可使用slide_show元素在XML文档中嵌入幻灯片。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;slide_show slides=&amp;quot;slide1 slide2 slide3&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NOTATION类型的属性包含在文档的DTD中声明的某个记法的名称。该属性类型较少用。理论上，可以使用该属性使某些特殊元素与类型相关联，下例声明为不同的图像类型定义了4个记法，然后规定每个image元素都必须从中选择一种type属性。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!NOTATION gif SYSTEM &amp;quot;image/gif&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!NOTATION tiff SYSTEM &amp;quot;image/tiff&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!NOTATION jpeg SYSTEM &amp;quot;image/jpeg&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!NOTATION png SYSTEM &amp;quot;image/png&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST image type NOTATION (gif | tiff | jpeg | png) #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每个image元素的type属性的值可以为gif，tiff，jpeg和png四个值中的一个。该属性比枚举类型稍具优势，因为记法的实际MIME媒体类型在理论上是可用的。由于斜杠在XML名称中不是一个合法字符，所以枚举类型不能指定image/png或image/jpeg作为允许值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-3-2-属性缺省值&quot;&gt;&lt;a href=&quot;#3-3-2-属性缺省值&quot; class=&quot;headerlink&quot; title=&quot;3.3.2. 属性缺省值&quot;&gt;&lt;/a&gt;3.3.2. 属性缺省值&lt;/h3&gt;&lt;p&gt;每个ATTLIST声明除了要提供一种数据类型外，还要声明属性的缺省行为。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;#IMPLIED，属性可选。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;#REQUIRED，属性必须有。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;#FIXED，属性是常量，不能更改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST person name CDATA #FIXED &amp;quot;linuxsir&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Literal，作为一个引用字符串的实际缺省值。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST person name NMTOKEN &amp;quot;linuxsir&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果没有显示指明person元素的name属性，则该值为linuxsir。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-4-实体&quot;&gt;&lt;a href=&quot;#3-4-实体&quot; class=&quot;headerlink&quot; title=&quot;3.4. 实体&quot;&gt;&lt;/a&gt;3.4. 实体&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用ENTITY声明定义实体。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY linux &amp;quot;linux is a very good system&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用&amp;amp;linux;可引用该字符串&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可定义一个外部实体，引用外部XML文档&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY linux SYSTEM &amp;quot;/home/linux/test.xml&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用&amp;amp;linux;可引用/home/linux/test.xml文档&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;外部实体没有XML声明，但可以有文本声明，两者很类似，主要区别是文本声明必须有编码声明，而版本信息则是可选的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;gb2312&amp;quot; &amp;gt;    是一个合法的文本声明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml encoding=&amp;quot;gb2312&amp;quot; &amp;gt;                  也是一个合法的文本声明&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不是所有的数据都是XML。如jpeg照片，mpeg电影等。XML建议使用外部未析实体作为在文档中嵌入这些内容的机制。DTD为包含非XML数据的实体指定一个名称和URI。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY movie SYSTEM &amp;quot;/home/linux/test.avi&amp;quot; NDATA avi&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于数据不是XML格式，所以使用NDATA声明指定数据类型。avi是在NOTATION中定义的MIME媒体类型。在XML中嵌入未析实体很复杂且不规范，尽量不要使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;参数实体可定义一组通用的实体，在文档中可通过该参数实体来引用实体。参数实体的定义与通用实体定义类似，只是中间多了一个%，引用时也是用%代码&amp;amp;。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY % person &amp;quot;name,address,postcode&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;引用方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%person;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这样会用name,address,postcode代替参数实体%person;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通常DTD都比较大，DocBook的DTD长达11000多行，如果把它存放在单一文件中，管理和维护起来都非常困难。我们可以使用外部DTD子集，把一个大的DTD按功能分成不同的功能块，存放在不同的文件中。再通过外部参数实体声明引入当前DTD中，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;定义参数实体引用外部names.dtd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY % names SYSTEM &amp;quot;names.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;调用外部DTD子集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%names;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用IGNORE关键字可注释声明，如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;![IGNORE[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;!ELEMENT note (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然了，使用&amp;lt;!– 注释 –&amp;gt;的方式也是一样的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;INCLUDE关键字表示DTD中的确在使用给定的声明，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;![INCLUDE[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;!ELEMENT note (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;单从该声明来看，有没有使用INCLUDE效果都一样，但如果组合INCLUDE和IGNORE，可实现DTD功能的选择。我们可定义一个参数实体：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY % note_allowed &amp;quot;INCLUDE&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后使用参数实体引用而不使用关键字：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;![%note_allowed;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;!ELEMENT note (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按上述操作，元素声明是有效的，但我们也可以把参数实体%note_allowed重新定义为IGNORE，这样，该元素声明就无效了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-4-XML名称空间&quot;&gt;&lt;a href=&quot;#Chapter-4-XML名称空间&quot; class=&quot;headerlink&quot; title=&quot;Chapter 4. XML名称空间&quot;&gt;&lt;/a&gt;Chapter 4. XML名称空间&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;XML名称空间表示XML名称的使用范围，因为XML可自定义元素标签，所以有不同XML应用间XML名称重名的机会是很大的。如果没有一种方法来区分不应用的名称，就会造成混乱。XML名称空间就是为了解决这个问题而设计的。通过XML名称空间，我们可以区分来自不同的XML应用的具有相同名称的元素和属性。可以将来自单一XML应用的相关元素和属性集合在一起，方便软件识别和处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;名称空间由前缀和本地部分组成，中间用冒号分隔。前缀标识元素或属性的所在名称空间，本地部分标识名称空间中的某个元素或属性。整个名称也称为限定名称(qualified name)。前缀可以用除XML(大小写任意组合)三个字母外的任何合法的XML名称字符组成。每个限定名称中的前缀都必须与唯一的一个URI关联。带有相同URI关联的前缀的名称属于同一名称空间。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/TR/REC-rdf-syntax#&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;rdf:Description about=&amp;quot;http://www.example.com/test.xml&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;title&amp;gt;example&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;author&amp;gt;linuxsir&amp;lt;/author&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上例rdf:RDF元素的xmlns:rdf属性将前缀rdf绑定到名称空间 &lt;a href=&quot;http://www.w3.org/TR/REC-rdf-syntax#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3.org/TR/REC-rdf-syntax#&lt;/a&gt; 。属性xmlns:rdf为rdf:RDF元素及其子元素声明了前缀rdf。RDF处理器将把rdf:RDF和rdf:Description作为RDF元素，因为两个元素都具有与RDF规范定义的某个URI相绑定的前缀。处理器不会认为title，author等元素为RDF元素，因为它没有绑定到相同URI的rdf前缀。&lt;/p&gt;
&lt;p&gt;前缀一般在使用该前缀的最上层元素中定义。在下层元素中也可定义不同的前缀：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/TR/REC-rdf-syntax#&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;rdf:Description xmlns:dc=&amp;quot;http://www.w3.org/dc/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  about=&amp;quot;http://www.example.com/test.xml&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;dc:title&amp;gt;example&amp;lt;/dc:title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;dc:author&amp;gt;linuxsir&amp;lt;/dc:author&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不带前缀的属性，如about，不属于任何的名称空间。如xlink:type和xlink:href属性属于xlink名称空间，当然，前提是你要先把xlink绑定到一个URI。URI不必须是一定存在的http链接，它只是一种表示的方法，以区分不同的名称空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过将无前缀的xmlns属性附加到根元素中，可以指定不带前缀的元素及所有不带前缀的子元素属于某个名称空间。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;svg xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;ellipse rx=&amp;quot;110&amp;quot; ry=&amp;quot;130&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;rect x=&amp;quot;4cm&amp;quot; y=&amp;quot;1cm&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里，虽然所有元素都没有前缀，但它都同属一个名称空间。但属性属不同名称空间，因为默认名称空间只应用于元素。默认名称空间在子元素中也用相同的方法重新设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果名称空间只用来识别来自某种XML应用的元素和属性，而不是用来区分具有相同名称的不同元素，则可在DTD的元素中定义一个固定的xmlns属性，而不需要文档中定义。定义方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST svg xmlns CDATA #FIXED &amp;quot;http://www.w3.org/svg/&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在定义DTD时，需要使用名称空间前缀的在定义时也要把前缀写到DTD定义里，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT xlink:name (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用参数实体引用来定义名称空间前缀可方便DTD文档的维护，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY % prefix &amp;quot;xlink&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY % colon &amp;quot;:&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着，利用该参数实体名称定义更多的参数实体引用，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY % xlink-title &amp;quot;%prefix;%colon;title&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ENTITY % xlink-author &amp;quot;%prefix;%colon;author&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，如果需更改前缀，只需修改一个地方就可以了，不用整篇文档修改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT %xlink-title;  (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT %xlink-author; (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;不能在ATTLIST和ELEMENT声明中直接使用%prefix;和%colon；，因为在另一个实体的外部使用这些参数实体时，XML解析器会在实体替换文本的两边添加额外的空格。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-5-XHTML&quot;&gt;&lt;a href=&quot;#Chapter-5-XHTML&quot; class=&quot;headerlink&quot; title=&quot;Chapter 5. XHTML&quot;&gt;&lt;/a&gt;Chapter 5. XHTML&lt;/h2&gt;&lt;p&gt;XHTML是W3C推荐的一种标准，它定义了一种与XML兼容的HTML版本。XHTML文档是一个有效的XML文档，所以编写格式比HTML严格。如果需从HTML文档转换成XHTML文档，需作以下更改：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在XHTML中不允许省略结束标签，所以需补齐缺少的标签。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;元素需按正确的顺序嵌套。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有元素和属性的名称都采用小写。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性值需添加引号，如&amp;lt;p align=”center”&amp;gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有属性都需有属性值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;采用&amp;amp;和&amp;lt;等的实体形式表示这些字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确保文档有单一根元素，最好用html。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;像&amp;lt;hr&amp;gt;这样的空元素要改成&amp;lt;hr/&amp;gt;或&amp;lt;hr&amp;gt;&amp;lt;hr/&amp;gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注释应由&amp;lt;! 注释 &amp;gt;的形式改成&amp;lt;!– 注释 –&amp;gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文档编码应采用UTF-8或UTF-16，或者添加XML声明指定文档的编码方式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需去掉非标准的元素。如：marguee。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加一个DOCTYPE声明，用PUBLIC来指向XHTML的三种DTD中的一种。分别是Strict、Transitional和Frameset，一般使用Strict。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Strict(严格型)，W3C推荐的XHTML形式。不包括一些非标准的元素和属性，如applet和center等。声明方式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Transitional(过渡型)，一种不太严格的XHTML格式，可使用一些非标准的元素和属性，如applet和bgcolor等。声明方式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Frameset(框架型)，与过渡型DTD类似，允许使用与框架相关的元素，如frameset和iframe。声明方式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文档的根元素必须具有xmlns属性，标识缺省的名称空间提 &lt;a href=&quot;http://www.w3.org/1999/xhtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3.org/1999/xhtml&lt;/a&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是一个标准的XHTML文档的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html xmlns:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;meta http-equiv=&amp;quot;Content-type&amp;quot; content=&amp;quot;text/html; charset=gb2312&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;title&amp;gt;xhtml example&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由HTML转到XHTML是一种枯燥而乏味的工作，现在有一种叫tidy的开源工具可帮我们完成大部份的工作，它是一个C程序，使用方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% tidy --output-xhtml yes test.html test.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;XHTML 1.1把XHTML的三种DTD分成独立模块。我们可根据实际情况包含或省去某些模块。这些模块是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Structure Module(结构模块)—&amp;gt;%xhtml-struct.module;，包含HTML文档主要的元素，如：html、head、title和body。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Text Module(文本模块)—&amp;gt;%xhtml-text.module;，包含文本的基本元素和其内联元素，如：h1、h2、…、strong、span等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hypertext Module(超链接模块)—&amp;gt;%xhtml-hypertext.module;，包含用于链接的元素，如：a元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;List Module(列表模块)—&amp;gt;%xhtml-list.module;，包含用于列表的元素，如：dl、dt、dd、ul、ol和li。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applet Module(applet模块)—&amp;gt;%xhtml-applet.module;，Java所需要元素，如：applet和param。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Presentation Module(表示模块)—&amp;gt;%xhtml-pres.module;，面向表示的标记：b、big、hr、I、small、sub、sup和tt。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Edit Module(编辑模块)—&amp;gt;%xhtml-edit.module;，用于修正的元素，如：del和ins。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bidirectional Text Module(文本方向模块)—&amp;gt;%xhtml-bdo.module;，用于指定文本阅读的方向，如bdo元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic Forms Module(基本表单模块)—&amp;gt;%xhtml-basic-form.module;，用于HTML 3.2的表单元素，如：form、input、select、option和textarea。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Forms Module(表单模块)—&amp;gt;%xhtml-form.module;，用于HTML 4.0的表单元素，如：form、input、select、option、textarea、button、fieldset、label、legend和optgroup。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic Tables Module(基本表格模块)—&amp;gt;%xhtml-basic-table.module;，基本的表格元素，如：table、caption、th、tr和td。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Table Module(表格模块)—&amp;gt;%xhtml-table.module;，安全功能的表格支持，如：table、caption、th、tr、td、col、colgroup、tbody、thead和tfoot。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Image Module(图像模块)—&amp;gt;%xhtml-image.module;，包含img元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Client-side Image Map Module(客户端图像映像模块)—&amp;gt;%xhtml-csismap.module;，包含map和area元素以及支持客户端图像映像所需要的元素的属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Server-side-Image Map Module(服务器端图像映像模块)—&amp;gt;%xhtml-ssismap.module;，该模块没有添加新元素，但对img元素添加了一个ismap属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Object Module(对象模块)—&amp;gt;%xhtml-object.module;，用于在网页中嵌入可执行内容，如：java程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Param Module(参数模块)—&amp;gt;%xhtml-param.module;，网页中可执行内容中传递参数的param元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Frames Module(框架模块)—&amp;gt;%xhtml-frames.module;，包含实现框架所需的元素，如：frame、frameset和noframes。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Iframe Module(内联框架模块)—&amp;gt;%xhtml-iframe.module;，包含内联框架的iframe元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Intrinsic Events(固有事件模块)—&amp;gt;%xhtml-events.module;，支持如onSubmit和onFocus等脚本的属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Meta-information Module(元信息模块)—&amp;gt;%xhtml-meta.module;，包含meta元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scripting Module(脚本模块)—&amp;gt;%xhtml-script.module;，支持JavaScript等脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stylesheet Module(样式表模块)—&amp;gt;%xhtml-style.module;，用于定义CSS的style元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Link Module(链接模块)—&amp;gt;%xhtml-link.module;，指定外部文件，如样式表、库等关系的link元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Base Modue(基模块)—&amp;gt;%xhtml-base.module;，包含base元素，指定解析相对URL所参照的基URL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Target Module(目标模块)—&amp;gt;%xhtml-target.module;，用于指定目标框架或框架中某个窗口的target属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Style Attribute Module(样式属性模块)—&amp;gt;%xhtml-inlstyle.module;，将CSS样式应用于文档中单个元素的style属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Name Identification Module(名称标识模块)—&amp;gt;%xhtml-nameident.module;，name属性是id属性的早期版本，现在不推荐使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Legacy Module(传统模块)—&amp;gt;%xhtml-legacy.module;，不推荐使用的元素和属性，如：basefont、center、fonts、strike和u元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ruby Module(Ruby模块)—&amp;gt;%xhtml-ruby.module;，东亚文本中用于将少量文本放于正文文本旁边的ruby、rbc、rtc、rb、rt和rp元素，一般用来指示发音。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-6-样式表&quot;&gt;&lt;a href=&quot;#Chapter-6-样式表&quot; class=&quot;headerlink&quot; title=&quot;Chapter 6. 样式表&quot;&gt;&lt;/a&gt;Chapter 6. 样式表&lt;/h2&gt;&lt;p&gt;样式表可帮我们解释XML文档中各元素的具体意思，所以通过样式表可直接在浏览器上显示XML文档。目前主要的样式表语言有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CSS1(Cascading Stylesheets Level 1，层叠式样式表1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CSS2(Cascading Stylesheets Level 2，层叠式样式表2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XSLT(XSL Transformations 1.0 XSL 转换 1.0)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在XML文档在序言部分通过xml-stylesheet处理指令可指定关联的样式表。xml-stylesheet指令必须有一个href属性和type属性。href指向样式表的URL，type指定样式表的MIME类型：对CSS为text/css，对于XSLT为text/xml或application/xml。下面是一个简单的使用样式表的XML文档：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml-stylesheet href=&amp;quot;test.css&amp;quot; type=&amp;quot;text/css&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除以上两个必须的属性外，还有4种可选属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;media，标识该样式应用于什么媒体，如报纸(paper)、计算机监视器(screen)、电视(tv)或所有(all)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;charset，指明样式表采用字符集编码方式，如：utf-8。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alternate，指明是否有可选的样式表，默认为no，表明是主样式表，如果为yes，则是备用样式表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;title，在有alternate的前提下，title用于指定不同样式表的标题。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml-stylesheet href=&amp;quot;big.css&amp;quot; type=&amp;quot;text/css&amp;quot; alternate=&amp;quot;yes&amp;quot; title=&amp;quot;Large fonts&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml-stylesheet href=&amp;quot;small.css&amp;quot; type=&amp;quot;text/css&amp;quot; alternate=&amp;quot;yes&amp;quot; title=&amp;quot;Small fonts&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml-stylesheet href=&amp;quot;medium.css type=&amp;quot;text/css&amp;quot; title=&amp;quot;Normal fonts&amp;quot; &amp;gt;       #默认的主样式表&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;样式表现在已成为Web应用中的一个关键技术，它的作用主要体现在以下三个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设计一个样式表可以应用于多个文档。样式表可以存在于XML文档外，XML文档可通过链接使用样式表。这意味着如果你有几千个文档，都可以链接到同一个样式表中，改变一个样式表等于改变几千个文档的显示效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现内容和表现的分离，增强文档的一致性和可维护性。通过单一的样式表，实现所有文档显示的一致。如果显示样式有变动，我们只需维护有限的几个样式表就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现一个文档，多个样式。通过样式表，可把一篇文档以HTML形式、PDF形式或文本形式显示出来。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-1-CSS2&quot;&gt;&lt;a href=&quot;#6-1-CSS2&quot; class=&quot;headerlink&quot; title=&quot;6.1. CSS2&quot;&gt;&lt;/a&gt;6.1. CSS2&lt;/h2&gt;&lt;p&gt;CSS2是层叠样式表，它是一种排版技术，能让元素按特定的样式显示，如字体大小，颜色、布局等。在网页中有三种使用方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用&amp;lt;style&amp;gt;标记声明，如&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div &amp;#123;font-size: 12pt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div &amp;#123;color: blue;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在元素中用style属性指定，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div style=&amp;quot;font-size: 12pt;color: blue&amp;quot;&amp;gt;CSS测试&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用LINK标记链接一个外部CSS文件，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;mycss.css&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按作用域来分，有三类的样式表，分别是网页解释器样式表、作者样式表和浏览者样式表。网页解释器样式表也叫默认的样式表，当没有另外的样式表加载时使用。作者样式表就是网页设计师设计的样式表。浏览者样式表是浏览网页的用户在浏览器上另外设置的样式表。&lt;/p&gt;
&lt;p&gt;CSS的基本数据类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;integer，表示整数，可取正负值。如：12，-24。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;number，表示数字，可取正负值和小数。如：12.1，-14.3。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;lenght，表示距离长度，可取正负值和小数，后跟一个单位，如:12em，12cm。单位又分相对单位和绝对单位，相对单位有：em，ex，px。绝对单位有：in(英寸)，cm(公分)，mm(公厘)，pt(等于1/72英寸)，pc(等于12pt)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;percentage，表示百分比值，可取正负和小数。如：20%，-40%。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;uri，表示网络资源。如： &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ringkee.com&lt;/a&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;inherit参数值&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;body &amp;#123;width: 600px;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.div1 &amp;#123;width: 120%;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.div2 &amp;#123;width: inherit;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div1的宽度是600px*120%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div2的宽度继承父元素body的参数，是600px&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;选择符的作用是指定哪些元素使用哪些样式。选择符可以分为简单选择符和复合选择符两类，简单选择符是类型选择符、通用选择符加上零个或多个属性选择符、ID选择符、伪类等组成。复合选择符是用”&amp;gt;”和”+”号结合多个简单选择符组成。”&amp;gt;”和”+”号两边要加上空格。下面介绍各种选择符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通用选择符，用”*”号表示，可用于所有标记。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &amp;#123;font-size: 14pt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*.EM &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;应用字体样式&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;em class=&amp;quot;EM&amp;quot;&amp;gt;应用红色样式&amp;lt;/em&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类型选择符，与标记名一样，只作用已该标记上。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div &amp;#123;font-size: 14pt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;应用样式&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子代选择符，HTML标记是可嵌套的，子代选择符可把样式表应用于子嵌套的子标记上，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div p b &amp;#123;font-size: 14pt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;没有应用样式&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;应用样式&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子选择符，与子代选择符类似，但它只调用第一层子元素。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div &amp;gt; b &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div p &amp;gt; em &amp;#123;color: green;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;b&amp;gt;当b标记是div标记的子标记时应用红色样式&amp;lt;/b&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;当em是p的子标记且p是div的子标记时应用绿色样式&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;邻近选择符，当两个元素位于同一层且在位置是前后关系时，可以使用邻近选择符。两个选择符用”+”号分开，如果A位于B之前，则B可应用样式。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div + p &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;没有应用样式&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;应用红色样式。&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性选择符，HTML标记有属性，我们可为特定的属性指定样式。有四种写法，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[属性]，样式只应用于指定的属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[属性=值]，样式只应用于指定的属性与值都相同的情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[属性~=值]，样式只应用于指定的属性且属性值包含指定值的情况，属性值是用空格分隔的字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[属性|=值]，样式只应用于指定的属性且属性值是的第一个字符串是指定值的情况，属性值是用”-“分隔的字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[href] &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A[href=&amp;quot;http://www.ringkee.com&amp;quot;] &amp;#123;color: green;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table[summary~=&amp;quot;table&amp;quot;] &amp;#123;color: black;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table[summary|=&amp;quot;this-is-a-table&amp;quot;] &amp;#123;color: blue;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a href=&amp;quot;http://www.python.org&amp;quot;&amp;gt;应用红色样式&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a href=&amp;quot;http://www.ringkee.com&amp;quot;&amp;gt;应用绿色样式&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;table summary~=&amp;quot;This is a table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;td&amp;gt;应用黑色样式&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;table summary|=&amp;quot;This-is-a-table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;td&amp;gt;应用蓝色样式&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类选择符，与属性选择符类似，但它只指对class属性应用样式。类选择符用”.”语法，如.value与[class~=value]是一样的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.myid &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;myid&amp;quot;&amp;gt;应用红色样式&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ID选择符，与属性选择符类似，但它只指对ID属性，用”#”语法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#myid &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;myid&amp;quot;&amp;gt;应用红色样式&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;:first-child伪类，当标记是另一个标记的第一个子标记时，应用样式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p:first-child &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;p是body的第一个子标记，应用红色样式&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;测试&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;p标记是body的第三个子标记，不应用红色样式&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;:link和:visited伪类只作用于a标记，在指定href属性的前提下，:link表示a标记还没被点击时的样式，:visited表示被当点后的样式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:link &amp;#123;color: blue;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:visited &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a href=&amp;quot;http://www.ringkee.com&amp;quot;&amp;gt;链接没点击前是蓝色的，点击后是红色的&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;:hover，:active和:fouce伪类也只能作用于a标记，且也要指定href属性。:hover指定当用户把鼠标移到a标记上并且指针变成手型时应用的样式。:active指定点击a链接并放开鼠标时所显示的样式。:fouce指定用户点击a标记瞬间，即链接成为焦点时所显示的样式。:hover要放在:link和:visited之后，否则:hover的样式会覆盖:link和:visited的样式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:link &amp;#123;color: blue;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:visited &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:haover &amp;#123;color: green;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:focus &amp;#123;color: black;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:active &amp;#123;color: white;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;a href=&amp;quot;http://www.ringkee.com&amp;quot;&amp;gt;应用样式&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;:left及:right伪类只作用于页面内容。当页面在左边时应用:left指定的样式，当页面在右边时应用:right指定的样式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;:first-line只对div和p标记不效，样式只应用于这两个标记内的第一行内容。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:first-line &amp;#123;color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div width:50px;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;该元素内的第一行内容应用红色样式。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;:first-letter伪类也只能作用于div和p标记，与:first-line不同的是它只作用于标记内的第一个字符。如果我们想要每一行的开头字符大一点就可使用该伪类。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:first-letter &amp;#123;font-size: 40pt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;这行文字开头第一个字符的大小是40pt&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;:before和:after伪类可在内容的前面或后面增加特定的内容或指定样式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p:before &amp;#123;content: &amp;quot;(&amp;quot;; color: red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p:after &amp;#123;content: &amp;quot;)&amp;quot;; color: green;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;这行文字前后会增加一对括号，前括号为红色&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;这行文字前后会增加一对括号，后括号为绿色&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;层叠选择符是指当有多个选择符的样式都应用于同一个标记时的选择规则。该规则利用一个三位数来确定，数字最大的就可选中。这三位数的确定规则的这样的，如果选择符中有ID选择符，则百位数加1,否则为0。如果有属性选择符、类选择符或伪类选择符，则十位数加1，否则为0。如果有类型选择符，则个位数加1，否则为0。如果选择符是#div div，这三位数则是101。让我们分析一下，#div是ID选择符，所以在百位数上加1，div是类型选择符，所以个位数上加1变成101。”*”表示0，优先级最低。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;样式表的主要功能是指定同一个文件在不同媒体上按不同的样式显示。通过在种方式可指定不同媒体&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;@media方式&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@media screen &amp;#123;div&amp;#123;color:red;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@media print &amp;#123;div&amp;#123;color:green;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;不同媒体显示不同颜色&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@import是另一种指定不同媒体的方式，它可引入外部的css文档。它的语法格式是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@import url(&amp;quot;simple.css&amp;quot;) screen;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在HTML4.0中，可以用LINK标记的media属性为不同媒体类型指定样式表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;LINK rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;import.css&amp;quot; type=&amp;quot;text/css&amp;quot; media=&amp;quot;print&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!important规则会改变应用样式的优先级，有!important参数样式的优先级最高，会优先显示。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h1 &amp;#123;color:red;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h1 &amp;#123;color:green !important;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h1&amp;gt;字体为绿色&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-2-XSLT&quot;&gt;&lt;a href=&quot;#6-2-XSLT&quot; class=&quot;headerlink&quot; title=&quot;6.2. XSLT&quot;&gt;&lt;/a&gt;6.2. XSLT&lt;/h2&gt;&lt;p&gt;XSLT是XSL的一部份，它是XML的一种应用，指定将一篇XML文档转换成另一种XML文档的规则。XSLT文档即是一篇XML文档，也是一个样式表，里面包含一系列的模板。XSLT处理器对输入XML文档中的元素和样式表中的模板进行比较，如果匹配，则将该模板的内容写入一个输出树中。完成处理后，将输出树串行化成一篇XML文档或其它格式的文档，如HTML或者rtf。&lt;/p&gt;
&lt;p&gt;XSLT几个关键术语&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;源树，原始文档中的元素和元素内容的树。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结果树，转换之后中文档中的元素和元素内容的树。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模板规则，XSLT样式表的基础，分为模式和模板两部份。整个xsl:template元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模式，表示源树中的元素与模式规则匹配的条件集合。xsl:template中的match的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模板，表示当应用模板规则时，结果树中要实例化的部份。xsl:template元素中的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XSLT定义了35个元素，分为三类：&lt;/p&gt;
&lt;p&gt;两个根元素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;xsl:stylesheet根元素，XSLT也是一个XML文档，该文档的根元素就是xsl:stylesheet。XSLT元素都属于名称空间&lt;code&gt;xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/code&gt;，所以所有的XSLT元素都有xsl前缀。一个最小化XSLT文档：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; xml version=&amp;quot;1.0&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:transform元素，作用同上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;13个顶级元素，可直接作为根元素的子元素，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;xsl:apply-imports&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:attribute-set&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:decimal-format&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:import&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:include&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:key&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:namespace-alias&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:output&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:param&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:preserve-space&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:strip-space&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:template模板元素，用于匹配XML文档中的元素。如：&amp;lt;xsl:template match=”person”&amp;gt;，匹配XML文档中的person元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:variable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;20个指令元素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;xsl:apply-imports&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:apply-template应用模板元素，用于显示指定的元素值(内容)。如：&amp;lt;xsl:apply-template select=”name”&amp;gt;，显示name元素的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:attribute&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:call-template&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:choose&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:comment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:copy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:copy-of&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:element&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:fallback&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:for-each&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:if&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:message&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:number&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:otherwise&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:processing-instruction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:value-of选择元素，用于计算元素的值(内容)。如：&amp;lt;xsl:value-of select=”name”&amp;gt;，获得XML文档中name元素的值(内容)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:variable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xsl:when&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XSLT函数&lt;/p&gt;
&lt;h2 id=&quot;6-3-XPath&quot;&gt;&lt;a href=&quot;#6-3-XPath&quot; class=&quot;headerlink&quot; title=&quot;6.3. XPath&quot;&gt;&lt;/a&gt;6.3. XPath&lt;/h2&gt;&lt;p&gt;XPath是一种用来从文档树中选择节点和节点集的语言。从XPath的角度来看，共有七种节点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;根节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;元素节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文本节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注释节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;处理指令节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;名称空间节点&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CDATA部份，实体引用和文档类型声明不包括在内，XPath在所有这些项都并入文档之后才起作用。根节点和根元素是不同的两个概念，根节点包含整篇文档，包括根元素。&lt;/p&gt;
&lt;h3 id=&quot;6-3-1-匹配模式&quot;&gt;&lt;a href=&quot;#6-3-1-匹配模式&quot; class=&quot;headerlink&quot; title=&quot;6.3.1. 匹配模式&quot;&gt;&lt;/a&gt;6.3.1. 匹配模式&lt;/h3&gt;&lt;p&gt;匹配模板的通用模式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 6.1.&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;match=”E”&lt;/td&gt;
&lt;td&gt;匹配元素E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”*”&lt;/td&gt;
&lt;td&gt;匹配任意元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”E&amp;#124;F”&lt;/td&gt;
&lt;td&gt;匹配元素E和F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”E/F”&lt;/td&gt;
&lt;td&gt;匹配以E为父元素的元素F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”E//F”&lt;/td&gt;
&lt;td&gt;匹配以E为根元素的元素F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”/“&lt;/td&gt;
&lt;td&gt;匹配根节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”text()”&lt;/td&gt;
&lt;td&gt;匹配文本节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”comment()”&lt;/td&gt;
&lt;td&gt;匹配注释节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”processing-instruction()”&lt;/td&gt;
&lt;td&gt;匹配处理指令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”node()”&lt;/td&gt;
&lt;td&gt;匹配除属性节点和根节点外的节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”id(test)”&lt;/td&gt;
&lt;td&gt;匹配具有唯一ID test的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”E[@CLASS=”foo”]&lt;/td&gt;
&lt;td&gt;匹配元素E，其类属性为foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;match=”E[F]”&lt;/td&gt;
&lt;td&gt;匹配元素包含有F元素的E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;6-3-2-XPath轴&quot;&gt;&lt;a href=&quot;#6-3-2-XPath轴&quot; class=&quot;headerlink&quot; title=&quot;6.3.2. XPath轴&quot;&gt;&lt;/a&gt;6.3.2. XPath轴&lt;/h3&gt;&lt;p&gt;XPath提供了选择节点的机制，两个较有用的是轴选择和谓语选择，轴指定上下文节点和要选择的节点的关系。共有十三种轴，最常用的有四种，分别是子轴(child)、属性轴(attribute)、自已(self)、双亲(parent)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 6.2. XPath轴描述&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;轴&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;child&lt;/td&gt;
&lt;td&gt;包含当前节点的儿子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;descendent&lt;/td&gt;
&lt;td&gt;包含当前节点的后代，后代不包含属性(attribute)或名称域(namespace)节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent&lt;/td&gt;
&lt;td&gt;包含当前节点的父亲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ancestor&lt;/td&gt;
&lt;td&gt;包含当前节点的祖先，祖先总是包含根节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;following-sibling&lt;/td&gt;
&lt;td&gt;包含当前节点随后的所有节点树，但不包含attribute或namespace节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;preceding-sibling&lt;/td&gt;
&lt;td&gt;包含当前节点之前的所有节点树，但不包含attribute或namespace节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;following&lt;/td&gt;
&lt;td&gt;包含当前节点随后的所有节点，following轴排除了当前节点的后代和attribute或namespace节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;preceding&lt;/td&gt;
&lt;td&gt;包含当前节点之前的所有节点，following轴排除了当前节点的后代和attribute或namespace节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;attribute&lt;/td&gt;
&lt;td&gt;包含当前节点的所有属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;namespace&lt;/td&gt;
&lt;td&gt;包含当前节点的所有namespace节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;self&lt;/td&gt;
&lt;td&gt;只包含当前节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;descendent-or-self&lt;/td&gt;
&lt;td&gt;包含当前节点和当前节点的后代&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ancestor-or-self&lt;/td&gt;
&lt;td&gt;包含当前节点和当前节点的祖先&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;6-3-3-谓词&quot;&gt;&lt;a href=&quot;#6-3-3-谓词&quot; class=&quot;headerlink&quot; title=&quot;6.3.3. 谓词&quot;&gt;&lt;/a&gt;6.3.3. 谓词&lt;/h3&gt;&lt;p&gt;XPath表达式可以匹配多个节点，如需对匹配的节点进行进一步的筛选，可以使用谓词。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 6.3. 选择节点常用谓词&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;谓词&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;select=”E”&lt;/td&gt;
&lt;td&gt;选择是当前节点的孩子的E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=””&lt;/td&gt;
&lt;td&gt;选择当前节点的孩子的所有元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”text()”&lt;/td&gt;
&lt;td&gt;选择当前节点的文本节点孩子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”@name”&lt;/td&gt;
&lt;td&gt;选择当前节点的name属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”@*”&lt;/td&gt;
&lt;td&gt;选择当前节点的所有属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”E[1]”&lt;/td&gt;
&lt;td&gt;选择当前节点的孩子的第一个E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”E[last()]”&lt;/td&gt;
&lt;td&gt;选择当前节点的孩子的最后一个E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”*/E”&lt;/td&gt;
&lt;td&gt;选择当前节点的孙了的所有E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”E//F”&lt;/td&gt;
&lt;td&gt;选择从当前节点的孩子的E元素派生而来的元素F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”//“&lt;/td&gt;
&lt;td&gt;选择根元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”//E”&lt;/td&gt;
&lt;td&gt;选择从根节点派生而来的E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”//E/F”&lt;/td&gt;
&lt;td&gt;选择所有是从根节点派生而来的E元素的孩子的F元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”.”&lt;/td&gt;
&lt;td&gt;选择当前节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”.//E”&lt;/td&gt;
&lt;td&gt;选择从当前节点派生而来的所有E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”..”&lt;/td&gt;
&lt;td&gt;选择当前节点的父节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”../@name”&lt;/td&gt;
&lt;td&gt;选择当前节点的父节点的name属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”E[@name=’foo’]”&lt;/td&gt;
&lt;td&gt;选择所有是当前节点的孩子，并且其name属性具有foo值的E属性，除等号外，还可用&amp;lt;，&amp;gt;，&amp;lt;=，&amp;gt;=和!=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select=”E[@foo and @bar]”&lt;/td&gt;
&lt;td&gt;选择所有包含foo和bar属性的E元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;home/person/@id这种定位路径的写法叫简写定位路径，该写法简洁，容易理解，是XSLT匹配模式中最常用的写法。还有一种称为非简写定位路径的写法，它把节点测试和轴结合在一起，如child::home/child::person/attribute::id。该写法在实际使用中不常用，但它具有非常重要的性能因此有必要了解。&lt;/p&gt;
&lt;h3 id=&quot;6-3-4-XPath表达式&quot;&gt;&lt;a href=&quot;#6-3-4-XPath表达式&quot; class=&quot;headerlink&quot; title=&quot;6.3.4. XPath表达式&quot;&gt;&lt;/a&gt;6.3.4. XPath表达式&lt;/h3&gt;&lt;p&gt;位置路径是XPath的一个最常用的表达式，用以标识XML文档的节点集。除此之上，XPath表达式还可返回数字、布尔和字符串。非节点集的XPath表达式不能用于xsl:template元素的match属性中。它们用于xsl:value-of元素的select属性值或用于位置路径的谓词中。&lt;/p&gt;
&lt;p&gt;每个XPath位置路径可分为一步名多步，每步以“/”号分隔，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;room[\@name=$root]/date[year=$year and month=$month]/meeting&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上下文节点即当前正在处理的节点，也就是位置路径定位的当前节点。上下文在XPath表达式计算前被创建，由XSLT处理器创建。处理每一步后，上下文都会改变。&lt;/p&gt;
&lt;p&gt;位置路径中的步可分为三部份：轴(axis)、节点测试(note test)和谓词(predicate)，它的写法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;axis::note-test[predicate]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;轴和节点测试之间用“::”分开，每个谓词由括号［］括起来。&lt;/p&gt;
&lt;p&gt;要设计好一个位置路径，需确保在每一步选择最少的节点，使用最严格的轴，用最严格的节点测试。避免使用谓词，因为由轴和节点测试选择的节点集的每个节点都会用作谓词的上下文节点。对于位置路径的三步，最节省的是节点测试。&lt;/p&gt;
&lt;p&gt;XPath中的所有数字都是8个字节的IEEE754浮点双精度类型，与java的double类型相同。可表示正无穷大、负无穷大和NaN(零除零)值。支持五种运算符，分别是加(+)、减(-)、乘(*)、除(div)、取余(mod)。&lt;/p&gt;
&lt;p&gt;XPath中的字符串是Unicode字符，用单引号或双引号定界。可以使用=和!=对字符进行比较，也可用&amp;lt;，&amp;gt;，&amp;lt;=，&amp;gt;关系运算符，但比较的两个字符必须是数字，否则比较结果没有意义。&lt;/p&gt;
&lt;p&gt;XPath中的布尔值常用于位置路径的谓词中，如/person[name=”debian”]。布尔值还常用于xsl:if和xsl:when元素的test属性中。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;xsl:template match=&amp;quot;home&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;xsl:if test = &amp;quot;.=&amp;apos;debian&amp;apos; or .=&amp;apos;redhat&amp;apos;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;xsl:value-of select = &amp;quot;.&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;/xsl:if&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;6-3-5-XPath函数&quot;&gt;&lt;a href=&quot;#6-3-5-XPath函数&quot; class=&quot;headerlink&quot; title=&quot;6.3.5. XPath函数&quot;&gt;&lt;/a&gt;6.3.5. XPath函数&lt;/h3&gt;&lt;p&gt;XPath还提供很多函数，用于表达式和谓词。XPath函数的返回值有四种类型，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;布尔值，如：true()返回ture(真)，false()返回false(假)，not()对布尔值取反。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数字，如：number()把任意类型转化数字，celing()返回大于或等于参数的最小整数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;节点集，如：position()返回当有节点在上下节点列表中的位置，count()可统计节点数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串，如：string()转化任意类型为字符串，string-length()返回字符串长度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-4-XLink&quot;&gt;&lt;a href=&quot;#6-4-XLink&quot; class=&quot;headerlink&quot; title=&quot;6.4. XLink&quot;&gt;&lt;/a&gt;6.4. XLink&lt;/h2&gt;&lt;p&gt;XLink是一种基于属性的语法，用来在XML文档中添加链接。XLink链接可以是单向的，如HTML中的A元素，它也可以是双向的，在两个方向上链接两篇文档，因此能够从A到B或从B到A。每个XLink元素必须具有一个xlink:type属性，指出连接类型。属性xlink:href指向所链接的资源URI。下面是一个简单链接的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;test xmlns:xlink = &amp;quot;http://www.w3.org/1999/xlink&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      xlink:type = &amp;quot;simple&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      xlink:href = &amp;quot;http://www.ringkee.com/xml.html&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;author&amp;gt;Jims&amp;lt;/author&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;date&amp;gt;2005/02/18&amp;lt;/date&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/test&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;xlink:type属性类型共有六种，分别是：simple，extended，locator，arc，title，resource。&lt;/p&gt;
&lt;p&gt;xlink:show属性可告诉浏览器或应用程序在激活链接时应该做什么，它有五种可能的动作，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;new，在新窗口中显示链接内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;replace，在当前窗口显示链接内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;embed，在当前链接元素的位置嵌入内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;other，动作不确定，由应用程序指定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;none，无动作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xlink:actuate属性可告诉浏览器何时显示链接，它有四种可能值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;onLoad，一旦发现链接，马上显示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;onRequest，当用户提出请求时才显示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;other，由文档中的其它标记，而不是xlink，来决定何时显示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;none，不指定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个和HTML中的A元素作用一样的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;test xmlns:xlink = &amp;quot;http://www.w3.org/1999/xlink&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      xlink:type = &amp;quot;simple&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      xlink:href = &amp;quot;http://www.ringkee.com/xml.html&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      xlink:actuate = &amp;quot;onRequest&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      xlink:show = &amp;quot;replace&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;author&amp;gt;Jims&amp;lt;/author&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;date&amp;gt;2005/02/18&amp;lt;/date&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/test&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个在页面嵌入图像的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;image xlink:type = &amp;quot;simple&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       xlink:actuate = &amp;quot;onLoad&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       xlink:show = &amp;quot;embed&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       xlink:href=&amp;quot;http://www.ringkee.com/flower.png&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; width = &amp;quot;320&amp;quot; height = &amp;quot;240&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;xlink:actuate和xlink:show是可选的。&lt;/p&gt;
&lt;p&gt;xlink:title和xlink:role属性可指定资源之间的描述，xlink:title包含少量描述远程资源的文本，xlink:role包含URI，指向资源的较长描述。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-7-分析XML&quot;&gt;&lt;a href=&quot;#Chapter-7-分析XML&quot; class=&quot;headerlink&quot; title=&quot;Chapter 7. 分析XML&quot;&gt;&lt;/a&gt;Chapter 7. 分析XML&lt;/h2&gt;&lt;p&gt;分析XML文档可通过程序来做，分析器有两大类，一种是事件驱动的，一种是基于树模型的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用事件驱动的分析器时，每遇到一个元素就会触发一个事件，由事件处理器进行处理。事件分析器按顺序读取XML文档，而不把整个文档读入内存，所以处理速度很快。但缺点是由于要从头到尾读取XML文档，因此无法在XML文档中移动位置。事件驱动分析器适合处理其它地方使用的XML数据，如转换成HTML文档或从文件中读取数据并插入数据库中。它的优点有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文件搜索，从XML文档中搜索需要的标志或数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式转换，如转换成HTML。任何需将原始XML转换成另一种格式的工作都最好使用事件驱动分析器来完成，因为它可动态将信息转换成新格式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;少量修改，你可用事件驱动分析器读取和重新生成XML。在分析过程中，可以改变少量的单语、字符数据内容或重新构造XML。事件驱动分析器特别适合整理和重新格式化XML文档。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单验证，由于整个文档不在内存中，所以无法进行完整验证，但可检查拼写错误和一般良构XML文档之类的简单问题；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;建立内部结构，可以使用事件驱动分析器建立XML文档的复杂内部表示，如基于树的接口使用的树式结构。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;事件驱动分析器不能在XML文档间交叉引用文档内容，但它使用简单，速度快。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于树的分析器把整个XML文档读入内存，并生成树状结构。分析器可随机访问树中的任意节点，并能修改树结构和内容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;7-1-分析器工具&quot;&gt;&lt;a href=&quot;#7-1-分析器工具&quot; class=&quot;headerlink&quot; title=&quot;7.1. 分析器工具&quot;&gt;&lt;/a&gt;7.1. 分析器工具&lt;/h2&gt;&lt;p&gt;现有的分析器种类有上百种，但常用的是两个标准的工具库，一个是XML简单API(SAX，Simple API for XML)和文档对象模型(DOC，Document Object Model)。SAX是事件驱动分析器的标准，而DOM是基于树的分析器标准。另外，Expat虽然不是标准，但它是脚本语言中处理XML时最常用的分析器。Expat由James Clark编写，是事件驱动分析器。&lt;/p&gt;
&lt;h2 id=&quot;7-2-Unicode&quot;&gt;&lt;a href=&quot;#7-2-Unicode&quot; class=&quot;headerlink&quot; title=&quot;7.2. Unicode&quot;&gt;&lt;/a&gt;7.2. Unicode&lt;/h2&gt;&lt;p&gt;计算机并不能正真理解文本内容，它无法识别诸如a,b,c这类的字母，更不用说中文了。计算机所能理解的只有数字，如60，80等。字符集(character set)规定了字母到数字的映射关系，如65代表大写字母A。65称为码点(code point)，字符编码(character encoding)决定码点如何用字节表示。是用多了节还是单字节，高字节位表示什么，低字节位表示什么。&lt;/p&gt;
&lt;p&gt;不同国家使用不同的语言，不同程序使用不同的编码规范，在进行世界范围内的数据交换就要统一表示数据的字符编码规范。传统的ASCII字符集只定义了127个字符，其中前31个是控制符。127位之后的字符随平台不同而不同。大多数平台只能表示前127位，单字节(8位)，使得字符集中最多只能提供256个字符。这些标准字符称为罗马或拉丁字符集，用ASCII来表示中文、日文是远远不够的。&lt;/p&gt;
&lt;p&gt;为了解决字符集问题，出现了Unicode字符集。它可用多字节格式编码字符，目前标准允许2字节字符，支持65536个不同字符。标准的Unicode字符集为Latin-1(或ISO-8859-1)。有关Unicode的介绍可访问Unicode的官方网站：&lt;a href=&quot;http://www.unicode.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.unicode.org&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Unicode字符集为字符分配码点，即编号。这些编号可以用多种模式编码，如UCS-2、UCS-4、UTF-8、UTF-16。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;UCS-2，也叫ISO-10646-UCS-2。每个字符用一个0~65535之间的两个字节的无符号整数表示。如A的Unicode码点为65，用两个字节00和41(十六进制)表示。B的Unicode码点为66，用两个字节00和42表示。UCS-2有两种形式：高字节(#x0041)在前和低字节(#x4100)在前。为区发高低位不同表示形式，采用UCS-2编码文档通常以Unicode字符#xFEFF(零宽度无间断空格)开头，一般称为字节顺序标记(byte order mark)。这个字符是不可见的。如果两个字节交换位置，得到的字符#xFFFE实际是不存在的。因此中通过查看UCS-2文档的前两个字符是#xFEFF还是#xFFFE，就可确定该文档是否是高字节在前。UCS-2的缺点：如果文本字符主要是拉丁文，由于采用两个字节，字符集编码是单字节字符编码的两倍；UCS-2不能与ASCII向前或向后兼容，用于单字节字符集的工具常常不适用于处理UCS-2编码文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UTF-8是一种可这长度的Unicode编码。0~127为ASCII码字符集，与ASCII编码完全兼容，每个字符采用一个字节编码。UTF-8用两个字节表示128~2047，该范围覆盖了最常见的非表意字母。其余的字符，主要来自汉语、日语和韩语，每个都用3个字节表示。如果Unicode的码点超过65535个字符，那么这些字符就会用4个字节编码。对于以拉丁文为主的文件，使用UTF-8比UCS-2可减少一半的文件大小。对于汉语、日语和韩语的文件，其大小会增加百分之五十。对于其它语言，文件大小相差不大。UTF-8是最常用的Unicode编码方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Unicode流行以前，出现了一系列处理特定语言的单字节字符集，ISO将14种这样的字符集标准化成ISO 8859标准，分别是ISO-8859-1~14。ISO-8859-15是ISO-8859-1的修订版本。这些字符集统称ISO字符集。&lt;/p&gt;
&lt;p&gt;Cp1252是依赖于Windows平台的一种编码，是Windows的缺省字符集。该种编码不支持跨平台特性，尽量不要使用。&lt;/p&gt;
&lt;p&gt;MacRoman是Mac OS使用的一种非标准、单字节编码。在非Mac平台下使用也会有问题，尽量不要使用。&lt;/p&gt;
&lt;p&gt;在XML文档中，如果需输入编辑器不支持的字符，我们可用字符引用的方式，以十进制或十六进制给出它所代表的Unicode字符编号，如&amp;#1114;(十进制)或者&amp;amp;#x45A(十六进制)。字符引用可用于元素内容、属性和注释，不能用于元素名和属性名、处理指令或XML关键字。如果有一些字符需经常使用，则我们可为这些字符定义实体，这样，在文档中就可方便地引用该实体了。专门定义字符实体的DTD我们可独立出来，形成以.ent为后缀的外部DTD。在需要时使用外部参数实体引用将这些定义引入文档的DTD中。&lt;/p&gt;
&lt;p&gt;XHTML 1.0 DTD包含有三个有用的字符引用实体可在文档中使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Latin-1字符，&lt;a href=&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ISO-8859-1中自160以上的非ASCII码字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;特殊字符，&lt;a href=&quot;http://www.w3.org/TR/xhtml/DTD/xhtml-special.ent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3.org/TR/xhtml/DTD/xhtml-special.ent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ISO-8859-2中不在Latin-1中的字母。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标点符号，&lt;a href=&quot;http://www.w3.org/TR/xhtml-symbol.ent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3.org/TR/xhtml-symbol.ent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;希腊字母表(不包含带重音的字符)和各种标点符号、数学运算符及其他数学中常用的符号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在XML文档中可以使用xml:lang属性规定元素内容采用的语言。这样就可在一篇文档中同时使用多种语言，这是XML跨平台和跨语言的重要特性之一。如：xml:lang=”CN-CHN”。语言代码是一个两个字母的语言代码，语言代码后还可跟一个子代码，语言代码可在这里找到&lt;a href=&quot;http://ftp.ics.uci.edu/pub/ietf/http/related/iso3166.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ftp.ics.uci.edu/pub/ietf/http/related/iso3166.txt&lt;/a&gt;。下面是xml:lang属性声明的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT test (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ATTLIST test xml:lang NMTOKEN #IMPLIED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于所有语言代码都是有效的XML名称标记，所以使用NMTOKEN类型。&lt;/p&gt;
&lt;h2 id=&quot;Appendix-A-附录&quot;&gt;&lt;a href=&quot;#Appendix-A-附录&quot; class=&quot;headerlink&quot; title=&quot;Appendix A. 附录&quot;&gt;&lt;/a&gt;Appendix A. 附录&lt;/h2&gt;&lt;h2 id=&quot;A-1-标记语言的历史&quot;&gt;&lt;a href=&quot;#A-1-标记语言的历史&quot; class=&quot;headerlink&quot; title=&quot;A.1. 标记语言的历史&quot;&gt;&lt;/a&gt;A.1. 标记语言的历史&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1974年，IBM的Charles F.Goldfarb、Ed Mosher和Ray Lorie发明了一种最终发展成为标准的通用标记语言(SGML，Standardized General Markup Language)。1986年，SGML被ISO采用为8879号标准。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1991年，Tim Berners-Lee利用SGML提供的基本机制定义了超文本标记语言(HTML，Hypertext Markup Language)，把Internet带进了一个多姿多彩的世界。HTML是SGML最成功的一种应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1998年2月10日，W3C的XML 1.0标准正式发布，为异构平台的数据交换提供了一个可行的标准。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;A-2-XML相关技术名词解释&quot;&gt;&lt;a href=&quot;#A-2-XML相关技术名词解释&quot; class=&quot;headerlink&quot; title=&quot;A.2. XML相关技术名词解释&quot;&gt;&lt;/a&gt;A.2. XML相关技术名词解释&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;XLink，一种基于属性的用于XML和非XML文档之间超链接的语法，可以提供与HTML相似的简单、单向的链接，多文档之间的多向链接，以及没有写入权限的文档间的链接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XSLT(XSL Transformation,XSL转换)，一种XML文档，用于描述具有相同或不同XML词汇表的两个文档之间的转换。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XSL-FO(XSL Formatting Object,XSL格式化对象)，一种用于描述打印和网页布局的XML应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dsssl(Document Style Sheet and Semantics Language,文档样式表和语义语言)，用于描述XML打印和在Web上的样式，源自SGML。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XPointer，标识XML文档中由URI指定的特殊部分，通常与XLink结合使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XPath，用于标识XML文档中的路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Namespace，区分来自不同的XML语汇表但名称相同的元素和属性的一种方式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SAX，Simple API for XML，一种事件驱动的XML文档处理器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DOM，Document Object Model，一种面向树的API，它把XML文档解释成具有多属性和嵌套的对象树。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;A-3-XML应用&quot;&gt;&lt;a href=&quot;#A-3-XML应用&quot; class=&quot;headerlink&quot; title=&quot;A.3. XML应用&quot;&gt;&lt;/a&gt;A.3. XML应用&lt;/h2&gt;&lt;p&gt;XML可自定义标签，为了增强互操作，个人或组织可约定只使用某种标签。这些标签集被称为XML应用。XML应用不是使用XML的软件应用程序，如IE或Word，而是XML在矢量图形或数学公式这些特殊领域的一种应用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SVG，可缩放矢量图形(Scalable Vector Graphic)，是W3C推荐的XML中矢量图的编码标准。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MathML，数学标记语言(Mathematical Markup Language)，用于表示数据公式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CML，化学标记语言(Chemical Markup Language)，描述化学、物理学、分子生物学和其它分子科学。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RDF，资源描述框架(Resource Description Framework)，用于描述资源，特别是图书馆分类卡上的元数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CDF，通道定义格式(Channel Definition Format)，微软公司定义的一种非标准XML应用，用来向IE发布可离线浏览的网页。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间:2004年12月03日&lt;/p&gt;
&lt;p&gt;最近更新:2006年02月17日，新增CSS内容&lt;/p&gt;
    
    </summary>
    
    
      <category term="xml" scheme="http://it-ebooks.flygon.net/tags/xml/"/>
    
  </entry>
  
  <entry>
    <title>Awk 学习笔记</title>
    <link href="http://it-ebooks.flygon.net/awk-note/"/>
    <id>http://it-ebooks.flygon.net/awk-note/</id>
    <published>2016-03-13T03:50:42.000Z</published>
    <updated>2016-03-13T04:03:40.839Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GPL协议，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;第一次发布时间:2004年8月6日&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2874788&quot;&gt;1. awk简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875182&quot;&gt;2. awk命令格式和选项&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2875104&quot;&gt;2.1. awk的语法有两种形式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2811790&quot;&gt;2.2. 命令选项&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810094&quot;&gt;3. 模式和操作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810128&quot;&gt;3.1. 模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810236&quot;&gt;3.2. 操作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810288&quot;&gt;4. awk的环境变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861410&quot;&gt;5. awk运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861636&quot;&gt;6. 记录和域&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861644&quot;&gt;6.1. 记录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861680&quot;&gt;6.2. 域&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861697&quot;&gt;6.3. 域分隔符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861728&quot;&gt;7. gawk专用正则表达式元字符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861902&quot;&gt;8. POSIX字符集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861922&quot;&gt;9. 匹配操作符(~)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861937&quot;&gt;10. 比较表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861975&quot;&gt;11. 范围模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861992&quot;&gt;12. 一个验证passwd文件有效性的例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808705&quot;&gt;13. 几个实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808824&quot;&gt;14. awk编程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808832&quot;&gt;14.1. 变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808925&quot;&gt;14.2. BEGIN模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808950&quot;&gt;14.3. END模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808971&quot;&gt;14.4. 重定向和管道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809145&quot;&gt;14.5. 条件语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809263&quot;&gt;14.6. 循环&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809375&quot;&gt;14.7. 数组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809497&quot;&gt;14.8. awk的内建函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876387&quot;&gt;15. How-to&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-awk简介&quot;&gt;&lt;a href=&quot;#1-awk简介&quot; class=&quot;headerlink&quot; title=&quot;1. awk简介&quot;&gt;&lt;/a&gt;1. awk简介&lt;/h2&gt;&lt;p&gt;awk是一种编程语言，用于在linux/unix下对文本和数据进行处理。数据可以来自标准输入、一个或多个文件，或其它命令的输出。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。它在命令行中使用，但更多是作为脚本来使用。awk的处理文本和数据的方式是这样的，它逐行扫描文件，从第一行到最后一行，寻找匹配的特定模式的行，并在这些行上进行你想要的操作。如果没有指定处理动作，则把匹配的行显示到标准输出(屏幕)，如果没有指定模式，则所有被操作所指定的行都被处理。awk分别代表其作者姓氏的第一个字母。因为它的作者是三个人，分别是Alfred Aho、Brian Kernighan、Peter Weinberger。gawk是awk的GNU版本，它提供了Bell实验室和GNU的一些扩展。下面介绍的awk是以GUN的gawk为例的，在linux系统中已把awk链接到gawk，所以下面全部以awk进行介绍。&lt;/p&gt;
&lt;h2 id=&quot;2-awk命令格式和选项&quot;&gt;&lt;a href=&quot;#2-awk命令格式和选项&quot; class=&quot;headerlink&quot; title=&quot;2. awk命令格式和选项&quot;&gt;&lt;/a&gt;2. awk命令格式和选项&lt;/h2&gt;&lt;h3 id=&quot;2-1-awk的语法有两种形式&quot;&gt;&lt;a href=&quot;#2-1-awk的语法有两种形式&quot; class=&quot;headerlink&quot; title=&quot;2.1. awk的语法有两种形式&quot;&gt;&lt;/a&gt;2.1. awk的语法有两种形式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;awk [options] &amp;#39;script&amp;#39; var=value file(s)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;awk [options] -f scriptfile var=value file(s)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-2-命令选项&quot;&gt;&lt;a href=&quot;#2-2-命令选项&quot; class=&quot;headerlink&quot; title=&quot;2.2. 命令选项&quot;&gt;&lt;/a&gt;2.2. 命令选项&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-F fs or --field-separator fs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;指定输入文件折分隔符，fs是一个字符串或者是一个正则表达式，如-F:。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-v var=value or --asign var=value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;赋值一个用户定义变量。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-f scripfile or --file scriptfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从脚本文件中读取awk命令。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-mf nnn and -mr nnn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对nnn值设置内在限制，-mf选项限制分配给nnn的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W compact or --compat, -W traditional or --traditional&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在兼容模式下运行awk。所以gawk的行为和标准的awk完全一样，所有的awk扩展都被忽略。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W copyleft or --copyleft, -W copyright or --copyright&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印简短的版权信息。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W help or --help, -W usage or --usage&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印全部awk选项和每个选项的简短说明。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W lint or --lint&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印不能向传统unix平台移植的结构的警告。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W lint-old or --lint-old&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印关于不能向传统unix平台移植的结构的警告。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W posix&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开兼容模式。但有以下限制，不识别：\x、函数关键字、func、换码序列以及当fs是一个空格时，将新行作为一个域分隔符；操作符&lt;strong&gt;和&lt;/strong&gt;=不能代替^和^=；fflush无效。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W re-interval or --re-inerval&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;允许间隔正则表达式的使用，参考(grep中的Posix字符类)，如括号表达式[[:alpha:]]。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W source program-text or --source program-text&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用program-text作为源代码，可与-f命令混用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-W version or --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印bug报告信息的版本。&lt;/p&gt;
&lt;h2 id=&quot;3-模式和操作&quot;&gt;&lt;a href=&quot;#3-模式和操作&quot; class=&quot;headerlink&quot; title=&quot;3. 模式和操作&quot;&gt;&lt;/a&gt;3. 模式和操作&lt;/h2&gt;&lt;p&gt;awk脚本是由模式和操作组成的：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pattern {action}&lt;/code&gt; 如&lt;code&gt;$ awk &amp;#39;/root/&amp;#39; test&lt;/code&gt;，或&lt;code&gt;$ awk &amp;#39;$3 &amp;amp;lt; 100&amp;#39; test&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;两者是可选的，如果没有模式，则action应用到全部记录，如果没有action，则输出匹配全部记录。默认情况下，每一个输入行都是一条记录，但用户可通过RS变量指定不同的分隔符进行分隔。&lt;/p&gt;
&lt;h3 id=&quot;3-1-模式&quot;&gt;&lt;a href=&quot;#3-1-模式&quot; class=&quot;headerlink&quot; title=&quot;3.1. 模式&quot;&gt;&lt;/a&gt;3.1. 模式&lt;/h3&gt;&lt;p&gt;模式可以是以下任意一个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/正则表达式/：使用通配符的扩展集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关系表达式：可以用下面运算符表中的关系运算符进行操作，可以是字符串或数字的比较，如$2&amp;gt;%1选择第二个字段比第一个字段长的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模式匹配表达式：用运算符~(匹配)和~!(不匹配)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模式，模式：指定一个行的范围。该语法不能包括BEGIN和END模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BEGIN：让用户指定在第一条输入记录被处理之前所发生的动作，通常可在这里设置全局变量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;END：让用户在最后一条输入记录被读取之后发生的动作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-2-操作&quot;&gt;&lt;a href=&quot;#3-2-操作&quot; class=&quot;headerlink&quot; title=&quot;3.2. 操作&quot;&gt;&lt;/a&gt;3.2. 操作&lt;/h3&gt;&lt;p&gt;操作由一人或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内。主要有四部份：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;变量或数组赋值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内置函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;控制流命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-awk的环境变量&quot;&gt;&lt;a href=&quot;#4-awk的环境变量&quot; class=&quot;headerlink&quot; title=&quot;4. awk的环境变量&quot;&gt;&lt;/a&gt;4. awk的环境变量&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Table 1. awk的环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$n&lt;/td&gt;
&lt;td&gt;当前记录的第n个字段，字段间由FS分隔。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$0&lt;/td&gt;
&lt;td&gt;完整的输入记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ARGC&lt;/td&gt;
&lt;td&gt;命令行参数的数目。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ARGIND&lt;/td&gt;
&lt;td&gt;命令行中当前文件的位置(从0开始算)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ARGV&lt;/td&gt;
&lt;td&gt;包含命令行参数的数组。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CONVFMT&lt;/td&gt;
&lt;td&gt;数字转换格式(默认值为%.6g)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ENVIRON&lt;/td&gt;
&lt;td&gt;环境变量关联数组。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ERRNO&lt;/td&gt;
&lt;td&gt;最后一个系统错误的描述。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FIELDWIDTHS&lt;/td&gt;
&lt;td&gt;字段宽度列表(用空格键分隔)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FILENAME&lt;/td&gt;
&lt;td&gt;当前文件名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FNR&lt;/td&gt;
&lt;td&gt;同NR，但相对于当前文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FS&lt;/td&gt;
&lt;td&gt;字段分隔符(默认是任何空格)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IGNORECASE&lt;/td&gt;
&lt;td&gt;如果为真，则进行忽略大小写的匹配。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NF&lt;/td&gt;
&lt;td&gt;当前记录中的字段数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NR&lt;/td&gt;
&lt;td&gt;当前记录数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OFMT&lt;/td&gt;
&lt;td&gt;数字的输出格式(默认值是%.6g)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OFS&lt;/td&gt;
&lt;td&gt;输出字段分隔符(默认值是一个空格)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ORS&lt;/td&gt;
&lt;td&gt;输出记录分隔符(默认值是一个换行符)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RLENGTH&lt;/td&gt;
&lt;td&gt;由match函数所匹配的字符串的长度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RS&lt;/td&gt;
&lt;td&gt;记录分隔符(默认是一个换行符)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RSTART&lt;/td&gt;
&lt;td&gt;由match函数所匹配的字符串的第一个位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SUBSEP&lt;/td&gt;
&lt;td&gt;数组下标分隔符(默认值是\034)。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;5-awk运算符&quot;&gt;&lt;a href=&quot;#5-awk运算符&quot; class=&quot;headerlink&quot; title=&quot;5. awk运算符&quot;&gt;&lt;/a&gt;5. awk运算符&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Table 2. 运算符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;= += -= &lt;em&gt;= /= %= ^= \&lt;/em&gt;*=&lt;/td&gt;
&lt;td&gt;赋值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:&lt;/td&gt;
&lt;td&gt;C条件表达式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;#124;&amp;#124;&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;逻辑与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~ ~!&lt;/td&gt;
&lt;td&gt;匹配正则表达式和不匹配正则表达式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt; &amp;lt;= &amp;gt; &amp;gt;= != ==&lt;/td&gt;
&lt;td&gt;关系运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;空格&lt;/td&gt;
&lt;td&gt;连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+ -&lt;/td&gt;
&lt;td&gt;加，减&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;* / &amp;amp;&lt;/td&gt;
&lt;td&gt;乘，除与求余&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+ - !&lt;/td&gt;
&lt;td&gt;一元加，减和逻辑非&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^ ***&lt;/td&gt;
&lt;td&gt;求幂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;++ –&lt;/td&gt;
&lt;td&gt;增加或减少，作为前缀或后缀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;字段引用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in&lt;/td&gt;
&lt;td&gt;数组成员&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;6-记录和域&quot;&gt;&lt;a href=&quot;#6-记录和域&quot; class=&quot;headerlink&quot; title=&quot;6. 记录和域&quot;&gt;&lt;/a&gt;6. 记录和域&lt;/h2&gt;&lt;h3 id=&quot;6-1-记录&quot;&gt;&lt;a href=&quot;#6-1-记录&quot; class=&quot;headerlink&quot; title=&quot;6.1. 记录&quot;&gt;&lt;/a&gt;6.1. 记录&lt;/h3&gt;&lt;p&gt;awk把每一个以换行符结束的行称为一个记录。&lt;/p&gt;
&lt;p&gt;记录分隔符：默认的输入和输出的分隔符都是回车，保存在内建变量ORS和RS中。&lt;/p&gt;
&lt;p&gt;$0变量：它指的是整条记录。如&lt;code&gt;$ awk &amp;#39;{print $0}&amp;#39; test&lt;/code&gt;将输出test文件中的所有记录。&lt;/p&gt;
&lt;p&gt;变量NR：一个计数器，每处理完一条记录，NR的值就增加1。如$ awk ‘{print NR,$0}’ test将输出test文件中所有记录，并在记录前显示记录号。&lt;/p&gt;
&lt;h3 id=&quot;6-2-域&quot;&gt;&lt;a href=&quot;#6-2-域&quot; class=&quot;headerlink&quot; title=&quot;6.2. 域&quot;&gt;&lt;/a&gt;6.2. 域&lt;/h3&gt;&lt;p&gt;记录中每个单词称做“域”，默认情况下以空格或tab分隔。awk可跟踪域的个数，并在内建变量NF中保存该值。如&lt;code&gt;$ awk &amp;#39;{print $1,$3}&amp;#39;&lt;/code&gt; test将打印test文件中第一和第三个以空格分开的列(域)。&lt;/p&gt;
&lt;h3 id=&quot;6-3-域分隔符&quot;&gt;&lt;a href=&quot;#6-3-域分隔符&quot; class=&quot;headerlink&quot; title=&quot;6.3. 域分隔符&quot;&gt;&lt;/a&gt;6.3. 域分隔符&lt;/h3&gt;&lt;p&gt;内建变量FS保存输入域分隔符的值，默认是空格或tab。我们可以通过-F命令行选项修改FS的值。如&lt;code&gt;$ awk -F: &amp;#39;{print $1,$5}&amp;#39; test&lt;/code&gt;将打印以冒号为分隔符的第一，第五列的内容。&lt;/p&gt;
&lt;p&gt;可以同时使用多个域分隔符，这时应该把分隔符写成放到方括号中，如&lt;code&gt;$awk -F&amp;#39;[:\t]&amp;#39; &amp;#39;{print $1,$3}&amp;#39; test&lt;/code&gt;，表示以空格、冒号和tab作为分隔符。&lt;/p&gt;
&lt;p&gt;输出域的分隔符默认是一个空格，保存在OFS中。如&lt;code&gt;$ awk -F: &amp;#39;{print $1,$5}&amp;#39; test&lt;/code&gt;，$1和$5间的逗号就是OFS的值。&lt;/p&gt;
&lt;h2 id=&quot;7-gawk专用正则表达式元字符&quot;&gt;&lt;a href=&quot;#7-gawk专用正则表达式元字符&quot; class=&quot;headerlink&quot; title=&quot;7. gawk专用正则表达式元字符&quot;&gt;&lt;/a&gt;7. gawk专用正则表达式元字符&lt;/h2&gt;&lt;p&gt;一般通用的元字符集就不讲了，可参考我的&lt;a href=&quot;http://www.ringkee.com/jims/technic_folder/sed.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sed&lt;/a&gt;和&lt;a href=&quot;http://www.ringkee.com/jims/technic_floder/grep.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grep&lt;/a&gt;学习笔记。以下几个是gawk专用的，不适合unix版本的awk。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;\Y 匹配一个单词开头或者末尾的空字符串。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\B 匹配单词内的空字符串。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;lt; 匹配一个单词的开头的空字符串，锚定开始。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;gt; 匹配一个单词的末尾的空字符串，锚定末尾。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\w 匹配一个字母数字组成的单词。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\W 匹配一个非字母数字组成的单词。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\‘ 匹配字符串开头的一个空字符串。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;apos; 匹配字符串末尾的一个空字符串。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;8-POSIX字符集&quot;&gt;&lt;a href=&quot;#8-POSIX字符集&quot; class=&quot;headerlink&quot; title=&quot;8. POSIX字符集&quot;&gt;&lt;/a&gt;8. POSIX字符集&lt;/h2&gt;&lt;p&gt;可参考我的&lt;a href=&quot;http://www.ringkee.com/jims/technic_folder/grep.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grep学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;9-匹配操作符&quot;&gt;&lt;a href=&quot;#9-匹配操作符&quot; class=&quot;headerlink&quot; title=&quot;9. 匹配操作符(~)&quot;&gt;&lt;/a&gt;9. 匹配操作符(~)&lt;/h2&gt;&lt;p&gt;用来在记录或者域内匹配正则表达式。如&lt;code&gt;$ awk &amp;#39;$1 ~/^root/&amp;#39; test&lt;/code&gt;将显示test文件第一列中以root开头的行。&lt;/p&gt;
&lt;h2 id=&quot;10-比较表达式&quot;&gt;&lt;a href=&quot;#10-比较表达式&quot; class=&quot;headerlink&quot; title=&quot;10. 比较表达式&quot;&gt;&lt;/a&gt;10. 比较表达式&lt;/h2&gt;&lt;p&gt;&lt;code&gt;conditional expression1 expression2: expression3&lt;/code&gt;，例如：&lt;code&gt;$ awk &amp;#39;{max = {$1 &amp;amp;gt; $3} $1: $3: print max}&amp;#39; test&lt;/code&gt;。如果第一个域大于第三个域，$1就赋值给max，否则$3就赋值给max。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;$1 + $2 &amp;amp;lt; 100&amp;#39; test&lt;/code&gt;。如果第一和第二个域相加大于100，则打印这些行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;$1 &amp;amp;gt; 5 &amp;amp;&amp;amp; $2 &amp;amp;lt; 10&amp;#39; test&lt;/code&gt;,如果第一个域大于5，并且第二个域小于10，则打印这些行。&lt;/p&gt;
&lt;h2 id=&quot;11-范围模板&quot;&gt;&lt;a href=&quot;#11-范围模板&quot; class=&quot;headerlink&quot; title=&quot;11. 范围模板&quot;&gt;&lt;/a&gt;11. 范围模板&lt;/h2&gt;&lt;p&gt;范围模板匹配从第一个模板的第一次出现到第二个模板的第一次出现之间所有行。如果有一个模板没出现，则匹配到开头或末尾。如&lt;code&gt;$ awk &amp;#39;/root/,/mysql/&amp;#39; test&lt;/code&gt;将显示root第一次出现到mysql第一次出现之间的所有行。&lt;/p&gt;
&lt;h2 id=&quot;12-一个验证passwd文件有效性的例子&quot;&gt;&lt;a href=&quot;#12-一个验证passwd文件有效性的例子&quot; class=&quot;headerlink&quot; title=&quot;12. 一个验证passwd文件有效性的例子&quot;&gt;&lt;/a&gt;12. 一个验证passwd文件有效性的例子&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat /etc/passwd | awk -F: &amp;apos;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NF != 7&amp;#123;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printf(&amp;quot;line %d,does not have 7 fields:%s\n&amp;quot;,NR,$0)&amp;#125;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$1 !~ /[A-Za-z0-9]/&amp;#123;printf(&amp;quot;line %d,non alpha and numeric user id:%d: %s\n,NR,$0)&amp;#125;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$2 == &amp;quot;*&amp;quot; &amp;#123;printf(&amp;quot;line %d, no password: %s\n&amp;quot;,NR,$0)&amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;#co.1&quot;&gt;&lt;img src=&quot;images/callouts/1.png&quot; alt=&quot;1&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;cat把结果输出给awk，awk把域之间的分隔符设为冒号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;#co.2&quot;&gt;&lt;img src=&quot;images/callouts/2.png&quot; alt=&quot;2&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;如果域的数量(NF)不等于7，就执行下面的程序。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;#co.3&quot;&gt;&lt;img src=&quot;images/callouts/3.png&quot; alt=&quot;3&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;printf打印字符串”line does not have 7 fields”，并显示该条记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;#co.4&quot;&gt;&lt;img src=&quot;images/callouts/4.png&quot; alt=&quot;4&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;如果第一个域没有包含任何字母和数字，printf打印“no alpha and numeric user id” ，并显示记录数和记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;#co.5&quot;&gt;&lt;img src=&quot;images/callouts/5.png&quot; alt=&quot;5&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;如果第二个域是一个星号，就打印字符串“no passwd”，紧跟着显示记录数和记录本身。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;13-几个实例&quot;&gt;&lt;a href=&quot;#13-几个实例&quot; class=&quot;headerlink&quot; title=&quot;13. 几个实例&quot;&gt;&lt;/a&gt;13. 几个实例&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;/^(no|so)/&amp;#39; test&lt;/code&gt;—–打印所有以模式no或so开头的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;/^[ns]/{print $1}&amp;#39; test&lt;/code&gt;—–如果记录以n或s开头，就打印这个记录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;$1 ~/[0-9][0-9]$/(print $1}&amp;#39; test&lt;/code&gt;—–如果第一个域以两个数字结束就打印这个记录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;$1 == 100 || $2 &amp;amp;lt; 50&amp;#39; test&lt;/code&gt;—–如果第一个或等于100或者第二个域小于50，则打印该行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;$1 != 10&amp;#39; test&lt;/code&gt;—–如果第一个域不等于10就打印该行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;/test/{print $1 + 10}&amp;#39; test&lt;/code&gt;—–如果记录包含正则表达式test，则第一个域加10并打印出来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;{print ($1 &amp;amp;gt; 5 &amp;quot;ok &amp;quot;$1: &amp;quot;error&amp;quot;$1)}&amp;#39; test&lt;/code&gt;—–如果第一个域大于5则打印问号后面的表达式值，否则打印冒号后面的表达式值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;/^root/,/^mysql/&amp;#39; test&lt;/code&gt;—-打印以正则表达式root开头的记录到以正则表达式mysql开头的记录范围内的所有记录。如果找到一个新的正则表达式root开头的记录，则继续打印直到下一个以正则表达式mysql开头的记录为止，或到文件末尾。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;14-awk编程&quot;&gt;&lt;a href=&quot;#14-awk编程&quot; class=&quot;headerlink&quot; title=&quot;14. awk编程&quot;&gt;&lt;/a&gt;14. awk编程&lt;/h2&gt;&lt;h3 id=&quot;14-1-变量&quot;&gt;&lt;a href=&quot;#14-1-变量&quot; class=&quot;headerlink&quot; title=&quot;14.1. 变量&quot;&gt;&lt;/a&gt;14.1. 变量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在awk中，变量不需要定义就可以直接使用，变量类型可以是数字或字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;赋值格式：&lt;code&gt;Variable = expression&lt;/code&gt;，如&lt;code&gt;$ awk &amp;#39;$1 ~/test/{count = $2 + $3; print count}&amp;#39; test&lt;/code&gt;,上式的作用是,awk先扫描第一个域，一旦test匹配，就把第二个域的值加上第三个域的值，并把结果赋值给变量count，最后打印出来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;awk可以在命令行中给变量赋值，然后将这个变量传输给awk脚本。如&lt;code&gt;$ awk -F: -f awkscript month=4 year=2004 test&lt;/code&gt;，上式的month和year都是自定义变量，分别被赋值为4和2004。在awk脚本中，这些变量使用起来就象是在脚本中建立的一样。注意，如果参数前面出现test，那么在BEGIN语句中的变量就不能被使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;域变量也可被赋值和修改，如&lt;code&gt;$ awk &amp;#39;{$2 = 100 + $1; print }&amp;#39; test&lt;/code&gt;,上式表示，如果第二个域不存在，awk将计算表达式100加$1的值，并将其赋值给$2，如果第二个域存在，则用表达式的值覆盖$2原来的值。再例如：&lt;code&gt;$ awk &amp;#39;$1 == &amp;quot;root&amp;quot;{$1 =&amp;quot;test&amp;quot;;print}&amp;#39; test&lt;/code&gt;，如果第一个域的值是“root”，则把它赋值为“test”，注意，字符串一定要用双引号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内建变量的使用。变量列表在前面已列出，现在举个例子说明一下。&lt;code&gt;$ awk -F: &amp;#39;{IGNORECASE=1; $1 == &amp;quot;MARY&amp;quot;{print NR,$1,$2,$NF}&amp;#39;test&lt;/code&gt;，把IGNORECASE设为1代表忽略大小写，打印第一个域是mary的记录数、第一个域、第二个域和最后一个域。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;14-2-BEGIN模块&quot;&gt;&lt;a href=&quot;#14-2-BEGIN模块&quot; class=&quot;headerlink&quot; title=&quot;14.2. BEGIN模块&quot;&gt;&lt;/a&gt;14.2. BEGIN模块&lt;/h3&gt;&lt;p&gt;BEGIN模块后紧跟着动作块，这个动作块在awk处理任何输入文件之前执行。所以它可以在没有任何输入的情况下进行测试。它通常用来改变内建变量的值，如OFS,RS和FS等，以及打印标题。如：&lt;code&gt;$ awk &amp;#39;BEGIN{FS=&amp;quot;:&amp;quot;; OFS=&amp;quot;\t&amp;quot;; ORS=&amp;quot;\n\n&amp;quot;}{print $1,$2,$3} test&lt;/code&gt;。上式表示，在处理输入文件以前，域分隔符(FS)被设为冒号，输出文件分隔符(OFS)被设置为制表符，输出记录分隔符(ORS)被设置为两个换行符。&lt;code&gt;$ awk &amp;#39;BEGIN{print &amp;quot;TITLE TEST&amp;quot;}&lt;/code&gt;只打印标题。&lt;/p&gt;
&lt;h3 id=&quot;14-3-END模块&quot;&gt;&lt;a href=&quot;#14-3-END模块&quot; class=&quot;headerlink&quot; title=&quot;14.3. END模块&quot;&gt;&lt;/a&gt;14.3. END模块&lt;/h3&gt;&lt;p&gt;END不匹配任何的输入文件，但是执行动作块中的所有动作，它在整个输入文件处理完成后被执行。如&lt;code&gt;$ awk &amp;#39;END{print &amp;quot;The number of records is&amp;quot; NR}&amp;#39; test&lt;/code&gt;，上式将打印所有被处理的记录数。&lt;/p&gt;
&lt;h3 id=&quot;14-4-重定向和管道&quot;&gt;&lt;a href=&quot;#14-4-重定向和管道&quot; class=&quot;headerlink&quot; title=&quot;14.4. 重定向和管道&quot;&gt;&lt;/a&gt;14.4. 重定向和管道&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;awk可使用shell的重定向符进行重定向输出，如：&lt;code&gt;$ awk &amp;#39;$1 = 100 {print $1 &amp;amp;gt; &amp;quot;output_file&amp;quot; }&amp;#39; test&lt;/code&gt;。上式表示如果第一个域的值等于100，则把它输出到output_file中。也可以用&amp;gt;&amp;gt;来重定向输出，但不清空文件，只做追加操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出重定向需用到getline函数。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;BEGIN{ &amp;quot;date&amp;quot; | getline d; print d}&amp;#39; test&lt;/code&gt;。执行linux的date命令，并通过管道输出给getline，然后再把输出赋值给自定义变量d，并打印它。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;BEGIN{&amp;quot;date&amp;quot; | getline d; split(d,mon); print mon[2]}&amp;#39; test&lt;/code&gt;。执行shell的date命令，并通过管道输出给getline，然后getline从管道中读取并将输入赋值给d，split函数把变量d转化成数组mon，然后打印数组mon的第二个元素。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;BEGIN{while( &amp;quot;ls&amp;quot; | getline) print}&amp;#39;&lt;/code&gt;，命令ls的输出传递给geline作为输入，循环使getline从ls的输出中读取一行，并把它打印到屏幕。这里没有输入文件，因为BEGIN块在打开输入文件前执行，所以可以忽略输入文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;BEGIN{printf &amp;quot;What is your name &amp;quot;; getline name &amp;amp;lt; &amp;quot;/dev/tty&amp;quot; } $1 ~name {print &amp;quot;Found&amp;quot; name on line &amp;quot;, NR &amp;quot;.&amp;quot;} END{print &amp;quot;See you,&amp;quot; name &amp;quot;.&amp;quot;} test&lt;/code&gt;。在屏幕上打印”What is your name “,并等待用户应答。当一行输入完毕后，getline函数从终端接收该行输入，并把它储存在自定义变量name中。如果第一个域匹配变量name的值，print函数就被执行，END块打印See you和name的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;BEGIN{while (getline &amp;amp;lt; &amp;quot;/etc/passwd&amp;quot; &amp;amp;gt; 0) lc++; print lc}&amp;#39;&lt;/code&gt;。awk将逐行读取文件/etc/passwd的内容，在到达文件末尾前，计数器lc一直增加，当到末尾时，打印lc的值。注意，如果文件不存在，getline返回-1，如果到达文件的末尾就返回0，如果读到一行，就返回1，所以命令 &lt;code&gt;while (getline &amp;lt; &amp;quot;/etc/passwd&amp;quot;)&lt;/code&gt;在文件不存在的情况下将陷入无限循环，因为返回-1表示逻辑真。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以在awk中打开一个管道，且同一时刻只能有一个管道存在。通过close()可关闭管道。如：&lt;code&gt;$ awk &amp;#39;{print $1, $2 | &amp;quot;sort&amp;quot; }&amp;#39; test END {close(&amp;quot;sort&amp;quot;)}&lt;/code&gt;。awd把print语句的输出通过管道作为linux命令sort的输入,END块执行关闭管道操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;system函数可以在awk中执行linux的命令。如：&lt;code&gt;$ awk &amp;#39;BEGIN{system(&amp;quot;clear&amp;quot;)&amp;#39;&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fflush函数用以刷新输出缓冲区，如果没有参数，就刷新标准输出的缓冲区，如果以空字符串为参数，如fflush(“”),则刷新所有文件和管道的输出缓冲区。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;14-5-条件语句&quot;&gt;&lt;a href=&quot;#14-5-条件语句&quot; class=&quot;headerlink&quot; title=&quot;14.5. 条件语句&quot;&gt;&lt;/a&gt;14.5. 条件语句&lt;/h3&gt;&lt;p&gt;awk中的条件语句是从C语言中借鉴过来的，可控制程序的流程。&lt;/p&gt;
&lt;h4 id=&quot;14-5-1-if语句&quot;&gt;&lt;a href=&quot;#14-5-1-if语句&quot; class=&quot;headerlink&quot; title=&quot;14.5.1. if语句&quot;&gt;&lt;/a&gt;14.5.1. if语句&lt;/h4&gt;&lt;p&gt;格式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;if (expression)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           statement; statement; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;{if ($1 &amp;amp;lt;$2) print $2 &amp;quot;too high&amp;quot;}&amp;#39; test&lt;/code&gt;。如果第一个域小于第二个域则打印。&lt;br&gt;&lt;code&gt;$ awk &amp;#39;{if ($1 &amp;amp;lt; $2) {count++; print &amp;quot;ok&amp;quot;}}&amp;#39; test&lt;/code&gt;.如果第一个域小于第二个域，则count加一，并打印ok。&lt;/p&gt;
&lt;h4 id=&quot;14-5-2-if-else语句，用于双重判断。&quot;&gt;&lt;a href=&quot;#14-5-2-if-else语句，用于双重判断。&quot; class=&quot;headerlink&quot; title=&quot;14.5.2. if/else语句，用于双重判断。&quot;&gt;&lt;/a&gt;14.5.2. if/else语句，用于双重判断。&lt;/h4&gt;&lt;p&gt;格式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;if (expression)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           statement; statement; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           statement; statement; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;{if ($1 &amp;amp;gt; 100) print $1 &amp;quot;bad&amp;quot; ; else print &amp;quot;ok&amp;quot;}&amp;#39; test&lt;/code&gt;。如果$1大于100则打印$1 bad,否则打印ok。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;{if ($1 &amp;amp;gt; 100){ count++; print $1} else {count--; print $2}&amp;#39; test&lt;/code&gt;。如果$1大于100，则count加一，并打印$1，否则count减一，并打印$1。&lt;/p&gt;
&lt;h4 id=&quot;14-5-3-if-else-else-if语句，用于多重判断。&quot;&gt;&lt;a href=&quot;#14-5-3-if-else-else-if语句，用于多重判断。&quot; class=&quot;headerlink&quot; title=&quot;14.5.3. if/else else if语句，用于多重判断。&quot;&gt;&lt;/a&gt;14.5.3. if/else else if语句，用于多重判断。&lt;/h4&gt;&lt;p&gt;格式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;if (expression)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            statement; statement; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else if (expression)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            statement; statement; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else if (expression)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            statement; statement; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           statement; statement; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;14-6-循环&quot;&gt;&lt;a href=&quot;#14-6-循环&quot; class=&quot;headerlink&quot; title=&quot;14.6. 循环&quot;&gt;&lt;/a&gt;14.6. 循环&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;awk有三种循环:while循环；for循环；special for循环。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;{ i = 1; while ( i &amp;amp;lt;= NF ) { print NF,$i; i++}}&amp;#39; test&lt;/code&gt;。变量的初始值为1，若i小于可等于NF(记录中域的个数),则执行打印语句，且i增加1。直到i的值大于NF.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ awk &amp;#39;{for (i = 1; i&amp;amp;lt;NF; i++) print NF,$i}&amp;#39; test&lt;/code&gt;。作用同上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;breadkcontinue语句。break用于在满足条件的情况下跳出循环；continue用于在满足条件的情况下忽略后面的语句，直接返回循环的顶端。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;for ( x=3; x&amp;amp;lt;=NF; x++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ($x&amp;amp;lt;0)&amp;#123;print &amp;quot;Bottomed out!&amp;quot;; break&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;for ( x=3; x&amp;amp;lt;=NF; x++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ($x==0)&amp;#123;print &amp;quot;Get next item&amp;quot;; continue&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;next语句从输入文件中读取一行，然后从头开始执行awk脚本。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;if ($1 ~/test/)&amp;#123;next&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else &amp;#123;print&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;exit语句用于结束awk程序，但不会略过END块。退出状态为0代表成功，非零值表示出错。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;14-7-数组&quot;&gt;&lt;a href=&quot;#14-7-数组&quot; class=&quot;headerlink&quot; title=&quot;14.7. 数组&quot;&gt;&lt;/a&gt;14.7. 数组&lt;/h3&gt;&lt;p&gt;awk中的数组的下标可以是数字和字母，称为关联数组。&lt;/p&gt;
&lt;h4 id=&quot;14-7-1-下标与关联数组&quot;&gt;&lt;a href=&quot;#14-7-1-下标与关联数组&quot; class=&quot;headerlink&quot; title=&quot;14.7.1. 下标与关联数组&quot;&gt;&lt;/a&gt;14.7.1. 下标与关联数组&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用变量作为数组下标。如：&lt;code&gt;$ awk {name[x++]=$2};END{for(i=0;i&amp;amp;lt;NR;i++) print i,name[i]}&amp;#39; test&lt;/code&gt;。数组name中的下标是一个自定义变量x，awk初始化x的值为0，在每次使用后增加1。第二个域的值被赋给name数组的各个元素。在END模块中，for循环被用于循环整个数组，从下标为0的元素开始，打印那些存储在数组中的值。因为下标是关健字，所以它不一定从0开始，可以从任何值开始。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;special for循环用于读取关联数组中的元素。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;for (item in arrayname)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         print arrayname[item]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;$ awk &amp;#39;/^tom/{name[NR]=$1}; END{for(i in name){print name[i]}}&amp;#39; test&lt;/code&gt;。打印有值的数组元素。打印的顺序是随机的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用字符串作为下标。如：count[“test”]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用域值作为数组的下标。一种新的for循环方式，&lt;code&gt;for (index_value in array) statement&lt;/code&gt;。如:&lt;code&gt;$ awk &amp;#39;{count[$1]++} END{for(name in count) print name,count[name]}&amp;#39; test&lt;/code&gt;。该语句将打印$1中字符串出现的次数。它首先以第一个域作数组count的下标，第一个域变化，索引就变化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;delete函数用于删除数组元素。如：&lt;code&gt;$ awk &amp;#39;{line[x++]=$1} END{for(x in line) delete(line[x])}&amp;#39; test&lt;/code&gt;。分配给数组line的是第一个域的值，所有记录处理完成后，special for循环将删除每一个元素。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;14-8-awk的内建函数&quot;&gt;&lt;a href=&quot;#14-8-awk的内建函数&quot; class=&quot;headerlink&quot; title=&quot;14.8. awk的内建函数&quot;&gt;&lt;/a&gt;14.8. awk的内建函数&lt;/h3&gt;&lt;h4 id=&quot;14-8-1-字符串函数&quot;&gt;&lt;a href=&quot;#14-8-1-字符串函数&quot; class=&quot;headerlink&quot; title=&quot;14.8.1. 字符串函数&quot;&gt;&lt;/a&gt;14.8.1. 字符串函数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;sub函数匹配记录中最大、最靠左边的子字符串的正则表达式，并用替换字符串替换这些字符串。如果没有指定目标字符串就默认使用整个记录。替换只发生在第一次匹配的时候。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sub (regular expression, substitution string):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub (regular expression, substitution string, target string)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; sub(/test/, &amp;quot;mytest&amp;quot;); print &amp;#125;&amp;apos; testfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; sub(/test/, &amp;quot;mytest&amp;quot;); $1&amp;#125;; print &amp;#125;&amp;apos; testfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个例子在整个记录中匹配，替换只发生在第一次匹配发生的时候。如要在整个文件中进行匹配需要用到gsub&lt;/p&gt;
&lt;p&gt;第二个例子在整个记录的第一个域中进行匹配，替换只发生在第一次匹配发生的时候。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gsub函数作用如sub，但它在整个文档中进行匹配。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gsub (regular expression, substitution string)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gsub (regular expression, substitution string, target string)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; gsub(/test/, &amp;quot;mytest&amp;quot;); print &amp;#125;&amp;apos; testfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; gsub(/test/, &amp;quot;mytest&amp;quot;), $1 &amp;#125;; print &amp;#125;&amp;apos; testfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个例子在整个文档中匹配test，匹配的都被替换成mytest。&lt;/p&gt;
&lt;p&gt;第二个例子在整个文档的第一个域中匹配，所有匹配的都被替换成mytest。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;index函数返回子字符串第一次被匹配的位置，偏移量从位置1开始。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;index(string, substring)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; print index(&amp;quot;test&amp;quot;, &amp;quot;mytest&amp;quot;) &amp;#125;&amp;apos; testfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例返回test在mytest的位置，结果应该是3。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;length函数返回记录的字符数。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;length( string )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;length&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; print length( &amp;quot;test&amp;quot; ) &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; print length &amp;#125;&amp;apos; testfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个实例返回test字符串的长度。&lt;/p&gt;
&lt;p&gt;第二个实例返回testfile文件中第条记录的字符数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;substr函数返回从位置1开始的子字符串，如果指定长度超过实际长度，就返回整个字符串。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;substr( string, starting position )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;substr( string, starting position, length of string )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; print substr( &amp;quot;hello world&amp;quot;, 7,11 ) &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上例截取了world子字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;match函数返回在字符串中正则表达式位置的索引，如果找不到指定的正则表达式则返回0。match函数会设置内建变量RSTART为字符串中子字符串的开始位置，RLENGTH为到子字符串末尾的字符个数。substr可利于这些变量来截取字符串。函数格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match( string, regular expression )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123;start=match(&amp;quot;this is a test&amp;quot;,/[a-z]+$/); print start&amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123;start=match(&amp;quot;this is a test&amp;quot;,/[a-z]+$/); print start, RSTART, RLENGTH &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个实例打印以连续小写字符结尾的开始位置，这里是11。&lt;/p&gt;
&lt;p&gt;第二个实例还打印RSTART和RLENGTH变量，这里是11(start)，11(RSTART)，4(RLENGTH)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;toupper和tolower函数可用于字符串大小间的转换，该功能只在gawk中有效。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;toupper( string )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tolower( string )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; print toupper(&amp;quot;test&amp;quot;), tolower(&amp;quot;TEST&amp;quot;) &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;split函数可按给定的分隔符把字符串分割为一个数组。如果分隔符没提供，则按当前FS值进行分割。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;split( string, array, field separator )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;split( string, array )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; split( &amp;quot;20:18:00&amp;quot;, time, &amp;quot;:&amp;quot; ); print time[2] &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上例把时间按冒号分割到time数组内，并显示第二个数组元素18。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;14-8-2-时间函数&quot;&gt;&lt;a href=&quot;#14-8-2-时间函数&quot; class=&quot;headerlink&quot; title=&quot;14.8.2. 时间函数&quot;&gt;&lt;/a&gt;14.8.2. 时间函数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;systime函数返回从1970年1月1日开始到当前时间(不计闰年)的整秒数。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systime()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; now = systime(); print now &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;strftime函数使用C库中的strftime函数格式化时间。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systime( [format specification][,timestamp] )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Table 3. 日期和时间格式说明符&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 格式 | 描述 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %a | 星期几的缩写(Sun) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %A | 星期几的完整写法(Sunday) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %b | 月名的缩写(Oct) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %B | 月名的完整写法(October) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %c | 本地日期和时间 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %d | 十进制日期 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %D | 日期 08/20/99 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %e | 日期，如果只有一位会补上一个空格 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %H | 用十进制表示24小时格式的小时 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %I | 用十进制表示12小时格式的小时 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %j | 从1月1日起一年中的第几天 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %m | 十进制表示的月份 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %M | 十进制表示的分钟 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %p | 12小时表示法(AM/PM) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %S | 十进制表示的秒 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %U | 十进制表示的一年中的第几个星期(星期天作为一个星期的开始) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %w | 十进制表示的星期几(星期天是0) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %W | 十进制表示的一年中的第几个星期(星期一作为一个星期的开始) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %x | 重新设置本地日期(08/20/99) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %X | 重新设置本地时间(12：00：00) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %y | 两位数字表示的年(99) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %Y | 当前月份 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %Z | 时区(PDT) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| %% | 百分号(%) |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; now=strftime( &amp;quot;%D&amp;quot;, systime() ); print now &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;apos;&amp;#123; now=strftime(&amp;quot;%m/%d/%y&amp;quot;); print now &amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;14-8-3-内建数学函数&quot;&gt;&lt;a href=&quot;#14-8-3-内建数学函数&quot; class=&quot;headerlink&quot; title=&quot;14.8.3. 内建数学函数&quot;&gt;&lt;/a&gt;14.8.3. 内建数学函数&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Table 4.&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名称&lt;/th&gt;
&lt;th&gt;返回值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;atan2(x,y)&lt;/td&gt;
&lt;td&gt;y,x范围内的余切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cos(x)&lt;/td&gt;
&lt;td&gt;余弦函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;exp(x)&lt;/td&gt;
&lt;td&gt;求幂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int(x)&lt;/td&gt;
&lt;td&gt;取整&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log(x)&lt;/td&gt;
&lt;td&gt;自然对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rand()&lt;/td&gt;
&lt;td&gt;随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sin(x)&lt;/td&gt;
&lt;td&gt;正弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sqrt(x)&lt;/td&gt;
&lt;td&gt;平方根&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;srand(x)&lt;/td&gt;
&lt;td&gt;x是rand()函数的种子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int(x)&lt;/td&gt;
&lt;td&gt;取整，过程没有舍入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rand()&lt;/td&gt;
&lt;td&gt;产生一个大于等于0而小于1的随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;14-8-4-自定义函数&quot;&gt;&lt;a href=&quot;#14-8-4-自定义函数&quot; class=&quot;headerlink&quot; title=&quot;14.8.4. 自定义函数&quot;&gt;&lt;/a&gt;14.8.4. 自定义函数&lt;/h4&gt;&lt;p&gt;在awk中还可自定义函数，格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function name ( parameter, parameter, parameter, ... ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                statements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return expression                  # the return statement and expression are optional&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;15-How-to&quot;&gt;&lt;a href=&quot;#15-How-to&quot; class=&quot;headerlink&quot; title=&quot;15. How-to&quot;&gt;&lt;/a&gt;15. How-to&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如何把一行竖排的数据转换成横排？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;awk &amp;apos;&amp;#123;printf(&amp;quot;%s,&amp;quot;,$1)&amp;#125;&amp;apos; filename&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GPL协议，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;第一次发布时间:2004年8月6日&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://it-ebooks.flygon.net/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Grep学习笔记</title>
    <link href="http://it-ebooks.flygon.net/grep-note/"/>
    <id>http://it-ebooks.flygon.net/grep-note/</id>
    <published>2016-03-13T03:50:37.000Z</published>
    <updated>2016-03-13T03:50:34.287Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GPL协议，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年7月16日&lt;/p&gt;
&lt;p&gt;更新时间：2005年8月24日&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2875182&quot;&gt;1. grep简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2811728&quot;&gt;2. grep正则表达式元字符集（基本集）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810259&quot;&gt;3. 用于egrep和 grep -E的元字符扩展集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810362&quot;&gt;4. POSIX字符类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810577&quot;&gt;5. Grep命令选项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861634&quot;&gt;6. 实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861748&quot;&gt;7. 技巧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-grep简介&quot;&gt;&lt;a href=&quot;#1-grep简介&quot; class=&quot;headerlink&quot; title=&quot;1. grep简介&quot;&gt;&lt;/a&gt;1. grep简介&lt;/h2&gt;&lt;p&gt;grep（global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。Unix的grep家族包括grep、egrep和fgrep。egrep和fgrep的命令只跟grep有很小不同。egrep是grep的扩展，支持更多的re元字符，fgrep就是fixed grep或fast grep，它们把所有的字母都看作单词，也就是说，正则表达式中的元字符表示回其自身的字面意义，不再特殊。linux使用GNU版本的grep。它功能更强，可以通过-G、-E、-F命令行选项来使用egrep和fgrep的功能。&lt;/p&gt;
&lt;p&gt;grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到屏幕，不影响原文件内容。&lt;/p&gt;
&lt;p&gt;grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果模板搜索成功，则返回0，如果搜索不成功，则返回1，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。&lt;/p&gt;
&lt;h2 id=&quot;2-grep正则表达式元字符集（基本集）&quot;&gt;&lt;a href=&quot;#2-grep正则表达式元字符集（基本集）&quot; class=&quot;headerlink&quot; title=&quot;2. grep正则表达式元字符集（基本集）&quot;&gt;&lt;/a&gt;2. grep正则表达式元字符集（基本集）&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定行的开始 如：&amp;apos;^grep&amp;apos;匹配所有以grep开头的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定行的结束 如：&amp;apos;grep$&amp;apos;匹配所有以grep结尾的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配一个非换行符的字符 如：&amp;apos;gr.p&amp;apos;匹配gr后接一个任意字符，然后是p。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配零个或多个先前字符 如：&amp;apos;*grep&amp;apos;匹配所有一个或多个空格后紧跟grep的行。 .*一起用代表任意字符。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配一个指定范围内的字符，如&amp;apos;[Gg]rep&amp;apos;匹配Grep和grep。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[^]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配一个不在指定范围内的字符，如：&amp;apos;[^A-FH-Z]rep&amp;apos;匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\(..\)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;标记匹配字符，如&amp;apos;\(love\)&amp;apos;，love被标记为1。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;lt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定单词的开始，如:&amp;apos;\&amp;amp;lt;grep&amp;apos;匹配包含以grep开头的单词的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定单词的结束，如&amp;apos;grep\&amp;amp;gt;&amp;apos;匹配包含以grep结尾的单词的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x\&amp;#123;m\&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;重复字符x，m次，如：&amp;apos;0\&amp;#123;5\&amp;#125;&amp;apos;匹配包含5个o的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x\&amp;#123;m,\&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;重复字符x,至少m次，如：&amp;apos;o\&amp;#123;5,\&amp;#125;&amp;apos;匹配至少有5个o的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x\&amp;#123;m,n\&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;重复字符x，至少m次，不多于n次，如：&amp;apos;o\&amp;#123;5,10\&amp;#125;&amp;apos;匹配5--10个o的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配文字和数字字符，也就是[A-Za-z0-9]，如：&amp;apos;G\w*p&amp;apos;匹配以G后跟零个或多个文字或数字字符，然后是p。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\W&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\w的反置形式，匹配一个或多个非单词字符，如点号句号等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单词锁定符，如: &amp;apos;\bgrep\b&amp;apos;只匹配grep。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-用于egrep和-grep-E的元字符扩展集&quot;&gt;&lt;a href=&quot;#3-用于egrep和-grep-E的元字符扩展集&quot; class=&quot;headerlink&quot; title=&quot;3. 用于egrep和 grep -E的元字符扩展集&quot;&gt;&lt;/a&gt;3. 用于egrep和 grep -E的元字符扩展集&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配一个或多个先前的字符。如：&amp;apos;[a-z]+able&amp;apos;，匹配一个或多个小写字母后跟able的串，如loveable,enable,disable等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配零个或多个先前的字符。如：&amp;apos;gr p&amp;apos;匹配gr后跟一个或没有字符，然后是p的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a|b|c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配a或b或c。如：grep|sed匹配grep或sed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;分组符号，如：love(able|rs)ov+匹配loveable或lovers，匹配一个或多个ov。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x&amp;#123;m&amp;#125;,x&amp;#123;m,&amp;#125;,x&amp;#123;m,n&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;作用同x\&amp;#123;m\&amp;#125;,x\&amp;#123;m,\&amp;#125;,x\&amp;#123;m,n\&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;4-POSIX字符类&quot;&gt;&lt;a href=&quot;#4-POSIX字符类&quot; class=&quot;headerlink&quot; title=&quot;4. POSIX字符类&quot;&gt;&lt;/a&gt;4. POSIX字符类&lt;/h2&gt;&lt;p&gt;为了在不同国家的字符编码中保持一至，POSIX(The Portable Operating System Interface)增加了特殊的字符类，如[:alnum:]是A-Za-z0-9的另一个写法。要把它们放到[]号内才能成为正则表达式，如[A-Za-z0-9]或[[:alnum:]]。在linux下的grep除fgrep外，都支持POSIX的字符类。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[:alnum:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;文字数字字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:alpha:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;文字字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:digit:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;数字字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:graph:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;非空字符（非空格、控制字符）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:lower:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;小写字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:cntrl:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;控制字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:print:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;非空字符（包括空格）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:punct:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;标点符号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:space:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;所有空白字符（新行，空格，制表符）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:upper:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;大写字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[:xdigit:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;十六进制数字（0-9，a-f，A-F）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;5-Grep命令选项&quot;&gt;&lt;a href=&quot;#5-Grep命令选项&quot; class=&quot;headerlink&quot; title=&quot;5. Grep命令选项&quot;&gt;&lt;/a&gt;5. Grep命令选项&lt;/h2&gt;&lt;p&gt;&lt;code&gt;-&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同时显示匹配行上下的？行，如：grep -2 pattern filename同时显示匹配行的上下2行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-b&lt;/code&gt;，&lt;code&gt;--byte-offset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打印匹配行前面打印该行所在的块号码。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-c&lt;/code&gt;,&lt;code&gt;--count&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;只打印匹配的行数，不显示匹配的内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-f File&lt;/code&gt;，&lt;code&gt;--file=File&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从文件中提取模板。空文件中包含0个模板，所以什么都不匹配。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-h&lt;/code&gt;，&lt;code&gt;--no-filename&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当搜索多个文件时，不显示匹配文件名前缀。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-i&lt;/code&gt;，&lt;code&gt;--ignore-case&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;忽略大小写差别。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-q&lt;/code&gt;，&lt;code&gt;--quiet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;取消显示，只返回退出状态。0则表示找到了匹配的行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-l&lt;/code&gt;，&lt;code&gt;--files-with-matches&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打印匹配模板的文件清单。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-L&lt;/code&gt;，&lt;code&gt;--files-without-match&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打印不匹配模板的文件清单。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-n&lt;/code&gt;，&lt;code&gt;--line-number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在匹配的行前面打印行号。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-s&lt;/code&gt;，&lt;code&gt;--silent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不显示关于不存在或者无法读取文件的错误信息。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-v&lt;/code&gt;，&lt;code&gt;--revert-match&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;反检索，只显示不匹配的行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-w&lt;/code&gt;，&lt;code&gt;--word-regexp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果被\&amp;lt;和\&amp;gt;引用，就把表达式做为一个单词搜索。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-V&lt;/code&gt;，&lt;code&gt;--version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示软件版本信息。&lt;/p&gt;
&lt;h2 id=&quot;6-实例&quot;&gt;&lt;a href=&quot;#6-实例&quot; class=&quot;headerlink&quot; title=&quot;6. 实例&quot;&gt;&lt;/a&gt;6. 实例&lt;/h2&gt;&lt;p&gt;要用好grep这个工具，其实就是要写好正则表达式，所以这里不对grep的所有功能进行实例讲解，只列几个例子，讲解一个正则表达式的写法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ ls | grep &amp;#39;^a&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过管道过滤ls输出的内容，只显示以a开头的行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ grep &amp;#39;test&amp;#39; d*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示所有以d开头的文件中包含test的行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ grep &amp;#39;test&amp;#39; aa bb cc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示在aa，bb，cc文件中匹配test的行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ grep &amp;#39;[a-z]\{5\}&amp;#39; aa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示所有包含每个字符串至少有5个连续小写字符的字符串的行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ grep &amp;#39;w\(es\)t.*\1&amp;#39; aa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果west被匹配，则es就被存储到内存中，并标记为1，然后搜索任意个字符（.&lt;em&gt;），这些字符后面紧跟着另外一个es（\1），找到就显示该行。如果用egrep或grep -E，就不用”\”号进行转义，直接写成’w(es)t.&lt;/em&gt;\1’就可以了。&lt;/p&gt;
&lt;h2 id=&quot;7-技巧&quot;&gt;&lt;a href=&quot;#7-技巧&quot; class=&quot;headerlink&quot; title=&quot;7. 技巧&quot;&gt;&lt;/a&gt;7. 技巧&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在结果集中显示彩色的字符。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export GREP_OPTIONS=&amp;apos;--color=always&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export GREP_COLOR=&amp;apos;1;32&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004 本文遵从GPL协议，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年7月16日&lt;/p&gt;
&lt;p&gt;更新时间：2005年8月24日&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://it-ebooks.flygon.net/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>VIM 学习笔记</title>
    <link href="http://it-ebooks.flygon.net/vim-note/"/>
    <id>http://it-ebooks.flygon.net/vim-note/</id>
    <published>2016-03-13T03:50:08.000Z</published>
    <updated>2016-03-13T03:50:56.537Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2005，2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间:2005年07月18日&lt;/p&gt;
&lt;p&gt;更新时间:2006年05月22日&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VI编辑器是类UNIX系统中最常用到的编辑器，VIM是VI编辑器的改良版本。本笔记是我在使用vim时记录下来的备忘录，内容不是很全面，详细介绍可参考&lt;a href=&quot;http://vimdoc.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://vimdoc.sourceforge.net/&lt;/a&gt;网站。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2875106&quot;&gt;1. 普通模式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811719&quot;&gt;1.1. 编辑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810258&quot;&gt;1.2. 光标移动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810380&quot;&gt;2. 编辑模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810410&quot;&gt;3. 命令模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861464&quot;&gt;4. vimrc配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-普通模式&quot;&gt;&lt;a href=&quot;#1-普通模式&quot; class=&quot;headerlink&quot; title=&quot;1. 普通模式&quot;&gt;&lt;/a&gt;1. 普通模式&lt;/h2&gt;&lt;p&gt;在shell中直接打vim filename就会进入普通模式。在这个状态，我们可以通过不同的按键对文件进行操作和切换到其它模式。按“:”可切换到命令模式，按i，o，a可进入编辑模。&lt;/p&gt;
&lt;h3 id=&quot;1-1-编辑&quot;&gt;&lt;a href=&quot;#1-1-编辑&quot; class=&quot;headerlink&quot; title=&quot;1.1. 编辑&quot;&gt;&lt;/a&gt;1.1. 编辑&lt;/h3&gt;&lt;p&gt;&lt;code&gt;i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进入编辑模式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;o&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在当前位置下插入一空行，进入编辑模式，光标位于空行的最开头。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;光标后移一个字符，进入编辑模式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这入可视模式，可用高亮的色块选择内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;x or DEL键&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除当前字符，删除内容保存在缓冲区。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;左右字符互换。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除当前行，删除内容保存在缓冲区。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ddp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上下两行的内容互换。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;d$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除当前光标至行尾的所有内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dG&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除从当前行至文件未尾的所有行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;u&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;undo。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进地visual模式，移动光标可选择文本。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把当前行复制到缓冲区中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;p&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把缓冲区中的文本插入到当前位置。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;ay&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把当前行复制到a缓冲区。可用26个字母命名多个缓冲区。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;ap&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把a缓冲区中的文本插入当前位置。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;J&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上下两行合并成一行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;英文句点的作用是重复执行上次执行的命令，如你按了”ap插入a缓冲区的内容，那你就可按”.”来重复这个操作。&lt;/p&gt;
&lt;h3 id=&quot;1-2-光标移动&quot;&gt;&lt;a href=&quot;#1-2-光标移动&quot; class=&quot;headerlink&quot; title=&quot;1.2. 光标移动&quot;&gt;&lt;/a&gt;1.2. 光标移动&lt;/h3&gt;&lt;p&gt;&lt;code&gt;h，j，k，l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在vim中，除了可使用光标键在移动光标外，还有一种更方便的光标移动方式。就是使用h，j，k，l这四个键来移动光标。h控制光标左移，j控制光标下移，k控制光标上移，l控制光标右移。通过使用这四个字母键就可使我们的手不用移动即可控制光标的移动。刚开始使用可能会有些不习惯，但熟练使用后你会发觉你的输入速度提高不少，强烈建议喜欢vim的朋友使用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;光标移动到行尾。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;G&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;光标移动到文档末尾。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;H,L&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;H控制光标移动到当前屏幕头，L控制光标移动到当前屏幕尾。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{，}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;{控制光标上移一个段落，}控制光标下移一个段落&lt;/p&gt;
&lt;h2 id=&quot;2-编辑模式&quot;&gt;&lt;a href=&quot;#2-编辑模式&quot; class=&quot;headerlink&quot; title=&quot;2. 编辑模式&quot;&gt;&lt;/a&gt;2. 编辑模式&lt;/h2&gt;&lt;p&gt;&lt;code&gt;ESC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;退出编辑状态。&lt;/p&gt;
&lt;h2 id=&quot;3-命令模式&quot;&gt;&lt;a href=&quot;#3-命令模式&quot; class=&quot;headerlink&quot; title=&quot;3. 命令模式&quot;&gt;&lt;/a&gt;3. 命令模式&lt;/h2&gt;&lt;p&gt;在普通模式上按“:”就可进入命令模式，在左下屏幕我们输入一些操作指令。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:q!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不保存退出vim。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:w&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保存文档，但不退出vim。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:x&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保存退出vim。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:! command&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;运行shell命令。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:e filename&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;编辑/打开一个文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:s/emacs/vim&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在当前行中把第一个emacs替换成vim。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:s/emacs/vim/g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把当前行中所有的emacs替换成vim。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:%s/emacs/vim/g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在全局范围内把emacs替换成vim。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:reg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;列出缓冲区内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:set all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;列出所有参数的配置情况。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:tabe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;新建一个标签页。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:tabn or :tabp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;切换到下一个\上一个标签页。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:close&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关闭当前标签页。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:qa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关闭所有标签页退出。&lt;/p&gt;
&lt;h2 id=&quot;4-vimrc配置&quot;&gt;&lt;a href=&quot;#4-vimrc配置&quot; class=&quot;headerlink&quot; title=&quot;4. vimrc配置&quot;&gt;&lt;/a&gt;4. vimrc配置&lt;/h2&gt;&lt;p&gt;在命令模式下用set命令设置的东西是不能保存的，下次打开vim时又要重新设置。所以vim提供了一个配置文件叫vimrc，可以保存你的配置信息。该文件在Debian系统中位于/etc/vim/目录下。在该文件中，以双引号开头的是注释。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;set autoindent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自动缩排，如当前行是从第3个字符的位置开始编辑的,按回车后光标会自动定位在下一行第三3个字符的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;set paste&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;置粘贴模式，这样粘贴过来的程序代码就不会错位了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开文件时自动回到上次编辑位置。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if has(&amp;quot;autocmd&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   autocmd BufRead *.txt set tw=78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   autocmd BufReadPost *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      \ if line(&amp;quot;&amp;apos;\&amp;quot;&amp;quot;) &amp;amp;gt; 0 &amp;amp;&amp;amp; line (&amp;quot;&amp;apos;\&amp;quot;&amp;quot;) &amp;amp;lt;= line(&amp;quot;$&amp;quot;) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      \   exe &amp;quot;normal g&amp;apos;\&amp;quot;&amp;quot; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      \ endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2005，2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间:2005年07月18日&lt;/p&gt;
&lt;p&gt;更新时间:2006年05月22日&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://it-ebooks.flygon.net/tags/linux/"/>
    
      <category term="vim" scheme="http://it-ebooks.flygon.net/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Sed 学习笔记</title>
    <link href="http://it-ebooks.flygon.net/sed-note/"/>
    <id>http://it-ebooks.flygon.net/sed-note/</id>
    <published>2016-03-13T03:50:05.000Z</published>
    <updated>2016-03-13T03:50:46.975Z</updated>
    
    <content type="html">&lt;p&gt;作者：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004，2005, 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间:2004年09月20日&lt;/p&gt;
&lt;p&gt;最近更新:2005年12月22日，增加小技巧章节。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2874786&quot;&gt;1. Sed简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875182&quot;&gt;2. 定址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2811706&quot;&gt;3. Sed命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810348&quot;&gt;4. 选项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810450&quot;&gt;5. 元字符集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861508&quot;&gt;6. 实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808415&quot;&gt;7. 脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808439&quot;&gt;8. 小技巧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-Sed简介&quot;&gt;&lt;a href=&quot;#1-Sed简介&quot; class=&quot;headerlink&quot; title=&quot;1. Sed简介&quot;&gt;&lt;/a&gt;1. Sed简介&lt;/h2&gt;&lt;p&gt;sed是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。以下介绍的是Gnu版本的Sed 3.02。&lt;/p&gt;
&lt;h2 id=&quot;2-定址&quot;&gt;&lt;a href=&quot;#2-定址&quot; class=&quot;headerlink&quot; title=&quot;2. 定址&quot;&gt;&lt;/a&gt;2. 定址&lt;/h2&gt;&lt;p&gt;可以通过定址来定位你所希望编辑的行，该地址用数字构成，用逗号分隔的两个行数表示以这两行为起止的行的范围（包括行数表示的那两行）。如1，3表示1，2，3行，美元符号($)表示最后一行。范围可以通过数据，正则表达式或者二者结合的方式确定 。&lt;/p&gt;
&lt;h2 id=&quot;3-Sed命令&quot;&gt;&lt;a href=&quot;#3-Sed命令&quot; class=&quot;headerlink&quot; title=&quot;3. Sed命令&quot;&gt;&lt;/a&gt;3. Sed命令&lt;/h2&gt;&lt;p&gt;调用sed命令有两种形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sed [options] &amp;#39;command&amp;#39; file(s)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sed [options] -f scriptfile file(s)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在当前行后面加入一行文本。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b lable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用新的文本改变本行的文本。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;从模板块（Pattern space）位置删除行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除模板块的第一行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在当前行上面插入文本。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;拷贝模板块的内容到内存中的缓冲区。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;H&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;追加模板块的内容到内存中的缓冲区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;获得内存缓冲区的内容，并替代当前模板块中的文本。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;获得内存缓冲区的内容，并追加到当前模板块文本的后面。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;列表不能打印字符的清单。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打印模板块的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;P（大写）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打印模板块的第一行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;退出Sed。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;从file中读行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t label&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;T label&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;写并追加模板块到file末尾。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;写并追加模板块的第一行到file末尾。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;表示后面的命令对所有没有被选定的行发生作用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s/re/string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用string替换正则表达式re。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打印当前行号码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;把注释扩展到下一个换行符以前。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以下的是替换标记&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;g&lt;/code&gt;表示行内全面替换。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;p&lt;/code&gt;表示打印行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;w&lt;/code&gt;表示把行写入一个文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;x&lt;/code&gt;表示互换模板块中的文本和缓冲区中的文本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;y&lt;/code&gt;表示把一个字符翻译为另外的字符（但是不用于正则表达式）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-选项&quot;&gt;&lt;a href=&quot;#4-选项&quot; class=&quot;headerlink&quot; title=&quot;4. 选项&quot;&gt;&lt;/a&gt;4. 选项&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-e command, --expression=command&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;允许多台编辑。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-h, --help&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印帮助，并显示bug列表的地址。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-n, --quiet, --silent&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;取消默认输出。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-f, --filer=script-file&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;引导sed脚本文件名。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-V, --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印版本和版权信息。&lt;/p&gt;
&lt;h2 id=&quot;5-元字符集&quot;&gt;&lt;a href=&quot;#5-元字符集&quot; class=&quot;headerlink&quot; title=&quot;5. 元字符集&quot;&gt;&lt;/a&gt;5. 元字符集&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定行的开始 如：/^sed/匹配所有以sed开头的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定行的结束 如：/sed$/匹配所有以sed结尾的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配一个非换行符的字符 如：/s.d/匹配s后接一个任意字符，然后是d。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配零或多个字符 如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配一个指定范围内的字符，如/[Ss]ed/匹配sed和Sed。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[^]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\(..\)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;保存匹配的字符，如s/\(love\)able/\1rs，loveable被替换成lovers。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;保存搜索字符用来替换其他字符，如s/love/**&amp;amp;**/，love这成**love**。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;lt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定单词的开始，如:/\&amp;amp;lt;love/匹配包含以love开头的单词的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;锚定单词的结束，如/love\&amp;amp;gt;/匹配包含以love结尾的单词的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x\&amp;#123;m\&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;重复字符x，m次，如：/0\&amp;#123;5\&amp;#125;/匹配包含5个o的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x\&amp;#123;m,\&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;重复字符x,至少m次，如：/o\&amp;#123;5,\&amp;#125;/匹配至少有5个o的行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x\&amp;#123;m,n\&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;重复字符x，至少m次，不多于n次，如：/o\&amp;#123;5,10\&amp;#125;/匹配5--10个o的行。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-实例&quot;&gt;&lt;a href=&quot;#6-实例&quot; class=&quot;headerlink&quot; title=&quot;6. 实例&quot;&gt;&lt;/a&gt;6. 实例&lt;/h2&gt;&lt;p&gt;删除：d命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;2d&amp;#39; example&lt;/code&gt;—–删除example文件的第二行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;2,$d&amp;#39; example&lt;/code&gt;—–删除example文件的第二行到末尾所有行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;$d&amp;#39; example&lt;/code&gt;—–删除example文件的最后一行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;/test/&amp;#39;d example&lt;/code&gt;—–删除example文件所有包含test的行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;替换：s命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;s/test/mytest/g&amp;#39; example&lt;/code&gt;—–在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed -n &amp;#39;s/^test/mytest/p&amp;#39; example&lt;/code&gt;—–(-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;s/^192.168.0.1/&amp;amp;localhost/&amp;#39; example&lt;/code&gt;—–&amp;amp;符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加localhost，变成192.168.0.1localhost。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed -n &amp;#39;s/\(love\)able/\1rs/p&amp;#39; example&lt;/code&gt;—–love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;s#10#100#g&amp;#39; example&lt;/code&gt;—–不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选定行的范围：逗号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed -n &amp;#39;/test/,/check/p&amp;#39; example&lt;/code&gt;—–所有在模板test和check所确定的范围内的行都被打印。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed -n &amp;#39;5,/^test/p&amp;#39; example&lt;/code&gt;—–打印从第五行开始到第一个包含以test开始的行之间的所有行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed &amp;#39;/test/,/check/s/$/sed test/&amp;#39; example&lt;/code&gt;—–对于模板test和west之间的行，每行的末尾用字符串sed test替换。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多点编辑：e命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed -e &amp;#39;1,5d&amp;#39; -e &amp;#39;s/test/check/&amp;#39; example&lt;/code&gt;—–(-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ sed --expression=&amp;#39;s/test/check/&amp;#39; --expression=&amp;#39;/love/d&amp;#39; example&lt;/code&gt;—–一个比-e更好的命令是–expression。它能给sed表达式赋值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从文件读入：r命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed &amp;#39;/test/r file&amp;#39; example&lt;/code&gt;—–file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写入文件：w命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed -n &amp;#39;/test/w file&amp;#39; example&lt;/code&gt;—–在example中所有包含test的行都被写入file里。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加命令：a命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed &amp;#39;/^test/a\\---&amp;amp;gt;this is a example&amp;#39; example&amp;lt;&lt;/code&gt;—–’this is a example’被追加到以test开头的行后面，sed要求命令a后面有一个反斜杠。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;插入：i命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sed &amp;apos;/test/i\\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------------------&amp;apos; example&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果test被匹配，则把反斜杠后面的文本插入到匹配行的前面。&lt;/p&gt;
&lt;p&gt;下一个：n命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed &amp;#39;/test/{ n; s/aa/bb/; }&amp;#39; example&lt;/code&gt;—–如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;变形：y命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed &amp;#39;1,10y/abcde/ABCDE/&amp;#39; example&lt;/code&gt;—–把1–10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;退出：q命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed &amp;#39;10q&amp;#39; example&lt;/code&gt;—–打印完第10行后，退出sed。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保持和获取：h命令和G命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed -e &amp;#39;/test/h&amp;#39; -e &amp;#39;$G example&lt;/code&gt;—–在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保持和互换：h命令和x命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sed -e &amp;#39;/test/h&amp;#39; -e &amp;#39;/check/x&amp;#39; example&lt;/code&gt; —–互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;7-脚本&quot;&gt;&lt;a href=&quot;#7-脚本&quot; class=&quot;headerlink&quot; title=&quot;7. 脚本&quot;&gt;&lt;/a&gt;7. 脚本&lt;/h2&gt;&lt;p&gt;Sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。&lt;/p&gt;
&lt;h2 id=&quot;8-小技巧&quot;&gt;&lt;a href=&quot;#8-小技巧&quot; class=&quot;headerlink&quot; title=&quot;8. 小技巧&quot;&gt;&lt;/a&gt;8. 小技巧&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在sed的命令行中引用shell变量时要使用双引号，而不是通常所用的单引号。下面是一个根据name变量的内容来删除named.conf文件中zone段的脚本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name=&amp;apos;zone\ &amp;quot;localhost&amp;quot;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed &amp;quot;/$name/,/&amp;#125;;/d&amp;quot; named.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作者：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004，2005, 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间:2004年09月20日&lt;/p&gt;
&lt;p&gt;最近更新:2005年12月22日，增加小技巧章节。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://it-ebooks.flygon.net/tags/linux/"/>
    
  </entry>
  
</feed>
