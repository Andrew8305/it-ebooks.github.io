<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>计算机电子书</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://it-ebooks.flygon.net/"/>
  <updated>2016-04-18T02:38:26.059Z</updated>
  <id>http://it-ebooks.flygon.net/</id>
  
  <author>
    <name>Flygon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nmap 参考指南</title>
    <link href="http://it-ebooks.flygon.net/nmap-man-page/"/>
    <id>http://it-ebooks.flygon.net/nmap-man-page/</id>
    <published>2016-04-18T02:37:52.000Z</published>
    <updated>2016-04-18T02:38:26.059Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/nmap-man-page.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/nmap-man-page/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/nmap-man-page&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/nmap-man-page&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/nmap-man-page&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/nmap-man-page.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透" scheme="http://it-ebooks.flygon.net/tags/%E6%B8%97%E9%80%8F/"/>
    
      <category term="网络" scheme="http://it-ebooks.flygon.net/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="nmap" scheme="http://it-ebooks.flygon.net/tags/nmap/"/>
    
  </entry>
  
  <entry>
    <title>Tornado 概览</title>
    <link href="http://it-ebooks.flygon.net/tornado-overview/"/>
    <id>http://it-ebooks.flygon.net/tornado-overview/</id>
    <published>2016-04-18T02:22:59.000Z</published>
    <updated>2016-04-18T02:23:29.792Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/tornado-overview.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/tornado-overview/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/tornado-overview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/tornado-overview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/tornado-overview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/tornado-overview.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="tornado" scheme="http://it-ebooks.flygon.net/tags/tornado/"/>
    
  </entry>
  
  <entry>
    <title>Beautiful Soup 4.2.0 文档</title>
    <link href="http://it-ebooks.flygon.net/bs4-doc/"/>
    <id>http://it-ebooks.flygon.net/bs4-doc/</id>
    <published>2016-04-18T02:01:54.000Z</published>
    <updated>2016-04-18T02:05:47.896Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.crummy.com/software/BeautifulSoup/bs4/doc/_images/6.1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://beautifulsoup.readthedocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://readthedocs.org/projects/beautifulsoup/downloads/htmlzip/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://readthedocs.org/projects/beautifulsoup/downloads/epub/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.crummy.com/software/BeautifulSoup/bs4/doc/_images/6.1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Jims 的学习笔记</title>
    <link href="http://it-ebooks.flygon.net/note-by-jims/"/>
    <id>http://it-ebooks.flygon.net/note-by-jims/</id>
    <published>2016-04-18T01:39:30.000Z</published>
    <updated>2016-04-18T01:40:56.532Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/note-by-jims.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Awk 学习笔记&lt;/li&gt;
&lt;li&gt;Grep 学习笔记&lt;/li&gt;
&lt;li&gt;MySQL 学习笔记&lt;/li&gt;
&lt;li&gt;Python 学习笔记基础篇&lt;/li&gt;
&lt;li&gt;Python 学习笔记模块篇&lt;/li&gt;
&lt;li&gt;Sed 学习笔记&lt;/li&gt;
&lt;li&gt;Vim 学习笔记&lt;/li&gt;
&lt;li&gt;XML 学习笔记&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/note-by-jims/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/note-by-jims&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/note-by-jims&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/note-by-jims&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/note-by-jims.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Awk 学习笔记&lt;/li&gt;
&lt;li&gt;Grep 学习笔记&lt;/li&gt;
&lt;li&gt;MySQL 学习笔记&lt;/li&gt;
&lt;li&gt;Python 学习笔记基础篇&lt;/li&gt;
&lt;li&gt;Python 学习笔记模块篇&lt;/li&gt;
&lt;li&gt;Sed 学习笔记&lt;/li&gt;
&lt;li&gt;Vim 学习笔记&lt;/li&gt;
&lt;li&gt;XML 学习笔记&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="linux" scheme="http://it-ebooks.flygon.net/tags/linux/"/>
    
      <category term="mysql" scheme="http://it-ebooks.flygon.net/tags/mysql/"/>
    
      <category term="xml" scheme="http://it-ebooks.flygon.net/tags/xml/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出ES6</title>
    <link href="http://it-ebooks.flygon.net/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-es6/"/>
    <id>http://it-ebooks.flygon.net/深入浅出-es6/</id>
    <published>2016-04-17T06:36:09.000Z</published>
    <updated>2016-04-17T06:37:16.093Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.infoq.com/resource/minibooks/ES6-in-Depth/zh/cover/200.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://www.infoq.com/cn/minibooks/ES6-in-Depth&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入浅出ES6&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/minibooks/download/ES6-in-Depth&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/minibooks/download/ES6-in-Depth?bookFormat=epub&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/minibooks/download/ES6-in-Depth?bookFormat=mobi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.infoq.com/resource/minibooks/ES6-in-Depth/zh/cover/200.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://www.infoq.com/cn/minibooks/ES6-in-Depth&quot;&gt;深入浅出ES6&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://it-ebooks.flygon.net/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Java 8 简明教程</title>
    <link href="http://it-ebooks.flygon.net/modern-java/"/>
    <id>http://it-ebooks.flygon.net/modern-java/</id>
    <published>2016-04-16T02:34:53.000Z</published>
    <updated>2016-04-16T02:42:52.113Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;“Java并没有没落，人们很快就会发现这一点”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;欢迎阅读我编写的&lt;a href=&quot;https://jdk8.java.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java 8&lt;/a&gt;介绍。本教程将带领你一步一步地认识这门语言的新特性。通过简单明了的代码示例，你将会学习到如何使用默认接口方法，Lambda表达式，方法引用和重复注解。看完这篇教程后，你还将对最新推出的&lt;a href=&quot;http://download.java.net/jdk8/docs/api/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API&lt;/a&gt;有一定的了解，例如：流控制，函数式接口，map扩展和新的时间日期API等等。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;允许在接口中有默认方法实现&quot;&gt;&lt;a href=&quot;#允许在接口中有默认方法实现&quot; class=&quot;headerlink&quot; title=&quot;允许在接口中有默认方法实现&quot;&gt;&lt;/a&gt;允许在接口中有默认方法实现&lt;/h3&gt;&lt;p&gt;Java 8 允许我们使用default关键字，为接口声明添加非抽象的方法实现。这个特性又被称为&lt;strong&gt;扩展方法&lt;/strong&gt;。下面是我们的第一个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;interface Formula &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double calculate(int a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default double sqrt(int a) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Math.sqrt(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在接口Formula中，除了抽象方法caculate以外，还定义了一个默认方法sqrt。Formula的实现类只需要实现抽象方法caculate就可以了。默认方法sqrt可以直接使用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Formula formula = new Formula() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double calculate(int a) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return sqrt(a * 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formula.calculate(100);     // 100.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formula.sqrt(16);           // 4.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;formula对象以匿名对象的形式实现了Formula接口。代码很啰嗦：用了6行代码才实现了一个简单的计算功能：a*100开平方根。我们在下一节会看到，Java 8 还有一种更加优美的方法，能够实现包含单个函数的对象。&lt;/p&gt;
&lt;h3 id=&quot;Lambda表达式&quot;&gt;&lt;a href=&quot;#Lambda表达式&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式&quot;&gt;&lt;/a&gt;Lambda表达式&lt;/h3&gt;&lt;p&gt;让我们从最简单的例子开始，来学习如何对一个string列表进行排序。我们首先使用Java 8之前的方法来实现：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; names = Arrays.asList(&amp;quot;peter&amp;quot;, &amp;quot;anna&amp;quot;, &amp;quot;mike&amp;quot;, &amp;quot;xenia&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Collections.sort(names, new Comparator&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int compare(String a, String b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return b.compareTo(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;静态工具方法Collections.sort接受一个list，和一个Comparator接口作为输入参数，Comparator的实现类可以对输入的list中的元素进行比较。通常情况下，你可以直接用创建匿名Comparator对象，并把它作为参数传递给sort方法。&lt;/p&gt;
&lt;p&gt;除了创建匿名对象以外，Java 8 还提供了一种更简洁的方式，Lambda表达式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Collections.sort(names, (String a, String b) -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return b.compareTo(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你可以看到，这段代码就比之前的更加简短和易读。但是，它还可以更加简短：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Collections.sort(names, (String a, String b) -&amp;gt; b.compareTo(a));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只要一行代码，包含了方法体。你甚至可以连大括号对{}和return关键字都省略不要。不过这还不是最短的写法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Collections.sort(names, (a, b) -&amp;gt; b.compareTo(a));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Java编译器能够自动识别参数的类型，所以你就可以省略掉类型不写。让我们再深入地研究一下lambda表达式的威力吧。&lt;/p&gt;
&lt;h3 id=&quot;函数式接口&quot;&gt;&lt;a href=&quot;#函数式接口&quot; class=&quot;headerlink&quot; title=&quot;函数式接口&quot;&gt;&lt;/a&gt;函数式接口&lt;/h3&gt;&lt;p&gt;Lambda表达式如何匹配Java的类型系统？每一个lambda都能够通过一个特定的接口，与一个给定的类型进行匹配。一个所谓的函数式接口必须要有且仅有一个抽象方法声明。每个与之对应的lambda表达式必须要与抽象方法的声明相匹配。由于默认方法不是抽象的，因此你可以在你的函数式接口里任意添加默认方法。&lt;/p&gt;
&lt;p&gt;任意只包含一个抽象方法的接口，我们都可以用来做成lambda表达式。为了让你定义的接口满足要求，你应当在接口前加上@FunctionalInterface 标注。编译器会注意到这个标注，如果你的接口中定义了第二个抽象方法的话，编译器会抛出异常。&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@FunctionalInterface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;interface Converter&amp;lt;F, T&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    T convert(F from);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Converter&amp;lt;String, Integer&amp;gt; converter = (from) -&amp;gt; Integer.valueOf(from);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Integer converted = converter.convert(&amp;quot;123&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(converted);    // 123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，如果你不写@FunctionalInterface 标注，程序也是正确的。&lt;/p&gt;
&lt;h3 id=&quot;方法和构造函数引用&quot;&gt;&lt;a href=&quot;#方法和构造函数引用&quot; class=&quot;headerlink&quot; title=&quot;方法和构造函数引用&quot;&gt;&lt;/a&gt;方法和构造函数引用&lt;/h3&gt;&lt;p&gt;上面的代码实例可以通过静态方法引用，使之更加简洁：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Converter&amp;lt;String, Integer&amp;gt; converter = Integer::valueOf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Integer converted = converter.convert(&amp;quot;123&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(converted);   // 123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Java 8 允许你通过::关键字获取方法或者构造函数的的引用。上面的例子就演示了如何引用一个静态方法。而且，我们还可以对一个对象的方法进行引用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Something &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String startsWith(String s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return String.valueOf(s.charAt(0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Something something = new Something();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Converter&amp;lt;String, String&amp;gt; converter = something::startsWith;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String converted = converter.convert(&amp;quot;Java&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(converted);    // &amp;quot;J&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让我们看看如何使用::关键字引用构造函数。首先我们定义一个示例bean，包含不同的构造方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Person &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String firstName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String lastName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Person() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Person(String firstName, String lastName) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.firstName = firstName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.lastName = lastName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来，我们定义一个person工厂接口，用来创建新的person对象：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;interface PersonFactory&amp;lt;P extends Person&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P create(String firstName, String lastName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后我们通过构造函数引用来把所有东西拼到一起，而不是像以前一样，通过手动实现一个工厂来这么做。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PersonFactory&amp;lt;Person&amp;gt; personFactory = Person::new;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person person = personFactory.create(&amp;quot;Peter&amp;quot;, &amp;quot;Parker&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们通过Person::new来创建一个Person类构造函数的引用。Java编译器会自动地选择合适的构造函数来匹配PersonFactory.create函数的签名，并选择正确的构造函数形式。&lt;/p&gt;
&lt;h3 id=&quot;Lambda的范围&quot;&gt;&lt;a href=&quot;#Lambda的范围&quot; class=&quot;headerlink&quot; title=&quot;Lambda的范围&quot;&gt;&lt;/a&gt;Lambda的范围&lt;/h3&gt;&lt;p&gt;对于lambdab表达式外部的变量，其访问权限的粒度与匿名对象的方式非常类似。你能够访问局部对应的外部区域的局部final变量，以及成员变量和静态变量。&lt;/p&gt;
&lt;h4 id=&quot;访问局部变量&quot;&gt;&lt;a href=&quot;#访问局部变量&quot; class=&quot;headerlink&quot; title=&quot;访问局部变量&quot;&gt;&lt;/a&gt;访问局部变量&lt;/h4&gt;&lt;p&gt;我们可以访问lambda表达式外部的final局部变量：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;final int num = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Converter&amp;lt;Integer, String&amp;gt; stringConverter =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (from) -&amp;gt; String.valueOf(from + num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringConverter.convert(2);     // 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是与匿名对象不同的是，变量num并不需要一定是final。下面的代码依然是合法的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int num = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Converter&amp;lt;Integer, String&amp;gt; stringConverter =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (from) -&amp;gt; String.valueOf(from + num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringConverter.convert(2);     // 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，num在编译的时候被隐式地当做final变量来处理。下面的代码就不合法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int num = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Converter&amp;lt;Integer, String&amp;gt; stringConverter =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (from) -&amp;gt; String.valueOf(from + num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num = 3;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在lambda表达式内部企图改变num的值也是不允许的。&lt;/p&gt;
&lt;h4 id=&quot;访问成员变量和静态变量&quot;&gt;&lt;a href=&quot;#访问成员变量和静态变量&quot; class=&quot;headerlink&quot; title=&quot;访问成员变量和静态变量&quot;&gt;&lt;/a&gt;访问成员变量和静态变量&lt;/h4&gt;&lt;p&gt;与局部变量不同，我们在lambda表达式的内部能获取到对成员变量或静态变量的读写权。这种访问行为在匿名对象里是非常典型的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Lambda4 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static int outerStaticNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int outerNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void testScopes() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Converter&amp;lt;Integer, String&amp;gt; stringConverter1 = (from) -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outerNum = 23;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return String.valueOf(from);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Converter&amp;lt;Integer, String&amp;gt; stringConverter2 = (from) -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outerStaticNum = 72;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return String.valueOf(from);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;访问默认接口方法&quot;&gt;&lt;a href=&quot;#访问默认接口方法&quot; class=&quot;headerlink&quot; title=&quot;访问默认接口方法&quot;&gt;&lt;/a&gt;访问默认接口方法&lt;/h4&gt;&lt;p&gt;还记得第一节里面formula的那个例子么？ 接口Formula定义了一个默认的方法sqrt，该方法能够访问formula所有的对象实例，包括匿名对象。这个对lambda表达式来讲则无效。&lt;/p&gt;
&lt;p&gt;默认方法无法在lambda表达式内部被访问。因此下面的代码是无法通过编译的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Formula formula = (a) -&amp;gt; sqrt( a * 100);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;内置函数式接口&quot;&gt;&lt;a href=&quot;#内置函数式接口&quot; class=&quot;headerlink&quot; title=&quot;内置函数式接口&quot;&gt;&lt;/a&gt;内置函数式接口&lt;/h3&gt;&lt;p&gt;JDK 1.8 API中包含了很多内置的函数式接口。有些是在以前版本的Java中大家耳熟能详的，例如Comparator接口，或者Runnable接口。对这些现成的接口进行实现，可以通过@FunctionalInterface 标注来启用Lambda功能支持。&lt;/p&gt;
&lt;p&gt;此外，Java 8 API 还提供了很多新的函数式接口，来降低程序员的工作负担。有些新的接口已经在&lt;a href=&quot;https://code.google.com/p/guava-libraries/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google Guava&lt;/a&gt;库中很有名了。如果你对这些库很熟的话，你甚至闭上眼睛都能够想到，这些接口在类库的实现过程中起了多么大的作用。&lt;/p&gt;
&lt;h4 id=&quot;Predicates&quot;&gt;&lt;a href=&quot;#Predicates&quot; class=&quot;headerlink&quot; title=&quot;Predicates&quot;&gt;&lt;/a&gt;Predicates&lt;/h4&gt;&lt;p&gt;Predicate是一个布尔类型的函数，该函数只有一个输入参数。Predicate接口包含了多种默认方法，用于处理复杂的逻辑动词（and, or，negate）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Predicate&amp;lt;String&amp;gt; predicate = (s) -&amp;gt; s.length() &amp;gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;predicate.test(&amp;quot;foo&amp;quot;);              // true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;predicate.negate().test(&amp;quot;foo&amp;quot;);     // false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Predicate&amp;lt;Boolean&amp;gt; nonNull = Objects::nonNull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Predicate&amp;lt;Boolean&amp;gt; isNull = Objects::isNull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Predicate&amp;lt;String&amp;gt; isEmpty = String::isEmpty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Predicate&amp;lt;String&amp;gt; isNotEmpty = isEmpty.negate();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Functions&quot;&gt;&lt;a href=&quot;#Functions&quot; class=&quot;headerlink&quot; title=&quot;Functions&quot;&gt;&lt;/a&gt;Functions&lt;/h4&gt;&lt;p&gt;Function接口接收一个参数，并返回单一的结果。默认方法可以将多个函数串在一起（compse, andThen）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Function&amp;lt;String, Integer&amp;gt; toInteger = Integer::valueOf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Function&amp;lt;String, String&amp;gt; backToString = toInteger.andThen(String::valueOf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;backToString.apply(&amp;quot;123&amp;quot;);     // &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Suppliers&quot;&gt;&lt;a href=&quot;#Suppliers&quot; class=&quot;headerlink&quot; title=&quot;Suppliers&quot;&gt;&lt;/a&gt;Suppliers&lt;/h4&gt;&lt;p&gt;Supplier接口产生一个给定类型的结果。与Function不同的是，Supplier没有输入参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Supplier&amp;lt;Person&amp;gt; personSupplier = Person::new;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;personSupplier.get();   // new Person&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Consumers&quot;&gt;&lt;a href=&quot;#Consumers&quot; class=&quot;headerlink&quot; title=&quot;Consumers&quot;&gt;&lt;/a&gt;Consumers&lt;/h4&gt;&lt;p&gt;Consumer代表了在一个输入参数上需要进行的操作。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Consumer&amp;lt;Person&amp;gt; greeter = (p) -&amp;gt; System.out.println(&amp;quot;Hello, &amp;quot; + p.firstName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greeter.accept(new Person(&amp;quot;Luke&amp;quot;, &amp;quot;Skywalker&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Comparators&quot;&gt;&lt;a href=&quot;#Comparators&quot; class=&quot;headerlink&quot; title=&quot;Comparators&quot;&gt;&lt;/a&gt;Comparators&lt;/h4&gt;&lt;p&gt;Comparator接口在早期的Java版本中非常著名。Java 8 为这个接口添加了不同的默认方法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Comparator&amp;lt;Person&amp;gt; comparator = (p1, p2) -&amp;gt; p1.firstName.compareTo(p2.firstName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person p1 = new Person(&amp;quot;John&amp;quot;, &amp;quot;Doe&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person p2 = new Person(&amp;quot;Alice&amp;quot;, &amp;quot;Wonderland&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comparator.compare(p1, p2);             // &amp;gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comparator.reversed().compare(p1, p2);  // &amp;lt; 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Optionals&quot;&gt;&lt;a href=&quot;#Optionals&quot; class=&quot;headerlink&quot; title=&quot;Optionals&quot;&gt;&lt;/a&gt;Optionals&lt;/h4&gt;&lt;p&gt;Optional不是一个函数式接口，而是一个精巧的工具接口，用来防止NullPointerEception产生。这个概念在下一节会显得很重要，所以我们在这里快速地浏览一下Optional的工作原理。&lt;/p&gt;
&lt;p&gt;Optional是一个简单的值容器，这个值可以是null，也可以是non-null。考虑到一个方法可能会返回一个non-null的值，也可能返回一个空值。为了不直接返回null，我们在Java 8中就返回一个Optional.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Optional&amp;lt;String&amp;gt; optional = Optional.of(&amp;quot;bam&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;optional.isPresent();           // true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;optional.get();                 // &amp;quot;bam&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;optional.orElse(&amp;quot;fallback&amp;quot;);    // &amp;quot;bam&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;optional.ifPresent((s) -&amp;gt; System.out.println(s.charAt(0)));     // &amp;quot;b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Streams&quot;&gt;&lt;a href=&quot;#Streams&quot; class=&quot;headerlink&quot; title=&quot;Streams&quot;&gt;&lt;/a&gt;Streams&lt;/h3&gt;&lt;p&gt;java.util.Stream表示了某一种元素的序列，在这些元素上可以进行各种操作。Stream操作可以是中间操作，也可以是完结操作。完结操作会返回一个某种类型的值，而中间操作会返回流对象本身，并且你可以通过多次调用同一个流操作方法来将操作结果串起来（就像StringBuffer的append方法一样————译者注）。Stream是在一个源的基础上创建出来的，例如java.util.Collection中的list或者set（map不能作为Stream的源）。Stream操作往往可以通过顺序或者并行两种方式来执行。&lt;/p&gt;
&lt;p&gt;我们先了解一下序列流。首先，我们通过string类型的list的形式创建示例数据：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; stringCollection = new ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;ddd2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;aaa2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;bbb1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;aaa1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;bbb3&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;ccc&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;bbb2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringCollection.add(&amp;quot;ddd1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Java 8中的Collections类的功能已经有所增强，你可以之直接通过调用Collections.stream()或者Collection.parallelStream()方法来创建一个流对象。下面的章节会解释这个最常用的操作。&lt;/p&gt;
&lt;h4 id=&quot;Filter&quot;&gt;&lt;a href=&quot;#Filter&quot; class=&quot;headerlink&quot; title=&quot;Filter&quot;&gt;&lt;/a&gt;Filter&lt;/h4&gt;&lt;p&gt;Filter接受一个predicate接口类型的变量，并将所有流对象中的元素进行过滤。该操作是一个中间操作，因此它允许我们在返回结果的基础上再进行其他的流操作（forEach）。ForEach接受一个function接口类型的变量，用来执行对每一个元素的操作。ForEach是一个中止操作。它不返回流，所以我们不能再调用其他的流操作。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .filter((s) -&amp;gt; s.startsWith(&amp;quot;a&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .forEach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &amp;quot;aaa2&amp;quot;, &amp;quot;aaa1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Sorted&quot;&gt;&lt;a href=&quot;#Sorted&quot; class=&quot;headerlink&quot; title=&quot;Sorted&quot;&gt;&lt;/a&gt;Sorted&lt;/h4&gt;&lt;p&gt;Sorted是一个中间操作，能够返回一个排过序的流对象的视图。流对象中的元素会默认按照自然顺序进行排序，除非你自己指定一个Comparator接口来改变排序规则。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .sorted()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .filter((s) -&amp;gt; s.startsWith(&amp;quot;a&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .forEach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &amp;quot;aaa1&amp;quot;, &amp;quot;aaa2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一定要记住，sorted只是创建一个流对象排序的视图，而不会改变原来集合中元素的顺序。原来string集合中的元素顺序是没有改变的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(stringCollection);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// ddd2, aaa2, bbb1, aaa1, bbb3, ccc, bbb2, ddd1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Map&quot;&gt;&lt;a href=&quot;#Map&quot; class=&quot;headerlink&quot; title=&quot;Map&quot;&gt;&lt;/a&gt;Map&lt;/h4&gt;&lt;p&gt;map是一个对于流对象的中间操作，通过给定的方法，它能够把流对象中的每一个元素对应到另外一个对象上。下面的例子就演示了如何把每个string都转换成大写的string. 不但如此，你还可以把每一种对象映射成为其他类型。对于带泛型结果的流对象，具体的类型还要由传递给map的泛型方法来决定。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .map(String::toUpperCase)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .sorted((a, b) -&amp;gt; b.compareTo(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .forEach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &amp;quot;DDD2&amp;quot;, &amp;quot;DDD1&amp;quot;, &amp;quot;CCC&amp;quot;, &amp;quot;BBB3&amp;quot;, &amp;quot;BBB2&amp;quot;, &amp;quot;AAA2&amp;quot;, &amp;quot;AAA1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Match&quot;&gt;&lt;a href=&quot;#Match&quot; class=&quot;headerlink&quot; title=&quot;Match&quot;&gt;&lt;/a&gt;Match&lt;/h4&gt;&lt;p&gt;匹配操作有多种不同的类型，都是用来判断某一种规则是否与流对象相互吻合的。所有的匹配操作都是终结操作，只返回一个boolean类型的结果。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;boolean anyStartsWithA =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .anyMatch((s) -&amp;gt; s.startsWith(&amp;quot;a&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(anyStartsWithA);      // true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;boolean allStartsWithA =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .allMatch((s) -&amp;gt; s.startsWith(&amp;quot;a&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(allStartsWithA);      // false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;boolean noneStartsWithZ =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .noneMatch((s) -&amp;gt; s.startsWith(&amp;quot;z&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(noneStartsWithZ);      // true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Count&quot;&gt;&lt;a href=&quot;#Count&quot; class=&quot;headerlink&quot; title=&quot;Count&quot;&gt;&lt;/a&gt;Count&lt;/h4&gt;&lt;p&gt;Count是一个终结操作，它的作用是返回一个数值，用来标识当前流对象中包含的元素数量。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;long startsWithB =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .filter((s) -&amp;gt; s.startsWith(&amp;quot;b&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .count();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(startsWithB);    // 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Reduce&quot;&gt;&lt;a href=&quot;#Reduce&quot; class=&quot;headerlink&quot; title=&quot;Reduce&quot;&gt;&lt;/a&gt;Reduce&lt;/h4&gt;&lt;p&gt;该操作是一个终结操作，它能够通过某一个方法，对元素进行削减操作。该操作的结果会放在一个Optional变量里返回。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Optional&amp;lt;String&amp;gt; reduced =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stringCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .sorted()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .reduce((s1, s2) -&amp;gt; s1 + &amp;quot;#&amp;quot; + s2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reduced.ifPresent(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &amp;quot;aaa1#aaa2#bbb1#bbb2#bbb3#ccc#ddd1#ddd2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Parallel-Streams&quot;&gt;&lt;a href=&quot;#Parallel-Streams&quot; class=&quot;headerlink&quot; title=&quot;Parallel Streams&quot;&gt;&lt;/a&gt;Parallel Streams&lt;/h3&gt;&lt;p&gt;像上面所说的，流操作可以是顺序的，也可以是并行的。顺序操作通过单线程执行，而并行操作则通过多线程执行。&lt;/p&gt;
&lt;p&gt;下面的例子就演示了如何使用并行流进行操作来提高运行效率，代码非常简单。&lt;/p&gt;
&lt;p&gt;首先我们创建一个大的list，里面的元素都是唯一的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int max = 1000000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; values = new ArrayList&amp;lt;&amp;gt;(max);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (int i = 0; i &amp;lt; max; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UUID uuid = UUID.randomUUID();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    values.add(uuid.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在，我们测量一下对这个集合进行排序所使用的时间。&lt;/p&gt;
&lt;h4 id=&quot;顺序排序&quot;&gt;&lt;a href=&quot;#顺序排序&quot; class=&quot;headerlink&quot; title=&quot;顺序排序&quot;&gt;&lt;/a&gt;顺序排序&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;long t0 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long count = values.stream().sorted().count();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long t1 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(String.format(&amp;quot;sequential sort took: %d ms&amp;quot;, millis));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// sequential sort took: 899 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;并行排序&quot;&gt;&lt;a href=&quot;#并行排序&quot; class=&quot;headerlink&quot; title=&quot;并行排序&quot;&gt;&lt;/a&gt;并行排序&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;long t0 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long count = values.parallelStream().sorted().count();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long t1 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(String.format(&amp;quot;parallel sort took: %d ms&amp;quot;, millis));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// parallel sort took: 472 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如你所见，所有的代码段几乎都相同，唯一的不同就是把stream()改成了parallelStream(), 结果并行排序快了50%。&lt;/p&gt;
&lt;h3 id=&quot;Map-1&quot;&gt;&lt;a href=&quot;#Map-1&quot; class=&quot;headerlink&quot; title=&quot;Map&quot;&gt;&lt;/a&gt;Map&lt;/h3&gt;&lt;p&gt;正如前面已经提到的那样，map是不支持流操作的。而更新后的map现在则支持多种实用的新方法，来完成常规的任务。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;Integer, String&amp;gt; map = new HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (int i = 0; i &amp;lt; 10; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map.putIfAbsent(i, &amp;quot;val&amp;quot; + i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.forEach((id, val) -&amp;gt; System.out.println(val));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码风格是完全自解释的：putIfAbsent避免我们将null写入；forEach接受一个消费者对象，从而将操作实施到每一个map中的值上。&lt;/p&gt;
&lt;p&gt;下面的这个例子展示了如何使用函数来计算map的编码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;map.computeIfPresent(3, (num, val) -&amp;gt; val + num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.get(3);             // val33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.computeIfPresent(9, (num, val) -&amp;gt; null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.containsKey(9);     // false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.computeIfAbsent(23, num -&amp;gt; &amp;quot;val&amp;quot; + num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.containsKey(23);    // true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.computeIfAbsent(3, num -&amp;gt; &amp;quot;bam&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.get(3);             // val33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来，我们将学习，当给定一个key值时，如何把一个实例从对应的key中移除：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;map.remove(3, &amp;quot;val3&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.get(3);             // val33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.remove(3, &amp;quot;val33&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.get(3);             // null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一个有用的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;map.getOrDefault(42, &amp;quot;not found&amp;quot;);  // not found&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将map中的实例合并也是非常容易的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;map.merge(9, &amp;quot;val9&amp;quot;, (value, newValue) -&amp;gt; value.concat(newValue));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.get(9);             // val9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.merge(9, &amp;quot;concat&amp;quot;, (value, newValue) -&amp;gt; value.concat(newValue));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map.get(9);             // val9concat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;合并操作先看map中是否没有特定的key/value存在，如果是，则把key/value存入map，否则merging函数就会被调用，对现有的数值进行修改。&lt;/p&gt;
&lt;h3 id=&quot;时间日期API&quot;&gt;&lt;a href=&quot;#时间日期API&quot; class=&quot;headerlink&quot; title=&quot;时间日期API&quot;&gt;&lt;/a&gt;时间日期API&lt;/h3&gt;&lt;p&gt;Java 8 包含了全新的时间日期API，这些功能都放在了java.time包下。新的时间日期API是基于Joda-Time库开发的，但是也不尽相同。下面的例子就涵盖了大多数新的API的重要部分。&lt;/p&gt;
&lt;h4 id=&quot;Clock&quot;&gt;&lt;a href=&quot;#Clock&quot; class=&quot;headerlink&quot; title=&quot;Clock&quot;&gt;&lt;/a&gt;Clock&lt;/h4&gt;&lt;p&gt;Clock提供了对当前时间和日期的访问功能。Clock是对当前时区敏感的，并可用于替代System.currentTimeMillis()方法来获取当前的毫秒时间。当前时间线上的时刻可以用Instance类来表示。Instance也能够用于创建原先的java.util.Date对象。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Clock clock = Clock.systemDefaultZone();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long millis = clock.millis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Instant instant = clock.instant();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Date legacyDate = Date.from(instant);   // legacy java.util.Date&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Timezones&quot;&gt;&lt;a href=&quot;#Timezones&quot; class=&quot;headerlink&quot; title=&quot;Timezones&quot;&gt;&lt;/a&gt;Timezones&lt;/h4&gt;&lt;p&gt;时区类可以用一个ZoneId来表示。时区类的对象可以通过静态工厂方法方便地获取。时区类还定义了一个偏移量，用来在当前时刻或某时间与目标时区时间之间进行转换。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(ZoneId.getAvailableZoneIds());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// prints all available timezone ids&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZoneId zone1 = ZoneId.of(&amp;quot;Europe/Berlin&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZoneId zone2 = ZoneId.of(&amp;quot;Brazil/East&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(zone1.getRules());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(zone2.getRules());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// ZoneRules[currentStandardOffset=+01:00]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// ZoneRules[currentStandardOffset=-03:00]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;LocalTime&quot;&gt;&lt;a href=&quot;#LocalTime&quot; class=&quot;headerlink&quot; title=&quot;LocalTime&quot;&gt;&lt;/a&gt;LocalTime&lt;/h4&gt;&lt;p&gt;本地时间类表示一个没有指定时区的时间，例如，10 p.m.或者17：30:15，下面的例子会用上面的例子定义的时区创建两个本地时间对象。然后我们会比较两个时间，并计算它们之间的小时和分钟的不同。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LocalTime now1 = LocalTime.now(zone1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LocalTime now2 = LocalTime.now(zone2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(now1.isBefore(now2));  // false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long hoursBetween = ChronoUnit.HOURS.between(now1, now2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long minutesBetween = ChronoUnit.MINUTES.between(now1, now2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(hoursBetween);       // -3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(minutesBetween);     // -239&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;LocalTime是由多个工厂方法组成，其目的是为了简化对时间对象实例的创建和操作，包括对时间字符串进行解析的操作。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LocalTime late = LocalTime.of(23, 59, 59);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(late);       // 23:59:59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DateTimeFormatter germanFormatter =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DateTimeFormatter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .ofLocalizedTime(FormatStyle.SHORT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .withLocale(Locale.GERMAN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LocalTime leetTime = LocalTime.parse(&amp;quot;13:37&amp;quot;, germanFormatter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(leetTime);   // 13:37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;LocalDate&quot;&gt;&lt;a href=&quot;#LocalDate&quot; class=&quot;headerlink&quot; title=&quot;LocalDate&quot;&gt;&lt;/a&gt;LocalDate&lt;/h4&gt;&lt;p&gt;本地时间表示了一个独一无二的时间，例如：2014-03-11。这个时间是不可变的，与LocalTime是同源的。下面的例子演示了如何通过加减日，月，年等指标来计算新的日期。记住，每一次操作都会返回一个新的时间对象。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LocalDate today = LocalDate.now();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LocalDate tomorrow = today.plus(1, ChronoUnit.DAYS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LocalDate yesterday = tomorrow.minusDays(2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LocalDate independenceDay = LocalDate.of(2014, Month.JULY, 4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DayOfWeek dayOfWeek = independenceDay.getDayOfWeek();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(dayOfWeek);    // FRIDAY&amp;lt;span style=&amp;quot;font-family: Georgia, &amp;apos;Times New Roman&amp;apos;, &amp;apos;Bitstream Charter&amp;apos;, Times, serif; font-size: 13px; line-height: 19px;&amp;quot;&amp;gt;Parsing a LocalDate from a string is just as simple as parsing a LocalTime:&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解析字符串并形成LocalDate对象，这个操作和解析LocalTime一样简单。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DateTimeFormatter germanFormatter =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DateTimeFormatter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .ofLocalizedDate(FormatStyle.MEDIUM)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .withLocale(Locale.GERMAN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LocalDate xmas = LocalDate.parse(&amp;quot;24.12.2014&amp;quot;, germanFormatter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(xmas);   // 2014-12-24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;LocalDateTime&quot;&gt;&lt;a href=&quot;#LocalDateTime&quot; class=&quot;headerlink&quot; title=&quot;LocalDateTime&quot;&gt;&lt;/a&gt;LocalDateTime&lt;/h4&gt;&lt;p&gt;LocalDateTime表示的是日期-时间。它将刚才介绍的日期对象和时间对象结合起来，形成了一个对象实例。LocalDateTime是不可变的，与LocalTime和LocalDate的工作原理相同。我们可以通过调用方法来获取日期时间对象中特定的数据域。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LocalDateTime sylvester = LocalDateTime.of(2014, Month.DECEMBER, 31, 23, 59, 59);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DayOfWeek dayOfWeek = sylvester.getDayOfWeek();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(dayOfWeek);      // WEDNESDAY&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Month month = sylvester.getMonth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(month);          // DECEMBER&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long minuteOfDay = sylvester.getLong(ChronoField.MINUTE_OF_DAY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(minuteOfDay);    // 1439&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果再加上的时区信息，LocalDateTime能够被转换成Instance实例。Instance能够被转换成以前的java.util.Date对象。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Instant instant = sylvester&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .atZone(ZoneId.systemDefault())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .toInstant();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Date legacyDate = Date.from(instant);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(legacyDate);     // Wed Dec 31 23:59:59 CET 2014&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;格式化日期-时间对象就和格式化日期对象或者时间对象一样。除了使用预定义的格式以外，我们还可以创建自定义的格式化对象，然后匹配我们自定义的格式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DateTimeFormatter formatter =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DateTimeFormatter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .ofPattern(&amp;quot;MMM dd, yyyy - HH:mm&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LocalDateTime parsed = LocalDateTime.parse(&amp;quot;Nov 03, 2014 - 07:13&amp;quot;, formatter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String string = formatter.format(parsed);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(string);     // Nov 03, 2014 - 07:13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不同于java.text.NumberFormat，新的DateTimeFormatter类是不可变的，也是线程安全的。&lt;/p&gt;
&lt;p&gt;更多的细节，请看&lt;a href=&quot;http://download.java.net/jdk8/docs/api/java/time/format/DateTimeFormatter.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Annotations&quot;&gt;&lt;a href=&quot;#Annotations&quot; class=&quot;headerlink&quot; title=&quot;Annotations&quot;&gt;&lt;/a&gt;Annotations&lt;/h3&gt;&lt;p&gt;Java 8中的注解是可重复的。让我们直接深入看看例子，弄明白它是什么意思。&lt;/p&gt;
&lt;p&gt;首先，我们定义一个包装注解，它包括了一个实际注解的数组&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@interface Hints &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Hint[] value();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@Repeatable(Hints.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface Hint &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String value();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只要在前面加上注解名：@Repeatable，Java 8 允许我们对同一类型使用多重注解，&lt;/p&gt;
&lt;p&gt;变体1：使用注解容器（老方法）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Hints(&amp;#123;@Hint(&amp;quot;hint1&amp;quot;), @Hint(&amp;quot;hint2&amp;quot;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Person &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;变体2：使用可重复注解（新方法）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Hint(&amp;quot;hint1&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@Hint(&amp;quot;hint2&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Person &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用变体2，Java编译器能够在内部自动对@Hint进行设置。这对于通过反射来读取注解信息来说，是非常重要的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hint hint = Person.class.getAnnotation(Hint.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(hint);                   // null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hints hints1 = Person.class.getAnnotation(Hints.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(hints1.value().length);  // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hint[] hints2 = Person.class.getAnnotationsByType(Hint.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(hints2.length);          // 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;尽管我们绝对不会在Person类上声明@Hints注解，但是它的信息仍然可以通过getAnnotation(Hints.class)来读取。并且，getAnnotationsByType方法会更方便，因为它赋予了所有@Hints注解标注的方法直接的访问权限。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Target(&amp;#123;ElementType.TYPE_PARAMETER, ElementType.TYPE_USE&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface MyAnnotation &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;先到这里&quot;&gt;&lt;a href=&quot;#先到这里&quot; class=&quot;headerlink&quot; title=&quot;先到这里&quot;&gt;&lt;/a&gt;先到这里&lt;/h3&gt;&lt;p&gt;我的Java 8编程指南就到此告一段落。当然，还有很多内容需要进一步研究和说明。这就需要靠读者您来对JDK 8进行探究了，例如：Arrays.parallelSort, StampedLock和CompletableFuture等等 ———— 我这里只是举几个例子而已。&lt;/p&gt;
&lt;p&gt;我希望这个博文能够对您有所帮助，也希望您阅读愉快。完整的教程源代码放在了&lt;a href=&quot;https://github.com/winterbe/java8-tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;上。您可以尽情地&lt;a href=&quot;https://github.com/winterbe/java8-tutorial/fork&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fork&lt;/a&gt;，并请通过&lt;a href=&quot;https://twitter.com/benontherun&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Twitter&lt;/a&gt;告诉我您的反馈。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文链接： &lt;a href=&quot;http://winterbe.com/posts/2014/03/16/java-8-tutorial/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;winterbe&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;翻译： &lt;a href=&quot;http://www.importnew.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ImportNew.com&lt;/a&gt; - &lt;a href=&quot;http://www.importnew.com/author/huangxiaofei&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;黄小非&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;译文链接： &lt;a href=&quot;http://www.importnew.com/10360.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.importnew.com/10360.html&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转载请保留原文出处、译者和译文链接。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;“Java并没有没落，人们很快就会发现这一点”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;欢迎阅读我编写的&lt;a href=&quot;https://jdk8.java.net/&quot;&gt;Java 8&lt;/a&gt;介绍。本教程将带领你一步一步地认识这门语言的新特性。通过简单明了的代码示例，你将会学习到如何使用默认接口方法，Lambda表达式，方法引用和重复注解。看完这篇教程后，你还将对最新推出的&lt;a href=&quot;http://download.java.net/jdk8/docs/api/&quot;&gt;API&lt;/a&gt;有一定的了解，例如：流控制，函数式接口，map扩展和新的时间日期API等等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://it-ebooks.flygon.net/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Modern Java - A Guide to Java 8</title>
    <link href="http://it-ebooks.flygon.net/modern-java-en/"/>
    <id>http://it-ebooks.flygon.net/modern-java-en/</id>
    <published>2016-04-16T02:34:53.000Z</published>
    <updated>2016-04-17T13:12:47.188Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/modern-java-a-guide-to-java8.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/winterbe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;winterbe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/winterbe/java8-tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;java8-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;https://github.com/winterbe/java8-tutorial/blob/master/LICENSE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/modern-java-a-guide-to-java8/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/modern-java-a-guide-to-java8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/modern-java-a-guide-to-java8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/modern-java-a-guide-to-java8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/modern-java-a-guide-to-java8.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/winterbe&quot;&gt;winterbe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/winterbe/java8-tutorial&quot;&gt;java8-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;https://github.com/winterbe/java8-tutorial/blob/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://it-ebooks.flygon.net/tags/java/"/>
    
      <category term="英文" scheme="http://it-ebooks.flygon.net/tags/%E8%8B%B1%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Rust Primer</title>
    <link href="http://it-ebooks.flygon.net/rust-primer/"/>
    <id>http://it-ebooks.flygon.net/rust-primer/</id>
    <published>2016-04-15T10:18:44.000Z</published>
    <updated>2016-04-15T10:21:01.949Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wayslog/rustprimer.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/rustcc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rustcc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/rustcc/RustPrimer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RustPrimer&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wayslog/rustprimer/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wayslog/rustprimer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wayslog/rustprimer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wayslog/rustprimer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wayslog/rustprimer.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/rustcc&quot;&gt;rustcc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/rustcc/RustPrimer&quot;&gt;RustPrimer&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="rust" scheme="http://it-ebooks.flygon.net/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>Rust 官方教程 中文版</title>
    <link href="http://it-ebooks.flygon.net/rust-book/"/>
    <id>http://it-ebooks.flygon.net/rust-book/</id>
    <published>2016-04-15T10:18:40.000Z</published>
    <updated>2016-04-15T10:19:35.211Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/kaisery/rust-book-chinese.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;rust-book-chinese&quot;&gt;rust-book-chinese&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/kaisery/rust-book-chinese/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/kaisery/rust-book-chinese&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/kaisery/rust-book-chinese&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/kaisery/rust-book-chinese&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/kaisery/rust-book-chinese.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;rust-book-chinese&quot;&gt;rust-book-chinese&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="rust" scheme="http://it-ebooks.flygon.net/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>Flarum 中文文档</title>
    <link href="http://it-ebooks.flygon.net/flarum-doc/"/>
    <id>http://it-ebooks.flygon.net/flarum-doc/</id>
    <published>2016-04-12T04:05:59.000Z</published>
    <updated>2016-04-12T04:07:11.268Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/justjavac/flarum.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/justjavac/flarum-doc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flarum-doc&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/justjavac/flarum/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/justjavac/flarum&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/justjavac/flarum&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/justjavac/flarum&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/justjavac/flarum.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/justjavac/flarum-doc&quot;&gt;flarum-doc&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://it-ebooks.flygon.net/tags/php/"/>
    
      <category term="flarum" scheme="http://it-ebooks.flygon.net/tags/flarum/"/>
    
  </entry>
  
  <entry>
    <title>Electron 中文文档</title>
    <link href="http://it-ebooks.flygon.net/electron-doc/"/>
    <id>http://it-ebooks.flygon.net/electron-doc/</id>
    <published>2016-04-07T08:05:39.000Z</published>
    <updated>2016-04-07T08:06:18.277Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/electron-doc.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/electron/electron/tree/master/docs-translations/zh-CN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Electron 中文文档&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/electron-doc/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/electron-doc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/electron-doc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/electron-doc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/electron-doc.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/electron/electron/tree/master/docs-translations/zh-CN&quot;&gt;Electron 中文文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://it-ebooks.flygon.net/tags/javascript/"/>
    
      <category term="electron" scheme="http://it-ebooks.flygon.net/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>看云推荐文档打包</title>
    <link href="http://it-ebooks.flygon.net/kancloud-recommended-docs/"/>
    <id>http://it-ebooks.flygon.net/kancloud-recommended-docs/</id>
    <published>2016-04-06T09:37:25.000Z</published>
    <updated>2016-04-06T11:11:06.060Z</updated>
    
    <content type="html">&lt;p&gt;来源：&lt;a href=&quot;http://www.kancloud.cn/explore&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;广场 - 看云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：EPUB&lt;/p&gt;
&lt;p&gt;大小：512 MB (537,798,360 字节)&lt;/p&gt;
&lt;p&gt;日期：2016.4.6&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;内容列表&quot;&gt;&lt;a href=&quot;#内容列表&quot; class=&quot;headerlink&quot; title=&quot;内容列表&quot;&gt;&lt;/a&gt;内容列表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;(译) JSON-RPC 2.0 规范(中文版).epub&lt;/li&gt;
&lt;li&gt;00后：移动互联网崛起新势力.epub&lt;/li&gt;
&lt;li&gt;12条专业的JavaScript规则.epub&lt;/li&gt;
&lt;li&gt;2014互联网女皇报告：去适应用户的习惯是明智之举.epub&lt;/li&gt;
&lt;li&gt;2015年50+ CSS 工具、框架、库合集.epub&lt;/li&gt;
&lt;li&gt;2015年50+ JavaScript 工具、资源合集.epub&lt;/li&gt;
&lt;li&gt;2015智能可穿戴市场白皮书.epub&lt;/li&gt;
&lt;li&gt;2015杭州•云栖大会 【电子会刊】.epub&lt;/li&gt;
&lt;li&gt;21分钟 MySQL 入门教程.epub&lt;/li&gt;
&lt;li&gt;3D软件渲染器入门.epub&lt;/li&gt;
&lt;li&gt;90后：互联网时代原生民研究报告.epub&lt;/li&gt;
&lt;li&gt;A Compact React Cookbook.epub&lt;/li&gt;
&lt;li&gt;ACM算法修练之道.epub&lt;/li&gt;
&lt;li&gt;Airbnb JavaScript 代码规范（ES6）.epub&lt;/li&gt;
&lt;li&gt;Ajax 专栏.epub&lt;/li&gt;
&lt;li&gt;Android Gradle 用户指南.epub&lt;/li&gt;
&lt;li&gt;Android SDK上手指南.epub&lt;/li&gt;
&lt;li&gt;android SDK开发.epub&lt;/li&gt;
&lt;li&gt;Android Studio新手完全指引.epub&lt;/li&gt;
&lt;li&gt;Android Studio详细教程.mobi&lt;/li&gt;
&lt;li&gt;Android Training官方培训课程中文版.epub&lt;/li&gt;
&lt;li&gt;Android 开发最佳实践.epub&lt;/li&gt;
&lt;li&gt;Android 开源数字图像处理.epub&lt;/li&gt;
&lt;li&gt;Android6.0 新特性详解.epub&lt;/li&gt;
&lt;li&gt;Android四大组件.epub&lt;/li&gt;
&lt;li&gt;Android屏幕适配全攻略(最权威的官方适配指导).epub&lt;/li&gt;
&lt;li&gt;Android开发高手进阶.epub&lt;/li&gt;
&lt;li&gt;Android性能优化篇 [ 谷歌官方 ].epub&lt;/li&gt;
&lt;li&gt;Android最佳实践.epub&lt;/li&gt;
&lt;li&gt;android源码解析.epub&lt;/li&gt;
&lt;li&gt;Android特效专辑.epub&lt;/li&gt;
&lt;li&gt;Android自定义view.epub&lt;/li&gt;
&lt;li&gt;Android（OpenCV）开发.epub&lt;/li&gt;
&lt;li&gt;AngularJS入门教程.epub&lt;/li&gt;
&lt;li&gt;AngularJS学习笔记.epub&lt;/li&gt;
&lt;li&gt;AngularJS最佳实践和风格指南.epub&lt;/li&gt;
&lt;li&gt;ANSI Common Lisp 中文翻譯版.epub&lt;/li&gt;
&lt;li&gt;API Design And Documentation.epub&lt;/li&gt;
&lt;li&gt;App Inventor 编程实例及指南.epub&lt;/li&gt;
&lt;li&gt;AsciiDoc简明指南.epub&lt;/li&gt;
&lt;li&gt;AUI在线文档.epub&lt;/li&gt;
&lt;li&gt;Blink 中文文档.epub&lt;/li&gt;
&lt;li&gt;Building Web Apps with Go.epub&lt;/li&gt;
&lt;li&gt;C 语言编程透视.epub&lt;/li&gt;
&lt;li&gt;Chef之道.epub&lt;/li&gt;
&lt;li&gt;Chrome开发者工具不完全指南.epub&lt;/li&gt;
&lt;li&gt;CodeIgniter3.0 中文用户指南.epub&lt;/li&gt;
&lt;li&gt;CoffeeScript Cookbook.epub&lt;/li&gt;
&lt;li&gt;Composer中文文档.epub&lt;/li&gt;
&lt;li&gt;Computer Science Field Guide.epub&lt;/li&gt;
&lt;li&gt;Core Data by tutorials 笔记.epub&lt;/li&gt;
&lt;li&gt;csphere-docker-training.epub&lt;/li&gt;
&lt;li&gt;css知多少.epub&lt;/li&gt;
&lt;li&gt;CSS秘密花园.epub&lt;/li&gt;
&lt;li&gt;C语言学习笔记.epub&lt;/li&gt;
&lt;li&gt;destoon快速入门.epub&lt;/li&gt;
&lt;li&gt;developerWorks 中国 - Spark 实战系列.epub&lt;/li&gt;
&lt;li&gt;DevOps的概念与实践（2014年）.epub&lt;/li&gt;
&lt;li&gt;Docker —— 从入门到实践.epub&lt;/li&gt;
&lt;li&gt;Docker中文指南.epub&lt;/li&gt;
&lt;li&gt;Docker周报.epub&lt;/li&gt;
&lt;li&gt;Docker在PHP项目开发环境中的应用.epub&lt;/li&gt;
&lt;li&gt;Docker源码分析.epub&lt;/li&gt;
&lt;li&gt;Docker简单介绍.epub&lt;/li&gt;
&lt;li&gt;ECMAScript 6入门.epub&lt;/li&gt;
&lt;li&gt;Effective Go中文版.epub&lt;/li&gt;
&lt;li&gt;ElasticSearch 权威指南.epub&lt;/li&gt;
&lt;li&gt;Essential Netty in Action 《Netty 实战(精髓)》.epub&lt;/li&gt;
&lt;li&gt;Express框架.epub&lt;/li&gt;
&lt;li&gt;Facebook内部高效工作PPT指南.epub&lt;/li&gt;
&lt;li&gt;fouber的前端工程专题.epub&lt;/li&gt;
&lt;li&gt;Fresco 中文版.epub&lt;/li&gt;
&lt;li&gt;GIS搜狗地图开发.epub&lt;/li&gt;
&lt;li&gt;Git Cheat Sheet中文版.epub&lt;/li&gt;
&lt;li&gt;Git Community Book 中文版.epub&lt;/li&gt;
&lt;li&gt;Git Magic.epub&lt;/li&gt;
&lt;li&gt;Gitbook使用入门.epub&lt;/li&gt;
&lt;li&gt;Github 漫游指南.epub&lt;/li&gt;
&lt;li&gt;GitHub秘籍（中文版）.epub&lt;/li&gt;
&lt;li&gt;Git结合GitHub常用命令学习手册.epub&lt;/li&gt;
&lt;li&gt;GoodUI设计技巧 [ 译 ].epub&lt;/li&gt;
&lt;li&gt;Google 开源项目风格指南 (中文版).epub&lt;/li&gt;
&lt;li&gt;Go入门指南.epub&lt;/li&gt;
&lt;li&gt;Go示例学.epub&lt;/li&gt;
&lt;li&gt;Go轻松学.epub&lt;/li&gt;
&lt;li&gt;Gradle 2 用户指南.epub&lt;/li&gt;
&lt;li&gt;Grunt中文文档.epub&lt;/li&gt;
&lt;li&gt;gulp 入门指南.epub&lt;/li&gt;
&lt;li&gt;Hacking With Swift 学习笔记.epub&lt;/li&gt;
&lt;li&gt;hadoop-notebook.epub&lt;/li&gt;
&lt;li&gt;Haskell趣学指南.epub&lt;/li&gt;
&lt;li&gt;Hello Sea.js.epub&lt;/li&gt;
&lt;li&gt;Hive应用.epub&lt;/li&gt;
&lt;li&gt;HomeKit 开发指南.epub&lt;/li&gt;
&lt;li&gt;HTML5游戏入门（下）之Javascript.epub&lt;/li&gt;
&lt;li&gt;HTTP API 设计指南.epub&lt;/li&gt;
&lt;li&gt;HTTP cookies 详解.epub&lt;/li&gt;
&lt;li&gt;HTTP 接口设计指北.epub&lt;/li&gt;
&lt;li&gt;HTTP-2 与 WEB 性能优化.epub&lt;/li&gt;
&lt;li&gt;HTTP-2 十分钟速知.epub&lt;/li&gt;
&lt;li&gt;HTTP2讲解.epub&lt;/li&gt;
&lt;li&gt;io.js API 中文文档.epub&lt;/li&gt;
&lt;li&gt;iOS 中的设计模式 (Swift版本).epub&lt;/li&gt;
&lt;li&gt;iOS 保持界面流畅的技巧.epub&lt;/li&gt;
&lt;li&gt;iOS及Mac开源项目和学习资料【超级全面】.epub&lt;/li&gt;
&lt;li&gt;iOS安全系列.epub&lt;/li&gt;
&lt;li&gt;iOS应用架构谈（更新中）.epub&lt;/li&gt;
&lt;li&gt;iOS开发指南.epub&lt;/li&gt;
&lt;li&gt;iOS开发进阶.epub&lt;/li&gt;
&lt;li&gt;iOS技术文档.epub&lt;/li&gt;
&lt;li&gt;iOS知识小集.epub&lt;/li&gt;
&lt;li&gt;iphone游戏开发专栏.epub&lt;/li&gt;
&lt;li&gt;iScroll 5 API 中文版 .epub&lt;/li&gt;
&lt;li&gt;isobar前端代码规范及最佳实践.epub&lt;/li&gt;
&lt;li&gt;JavaScript Promise迷你书（中文版）.epub&lt;/li&gt;
&lt;li&gt;JavaScript 新手教程.epub&lt;/li&gt;
&lt;li&gt;JavaScript.epub&lt;/li&gt;
&lt;li&gt;JavaScript设计模式.epub&lt;/li&gt;
&lt;li&gt;JavaSE由浅入深.mobi&lt;/li&gt;
&lt;li&gt;java多线程学习.epub&lt;/li&gt;
&lt;li&gt;Java学习总结.epub&lt;/li&gt;
&lt;li&gt;Java开发之路.epub&lt;/li&gt;
&lt;li&gt;java核心技术.epub&lt;/li&gt;
&lt;li&gt;Java源码解析.epub&lt;/li&gt;
&lt;li&gt;Java菜鸟成长日记.epub&lt;/li&gt;
&lt;li&gt;Java设计模式菜鸟系列.epub&lt;/li&gt;
&lt;li&gt;Java资源大全中文版.epub&lt;/li&gt;
&lt;li&gt;Jinja2中文文档.epub&lt;/li&gt;
&lt;li&gt;JNI-NDK开发指南.epub&lt;/li&gt;
&lt;li&gt;jQuery1.8.0帮助文档.epub&lt;/li&gt;
&lt;li&gt;JSON 核心教程.epub&lt;/li&gt;
&lt;li&gt;JS前端开发群月报.epub&lt;/li&gt;
&lt;li&gt;JS前端开发群规 - 492107297.epub&lt;/li&gt;
&lt;li&gt;js高手进阶之路：underscore源码经典.epub&lt;/li&gt;
&lt;li&gt;Knockout应用开发指南.epub&lt;/li&gt;
&lt;li&gt;Laravel 5 學習筆記.epub&lt;/li&gt;
&lt;li&gt;Laravel 5.1 中文文档.epub&lt;/li&gt;
&lt;li&gt;Laravel 5中文文档.epub&lt;/li&gt;
&lt;li&gt;Laravel4.2 入门.epub&lt;/li&gt;
&lt;li&gt;Learn Javascript.epub&lt;/li&gt;
&lt;li&gt;learnyounode 简体中文版.epub&lt;/li&gt;
&lt;li&gt;LinkedIn架构这十年.epub&lt;/li&gt;
&lt;li&gt;Linux 设备驱动 (第三版).epub&lt;/li&gt;
&lt;li&gt;Linux入门及进阶.epub&lt;/li&gt;
&lt;li&gt;Lua代码风格指南.epub&lt;/li&gt;
&lt;li&gt;Lua学习笔记.epub&lt;/li&gt;
&lt;li&gt;Lua编程入门.epub&lt;/li&gt;
&lt;li&gt;Lumen 中文文档.epub&lt;/li&gt;
&lt;li&gt;Mac OSX 新手入門.epub&lt;/li&gt;
&lt;li&gt;Mac 开发配置手册.epub&lt;/li&gt;
&lt;li&gt;Make 命令教程.epub&lt;/li&gt;
&lt;li&gt;Mastering Django- Core.epub&lt;/li&gt;
&lt;li&gt;Medium 的技术栈.epub&lt;/li&gt;
&lt;li&gt;MFC 学习记录.epub&lt;/li&gt;
&lt;li&gt;Modern Perl- 2014 Edition.epub&lt;/li&gt;
&lt;li&gt;MPI 分布式编程.epub&lt;/li&gt;
&lt;li&gt;MSDN 杂志 12月 2015.epub&lt;/li&gt;
&lt;li&gt;MSDN 特刊  2015.epub&lt;/li&gt;
&lt;li&gt;MySQL 5.7 并行复制实现原理与调优.epub&lt;/li&gt;
&lt;li&gt;MySQL 5.7版本新特性连载.epub&lt;/li&gt;
&lt;li&gt;MySQL FAQ系列整理.epub&lt;/li&gt;
&lt;li&gt;MySQL Small Cookbook.epub&lt;/li&gt;
&lt;li&gt;MySQL 超新手入门.epub&lt;/li&gt;
&lt;li&gt;Mysql数据库总结.epub&lt;/li&gt;
&lt;li&gt;MySQL索引背后的数据结构及算法原理.epub&lt;/li&gt;
&lt;li&gt;Mysql设计与优化专题.epub&lt;/li&gt;
&lt;li&gt;Netty 4.x 用户指南.epub&lt;/li&gt;
&lt;li&gt;Nginx开发.epub&lt;/li&gt;
&lt;li&gt;Node.js 命令行程序开发教程.epub&lt;/li&gt;
&lt;li&gt;nodejs stream 手册.epub&lt;/li&gt;
&lt;li&gt;NodeJS错误处理最佳实践.epub&lt;/li&gt;
&lt;li&gt;Node入门.epub&lt;/li&gt;
&lt;li&gt;Note` 《CSS 设计指南》学习笔记.epub&lt;/li&gt;
&lt;li&gt;Nutch 1.10入门教程.epub&lt;/li&gt;
&lt;li&gt;OpenGL中文教程.epub&lt;/li&gt;
&lt;li&gt;OpenResty最佳实践.epub&lt;/li&gt;
&lt;li&gt;openVswitch（OVS）源代码分析.epub&lt;/li&gt;
&lt;li&gt;passport.js学习笔记.epub&lt;/li&gt;
&lt;li&gt;Paul Graham：写了一万六千字告诉你，如何融资.epub&lt;/li&gt;
&lt;li&gt;Perl 程序员应该知道的事.epub&lt;/li&gt;
&lt;li&gt;PHP 5.6.x 版本迁移至 PHP 7.0.x 版本.epub&lt;/li&gt;
&lt;li&gt;PHP 最佳实践（译）.epub&lt;/li&gt;
&lt;li&gt;PHP7革新与性能优化.epub&lt;/li&gt;
&lt;li&gt;PHPUnit5.0中文手册.epub&lt;/li&gt;
&lt;li&gt;PHP之道（中文版）.epub&lt;/li&gt;
&lt;li&gt;PHP编码规范（中文版）.epub&lt;/li&gt;
&lt;li&gt;PHP问题集锦.epub&lt;/li&gt;
&lt;li&gt;PM周刊.epub&lt;/li&gt;
&lt;li&gt;Pro Git 第一版（中文版）.epub&lt;/li&gt;
&lt;li&gt;Puppet运维实战.epub&lt;/li&gt;
&lt;li&gt;Python 3零起点教程.epub&lt;/li&gt;
&lt;li&gt;Python Tornado 介绍.epub&lt;/li&gt;
&lt;li&gt;Python3 CookBook中文版.epub&lt;/li&gt;
&lt;li&gt;Python3.4.3 入门指南.epub&lt;/li&gt;
&lt;li&gt;Python学习系列.epub&lt;/li&gt;
&lt;li&gt;Rails 实践.epub&lt;/li&gt;
&lt;li&gt;RayWenderlich 官方 Swift 风格指南.epub&lt;/li&gt;
&lt;li&gt;React Navtive框架教程.epub&lt;/li&gt;
&lt;li&gt;React 入门实例教程.epub&lt;/li&gt;
&lt;li&gt;React 编程风格指南.epub&lt;/li&gt;
&lt;li&gt;React-Native入门指南.epub&lt;/li&gt;
&lt;li&gt;React入门指南.epub&lt;/li&gt;
&lt;li&gt;Real World Haskell 中文版.epub&lt;/li&gt;
&lt;li&gt;Redis 基础教程.epub&lt;/li&gt;
&lt;li&gt;Redis 设计与实现（第一版）.epub&lt;/li&gt;
&lt;li&gt;Redux 官方文档中文翻译.epub&lt;/li&gt;
&lt;li&gt;RePractise.epub&lt;/li&gt;
&lt;li&gt;REST API 安全设计指南.epub&lt;/li&gt;
&lt;li&gt;ReThought系列文章.epub&lt;/li&gt;
&lt;li&gt;Revel 中文手册.epub&lt;/li&gt;
&lt;li&gt;RSA算法原理.epub&lt;/li&gt;
&lt;li&gt;Ruby 风格指南.epub&lt;/li&gt;
&lt;li&gt;Rust Book中文翻译.epub&lt;/li&gt;
&lt;li&gt;R语言基础.epub&lt;/li&gt;
&lt;li&gt;Sass Guidelines（中文版）.epub&lt;/li&gt;
&lt;li&gt;SASS中文教程.epub&lt;/li&gt;
&lt;li&gt;SASS用法指南.epub&lt;/li&gt;
&lt;li&gt;scala 从入门到入门+.epub&lt;/li&gt;
&lt;li&gt;Scala 课堂! - 从 ∅ 到分布式服务.epub&lt;/li&gt;
&lt;li&gt;Scala初学指南.epub&lt;/li&gt;
&lt;li&gt;ScrollView 学习笔记.epub&lt;/li&gt;
&lt;li&gt;Seafile服务器手册中文版.epub&lt;/li&gt;
&lt;li&gt;sentCMS网站管理使用文档.epub&lt;/li&gt;
&lt;li&gt;Servlet学习笔记.epub&lt;/li&gt;
&lt;li&gt;Shell 编程范例.epub&lt;/li&gt;
&lt;li&gt;shipyard中文文档.epub&lt;/li&gt;
&lt;li&gt;ShuipFCMS使用手册.epub&lt;/li&gt;
&lt;li&gt;Sketch 3中文手册.epub&lt;/li&gt;
&lt;li&gt;Slim3.0 手册 [ 英 ].epub&lt;/li&gt;
&lt;li&gt;Spark 快速入门.epub&lt;/li&gt;
&lt;li&gt;Spark 编程指南简体中文版.epub&lt;/li&gt;
&lt;li&gt;SSM框架笔记.epub&lt;/li&gt;
&lt;li&gt;Stack Overflow 揭秘程式开发者15 个不为人知的秘密.epub&lt;/li&gt;
&lt;li&gt;STL经典算法我实现.epub&lt;/li&gt;
&lt;li&gt;struts2轻装上阵.epub&lt;/li&gt;
&lt;li&gt;Sublime Text 全程指南.epub&lt;/li&gt;
&lt;li&gt;Susy 2 入门教程.epub&lt;/li&gt;
&lt;li&gt;Swift函数式编程.epub&lt;/li&gt;
&lt;li&gt;Swift开发集锦.epub&lt;/li&gt;
&lt;li&gt;Swift编程风格指南.epub&lt;/li&gt;
&lt;li&gt;Swoole入门教程及文档.epub&lt;/li&gt;
&lt;li&gt;TCP 的那些事儿.epub&lt;/li&gt;
&lt;li&gt;The Django Book 2.0中文版.epub&lt;/li&gt;
&lt;li&gt;The Linux Command Line 中文版.epub&lt;/li&gt;
&lt;li&gt;The Little MongoDB Book 中文版.epub&lt;/li&gt;
&lt;li&gt;The Little Redis Book中文版.epub&lt;/li&gt;
&lt;li&gt;The Swift Programming Language 中文版.epub&lt;/li&gt;
&lt;li&gt;The Twelve-Factor App（中文版）.epub&lt;/li&gt;
&lt;li&gt;ThinkJs2.0开发手册.epub&lt;/li&gt;
&lt;li&gt;ThinkPHP 5 简明开发手册.epub&lt;/li&gt;
&lt;li&gt;ThinkPHP3.2.3完全开发手册.epub&lt;/li&gt;
&lt;li&gt;ThinkPHP3.2.3快速入门.epub&lt;/li&gt;
&lt;li&gt;tmux- Productive Mouse-Free Development 中文版.epub&lt;/li&gt;
&lt;li&gt;Twitter的Scala最佳实践.epub&lt;/li&gt;
&lt;li&gt;U-boot学习笔记.epub&lt;/li&gt;
&lt;li&gt;Unity5学习记录.epub&lt;/li&gt;
&lt;li&gt;UNIX TOOLBOX - 中文版.epub&lt;/li&gt;
&lt;li&gt;V2EX 周报.epub&lt;/li&gt;
&lt;li&gt;Visual Studio 11开发专栏.epub&lt;/li&gt;
&lt;li&gt;vue.epub&lt;/li&gt;
&lt;li&gt;W3School PHP 教程.epub&lt;/li&gt;
&lt;li&gt;WebSocket协议翻译.epub&lt;/li&gt;
&lt;li&gt;WebStorm与Git使用指南.epub&lt;/li&gt;
&lt;li&gt;Web前端干货铺.epub&lt;/li&gt;
&lt;li&gt;Web前端开发实战.epub&lt;/li&gt;
&lt;li&gt;WEB开发者应该有哪些必备的技能？.epub&lt;/li&gt;
&lt;li&gt;Web性能优化与HTTP-2.epub&lt;/li&gt;
&lt;li&gt;Web版Rss阅读器.epub&lt;/li&gt;
&lt;li&gt;WEB重构之道.epub&lt;/li&gt;
&lt;li&gt;Web项目开发规范文档.epub&lt;/li&gt;
&lt;li&gt;Werkzeug中文文档.epub&lt;/li&gt;
&lt;li&gt;XORM操作指南.epub&lt;/li&gt;
&lt;li&gt;Yet Another Scheme 入门教程.epub&lt;/li&gt;
&lt;li&gt;Yii 2.0 权威指南.epub&lt;/li&gt;
&lt;li&gt;Yii2系列教程.epub&lt;/li&gt;
&lt;li&gt;Y分钟学习X种语言.epub&lt;/li&gt;
&lt;li&gt;ZendFramework2入门教程.epub&lt;/li&gt;
&lt;li&gt;[InfoQ]深入浅出Node.js迷你书.epub&lt;/li&gt;
&lt;li&gt;[译] Android 开发规范与应用.epub&lt;/li&gt;
&lt;li&gt;[译]全栈Redux实战.epub&lt;/li&gt;
&lt;li&gt;《Android开发艺术探索》读书笔记.epub&lt;/li&gt;
&lt;li&gt;《架构师成长之路》漫画连载.epub&lt;/li&gt;
&lt;li&gt;《移动Web手册》读书笔记.epub&lt;/li&gt;
&lt;li&gt;《算法导论》答案.epub&lt;/li&gt;
&lt;li&gt;【译】Python Lex Yacc手册.epub&lt;/li&gt;
&lt;li&gt;一个Web报表项目的性能分析和优化实践.epub&lt;/li&gt;
&lt;li&gt;一份其实很短的 LaTeX 入门文档.epub&lt;/li&gt;
&lt;li&gt;一分钟学会 Dart 编程.epub&lt;/li&gt;
&lt;li&gt;一名菜鸟IT项目经理的成长笔记.epub&lt;/li&gt;
&lt;li&gt;一文搞懂HMM（隐马尔可夫模型）.epub&lt;/li&gt;
&lt;li&gt;一站式学习Wireshark.epub&lt;/li&gt;
&lt;li&gt;一起做过的面试题.epub&lt;/li&gt;
&lt;li&gt;七天学会NodeJs.epub&lt;/li&gt;
&lt;li&gt;七牛新手指南.epub&lt;/li&gt;
&lt;li&gt;不同场景下 MySQL 的迁移方案.epub&lt;/li&gt;
&lt;li&gt;中国互联网年度趋势报告：解读变化最大七个行业.epub&lt;/li&gt;
&lt;li&gt;中国顶尖技术团队访谈录·第二季.epub&lt;/li&gt;
&lt;li&gt;中文字体新手指南.epub&lt;/li&gt;
&lt;li&gt;中文文案排版指北.epub&lt;/li&gt;
&lt;li&gt;云生态专刊2015年01期.epub&lt;/li&gt;
&lt;li&gt;云计算设计模式.epub&lt;/li&gt;
&lt;li&gt;互联网协议入门.epub&lt;/li&gt;
&lt;li&gt;产品需求文档(PRD)的写作方法.epub&lt;/li&gt;
&lt;li&gt;亿级Web系统搭建——单机到分布式集群 .epub&lt;/li&gt;
&lt;li&gt;从P1到P7——我在淘宝这7年.epub&lt;/li&gt;
&lt;li&gt;代码之谜.epub&lt;/li&gt;
&lt;li&gt;代码大全- 读书笔记.epub&lt;/li&gt;
&lt;li&gt;企鹅智酷开放平台专栏.epub&lt;/li&gt;
&lt;li&gt;体会人生.epub&lt;/li&gt;
&lt;li&gt;你必须知道的NOSQL系列.epub&lt;/li&gt;
&lt;li&gt;使用HTTP-2提升性能的7个建议.epub&lt;/li&gt;
&lt;li&gt;使用React、Node.js、MongoDB、Socket.IO开发一个角色投票应用.epub&lt;/li&gt;
&lt;li&gt;傻瓜函数式编程.epub&lt;/li&gt;
&lt;li&gt;像计算机科学家一样思考（C++版).epub&lt;/li&gt;
&lt;li&gt;关于容器安全的白皮书.epub&lt;/li&gt;
&lt;li&gt;创业剧本.epub&lt;/li&gt;
&lt;li&gt;初创科技公司都采用什么样的技术架构？.epub&lt;/li&gt;
&lt;li&gt;利剑Extjs5.epub&lt;/li&gt;
&lt;li&gt;制造开源软件 - 如何成功运营自由软件项目.epub&lt;/li&gt;
&lt;li&gt;前后端分离的思考与实践.epub&lt;/li&gt;
&lt;li&gt;前端开发常用技巧经验记录.epub&lt;/li&gt;
&lt;li&gt;前端开发提高之旅.epub&lt;/li&gt;
&lt;li&gt;前端开发者学习手册（英）.epub&lt;/li&gt;
&lt;li&gt;前端开发者手册.epub&lt;/li&gt;
&lt;li&gt;前端开发规范手册.epub&lt;/li&gt;
&lt;li&gt;前端性能优化指南.epub&lt;/li&gt;
&lt;li&gt;前端面试题目搜集.epub&lt;/li&gt;
&lt;li&gt;十个 JavaScript 中易犯的小错误.epub&lt;/li&gt;
&lt;li&gt;只有程序员看的懂面试圣经｜如何拿下编程面试.epub&lt;/li&gt;
&lt;li&gt;命令行的艺术.epub&lt;/li&gt;
&lt;li&gt;响应式图片101.epub&lt;/li&gt;
&lt;li&gt;响应式设计快速指南.epub&lt;/li&gt;
&lt;li&gt;图像处理算法.epub&lt;/li&gt;
&lt;li&gt;图解 Flux.epub&lt;/li&gt;
&lt;li&gt;图解 Monad.epub&lt;/li&gt;
&lt;li&gt;基于Qt的词典开发.epub&lt;/li&gt;
&lt;li&gt;大型網站架構學習筆記.epub&lt;/li&gt;
&lt;li&gt;大数据开源框架.epub&lt;/li&gt;
&lt;li&gt;大数据管理系统LAXCUS.epub&lt;/li&gt;
&lt;li&gt;奇舞周刊.epub&lt;/li&gt;
&lt;li&gt;好说 haoshuo.epub&lt;/li&gt;
&lt;li&gt;安全工程师面经.epub&lt;/li&gt;
&lt;li&gt;安卓项目实践.epub&lt;/li&gt;
&lt;li&gt;完全用 GNU-Linux 工作.epub&lt;/li&gt;
&lt;li&gt;小Printf的编程故事（更新中）.epub&lt;/li&gt;
&lt;li&gt;小巫CSDN博客客户端开发教程.mobi&lt;/li&gt;
&lt;li&gt;小细节大体验.epub&lt;/li&gt;
&lt;li&gt;常见排序算法.epub&lt;/li&gt;
&lt;li&gt;建设全功能团队.epub&lt;/li&gt;
&lt;li&gt;开源数学软件.epub&lt;/li&gt;
&lt;li&gt;开源物联网系统设计.epub&lt;/li&gt;
&lt;li&gt;开源软件架构.epub&lt;/li&gt;
&lt;li&gt;强迫症的 Mac 设置指南.epub&lt;/li&gt;
&lt;li&gt;微博开放平台接入tips.epub&lt;/li&gt;
&lt;li&gt;微博推荐架构的演进.epub&lt;/li&gt;
&lt;li&gt;成长.epub&lt;/li&gt;
&lt;li&gt;我的后端开发书架2015 2.0版.epub&lt;/li&gt;
&lt;li&gt;手淘 H5 性能最佳实践.epub&lt;/li&gt;
&lt;li&gt;打造android ORM框架.epub&lt;/li&gt;
&lt;li&gt;技术选型：喷子、胆量和产品意识.epub&lt;/li&gt;
&lt;li&gt;把《The Swift Programming Language》读薄.epub&lt;/li&gt;
&lt;li&gt;把《把时间当作朋友》读薄.epub&lt;/li&gt;
&lt;li&gt;把《编程珠玑》读薄.epub&lt;/li&gt;
&lt;li&gt;持续集成（第二版）.epub&lt;/li&gt;
&lt;li&gt;探索Lua5.2内部实现.epub&lt;/li&gt;
&lt;li&gt;接口测试.epub&lt;/li&gt;
&lt;li&gt;掰扯数据结构.epub&lt;/li&gt;
&lt;li&gt;描述、发现以及档案：进入Web API的下一阶段.epub&lt;/li&gt;
&lt;li&gt;敏捷文档你需要知道的.epub&lt;/li&gt;
&lt;li&gt;数据库内核月报.epub&lt;/li&gt;
&lt;li&gt;数据的秘密.epub&lt;/li&gt;
&lt;li&gt;数据结构.epub&lt;/li&gt;
&lt;li&gt;数据结构与算法-leetcode-lintcode题解.epub&lt;/li&gt;
&lt;li&gt;新亿CMS完全手册.epub&lt;/li&gt;
&lt;li&gt;新兵训练营系列课程.epub&lt;/li&gt;
&lt;li&gt;日志：每个软件工程师都应该知道的有关实时数据的统一抽象.epub&lt;/li&gt;
&lt;li&gt;时间序列数据库的秘密.epub&lt;/li&gt;
&lt;li&gt;智酷分析精选.epub&lt;/li&gt;
&lt;li&gt;最完整的Docker聖經 - Docker原理圖解及全環境安裝.epub&lt;/li&gt;
&lt;li&gt;最详细的 Vi 编辑器使用指南.epub&lt;/li&gt;
&lt;li&gt;机器学习实战笔记.epub&lt;/li&gt;
&lt;li&gt;来自HeroKu的HTTP API 设计指南(中文版).epub&lt;/li&gt;
&lt;li&gt;构建需求响应式亿级商品详情页.epub&lt;/li&gt;
&lt;li&gt;架构之重构的12条军规.epub&lt;/li&gt;
&lt;li&gt;架构师（2015年6月）.epub&lt;/li&gt;
&lt;li&gt;正则表达式简明参考.epub&lt;/li&gt;
&lt;li&gt;比较全面的MySQL优化参考.epub&lt;/li&gt;
&lt;li&gt;沉浸式学 Git.epub&lt;/li&gt;
&lt;li&gt;深入浅出Docker.epub&lt;/li&gt;
&lt;li&gt;深入浅出ES6.epub&lt;/li&gt;
&lt;li&gt;深入浅出Mesos.epub&lt;/li&gt;
&lt;li&gt;深入浅出Nodejs读书笔记.epub&lt;/li&gt;
&lt;li&gt;深入浅出React.epub&lt;/li&gt;
&lt;li&gt;深入理解javascript原型和闭包.epub&lt;/li&gt;
&lt;li&gt;深入理解JavaScript系列.epub&lt;/li&gt;
&lt;li&gt;深入理解PHP内核.epub&lt;/li&gt;
&lt;li&gt;现代密码学实践指南[2015年].epub&lt;/li&gt;
&lt;li&gt;理解Linux进程.epub&lt;/li&gt;
&lt;li&gt;理解OAuth 2.0.epub&lt;/li&gt;
&lt;li&gt;用Swift做个游戏.epub&lt;/li&gt;
&lt;li&gt;用爱一起画git.epub&lt;/li&gt;
&lt;li&gt;白板编程浅谈——Why, What, How.epub&lt;/li&gt;
&lt;li&gt;看云新手入门.epub&lt;/li&gt;
&lt;li&gt;知道创宇研发技能表v3.0.epub&lt;/li&gt;
&lt;li&gt;码农增刊·硅谷之火.epub&lt;/li&gt;
&lt;li&gt;禅与 Objective-C 编程艺术.epub&lt;/li&gt;
&lt;li&gt;移动H5前端性能优化指南.epub&lt;/li&gt;
&lt;li&gt;移动开发精华阅读.epub&lt;/li&gt;
&lt;li&gt;移动端文字与排版设计的六个原则.epub&lt;/li&gt;
&lt;li&gt;移动终端开发必备知识.epub&lt;/li&gt;
&lt;li&gt;移动阅读时代“长文章”生存调查：谁受欢迎？.epub&lt;/li&gt;
&lt;li&gt;程序员应知.epub&lt;/li&gt;
&lt;li&gt;程序员必读书单 1.0.epub&lt;/li&gt;
&lt;li&gt;程序员的自我修养.epub&lt;/li&gt;
&lt;li&gt;程序员聊人生(试读版).epub&lt;/li&gt;
&lt;li&gt;程序员英语单词册.epub&lt;/li&gt;
&lt;li&gt;程序江湖.epub&lt;/li&gt;
&lt;li&gt;程序设计训练.epub&lt;/li&gt;
&lt;li&gt;笨办法学Prolog.epub&lt;/li&gt;
&lt;li&gt;笨方法學 Ruby.epub&lt;/li&gt;
&lt;li&gt;简道云使用手册.epub&lt;/li&gt;
&lt;li&gt;算法与数据结构.epub&lt;/li&gt;
&lt;li&gt;算法积累.epub&lt;/li&gt;
&lt;li&gt;精益技术简历之道——改善技术简历的47条原则.epub&lt;/li&gt;
&lt;li&gt;糗事百科（精编版）.epub&lt;/li&gt;
&lt;li&gt;编程入门指南.epub&lt;/li&gt;
&lt;li&gt;编程思想之多线程与多进程.epub&lt;/li&gt;
&lt;li&gt;编程的智慧.epub&lt;/li&gt;
&lt;li&gt;编程笔记 By billryan.epub&lt;/li&gt;
&lt;li&gt;网络爬虫系列.epub&lt;/li&gt;
&lt;li&gt;网页性能管理详解.epub&lt;/li&gt;
&lt;li&gt;翻译漫谈——怎样翻译更地道.epub&lt;/li&gt;
&lt;li&gt;背包问题九讲.epub&lt;/li&gt;
&lt;li&gt;腾讯alloyteam团队前端代码规范.epub&lt;/li&gt;
&lt;li&gt;菜鸟学SSH.mobi&lt;/li&gt;
&lt;li&gt;蓝色铁骑.epub&lt;/li&gt;
&lt;li&gt;解析 Android 架构设计原则.epub&lt;/li&gt;
&lt;li&gt;让web app更快的HTML5最佳实践.epub&lt;/li&gt;
&lt;li&gt;设计模式.epub&lt;/li&gt;
&lt;li&gt;设计模式与系统架构.epub&lt;/li&gt;
&lt;li&gt;超实用的IOS 9人机界面指南.epub&lt;/li&gt;
&lt;li&gt;趣味算法设计.epub&lt;/li&gt;
&lt;li&gt;跟着ym学习Android5.0.epub&lt;/li&gt;
&lt;li&gt;踟蹰MySQL.epub&lt;/li&gt;
&lt;li&gt;轻松python-文本专题.epub&lt;/li&gt;
&lt;li&gt;轻松把玩HttpClient.epub&lt;/li&gt;
&lt;li&gt;轻松搞定RabbitMQ.epub&lt;/li&gt;
&lt;li&gt;重拾 CSS 的乐趣.epub&lt;/li&gt;
&lt;li&gt;零日漏洞：震网病毒全揭秘.epub&lt;/li&gt;
&lt;li&gt;面向对象设计模式.epub&lt;/li&gt;
&lt;li&gt;面向指针编程.epub&lt;/li&gt;
&lt;li&gt;飞鸟集.epub&lt;/li&gt;
&lt;li&gt;高效运维最佳实践.epub&lt;/li&gt;
&lt;li&gt;高斯模糊的算法.epub&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YRjfkdg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mega.nz/#!bZU1EBha!k1LkLkjXKy-RaaO4hD7SmbPGJAHWB8gWQfhRMazzgsA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MEGA下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;来源：&lt;a href=&quot;http://www.kancloud.cn/explore&quot;&gt;广场 - 看云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：EPUB&lt;/p&gt;
&lt;p&gt;大小：512 MB (537,798,360 字节)&lt;/p&gt;
&lt;p&gt;日期：2016.4.6&lt;/p&gt;
    
    </summary>
    
    
      <category term="综合" scheme="http://it-ebooks.flygon.net/tags/%E7%BB%BC%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>知道创宇研发技能表 3.0</title>
    <link href="http://it-ebooks.flygon.net/%E7%9F%A5%E9%81%93%E5%88%9B%E5%AE%87%E7%A0%94%E5%8F%91%E6%8A%80%E8%83%BD%E8%A1%A8/"/>
    <id>http://it-ebooks.flygon.net/知道创宇研发技能表/</id>
    <published>2016-04-06T09:19:32.000Z</published>
    <updated>2016-04-06T09:20:45.445Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://box.kancloud.cn/cover_2015-10-29_5631a03d5301_800x1068.png?imageMogr2/thumbnail/173x231!/interlace/1/quality/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：知道创宇&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://blog.knownsec.com/Knownsec_RD_Checklist/v2.2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知道创宇研发技能表&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/kancloud/knownsec_rd_checklist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/kancloud/knownsec_rd_checklist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://box.kancloud.cn/cover_2015-10-29_5631a03d5301_800x1068.png?imageMogr2/thumbnail/173x231!/interlace/1/quality/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：知道创宇&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://blog.knownsec.com/Knownsec_RD_Checklist/v2.2.html&quot;&gt;知道创宇研发技能表&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="综合" scheme="http://it-ebooks.flygon.net/tags/%E7%BB%BC%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Tornado 4.3 中文文档</title>
    <link href="http://it-ebooks.flygon.net/tornado-doc/"/>
    <id>http://it-ebooks.flygon.net/tornado-doc/</id>
    <published>2016-04-06T07:05:29.000Z</published>
    <updated>2016-04-06T07:06:57.509Z</updated>
    
    <content type="html">&lt;p&gt;译者：&lt;a href=&quot;https://github.com/tao12345666333&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tao12345666333&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/tao12345666333/tornado-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tornado-zh&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tornado-zh.readthedocs.org/zh/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://readthedocs.org/projects/tornado-zh/downloads/pdf/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://readthedocs.org/projects/tornado-zh/downloads/epub/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://readthedocs.org/projects/tornado-zh/downloads/htmlzip/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;译者：&lt;a href=&quot;https://github.com/tao12345666333&quot;&gt;tao12345666333&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/tao12345666333/tornado-zh&quot;&gt;tornado-zh&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="tornado" scheme="http://it-ebooks.flygon.net/tags/tornado/"/>
    
  </entry>
  
  <entry>
    <title>网络基本功系列</title>
    <link href="http://it-ebooks.flygon.net/%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E5%8A%9F%E7%B3%BB%E5%88%97/"/>
    <id>http://it-ebooks.flygon.net/网络基本功系列/</id>
    <published>2016-04-05T09:08:01.000Z</published>
    <updated>2016-04-05T09:08:51.929Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/network-basic.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://community.emc.com/people/Zhang%2CJiawen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zhang Jiawen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://community.emc.com/thread/197851&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;网络基本功系列：细说网络那些事儿&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/network-basic/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/network-basic&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/network-basic&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/network-basic&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/network-basic.jpg?build=1452162345819&amp;amp;v=12.0.4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://community.emc.com/people/Zhang%2CJiawen&quot;&gt;Zhang Jiawen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://community.emc.com/thread/197851&quot;&gt;网络基本功系列：细说网络那些事儿&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络" scheme="http://it-ebooks.flygon.net/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机程序的构造和解释（SICP） Python描述 （英文）</title>
    <link href="http://it-ebooks.flygon.net/sicp-python/"/>
    <id>http://it-ebooks.flygon.net/sicp-python/</id>
    <published>2016-04-05T04:02:26.000Z</published>
    <updated>2016-04-17T13:15:41.415Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/sicp-in-python.jpg?build=1451891804807&amp;amp;v=12.0.2&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://www-inst.eecs.berkeley.edu/~cs61a/sp12/book/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CS61A: Online Textbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CC BY-SA 3.0&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/sicp-in-python/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载地址&quot;&gt;&lt;a href=&quot;#下载地址&quot; class=&quot;headerlink&quot; title=&quot;下载地址&quot;&gt;&lt;/a&gt;下载地址&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/sicp-in-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/sicp-in-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/sicp-in-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/sicp-in-python.jpg?build=1451891804807&amp;amp;v=12.0.2&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://www-inst.eecs.berkeley.edu/~cs61a/sp12/book/&quot;&gt;CS61A: Online Textbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;CC BY-SA 3.0&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="英文" scheme="http://it-ebooks.flygon.net/tags/%E8%8B%B1%E6%96%87/"/>
    
      <category term="编程思想" scheme="http://it-ebooks.flygon.net/tags/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>极客学院 Wiki 后端教程打包</title>
    <link href="http://it-ebooks.flygon.net/jikexueyuan-wiki-back-end/"/>
    <id>http://it-ebooks.flygon.net/jikexueyuan-wiki-back-end/</id>
    <published>2016-04-04T06:57:07.000Z</published>
    <updated>2016-04-05T06:42:51.515Z</updated>
    
    <content type="html">&lt;p&gt;来源：&lt;a href=&quot;http://wiki.jikexueyuan.com/list/back-end/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;后端开发&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：EPUB&lt;/p&gt;
&lt;p&gt;大小：162 MB (169,957,953 字节)&lt;/p&gt;
&lt;p&gt;日期：2016.4.4&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;内容列表&quot;&gt;&lt;a href=&quot;#内容列表&quot; class=&quot;headerlink&quot; title=&quot;内容列表&quot;&gt;&lt;/a&gt;内容列表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;23种设计模式 - v1.1.epub&lt;/li&gt;
&lt;li&gt;ASP.NET MVC 随想录 - v1.1.epub&lt;/li&gt;
&lt;li&gt;ASP.NET Web API 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;ASP.NET 编程指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;C 学习笔记 - v1.0.epub&lt;/li&gt;
&lt;li&gt;C 语言 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;C 高阶教程 - v1.1.epub&lt;/li&gt;
&lt;li&gt;C# 中一些易混淆概念总结 - v1.0.epub&lt;/li&gt;
&lt;li&gt;C# 入门手册 - v1.2.epub&lt;/li&gt;
&lt;li&gt;C# 语言规范-基本概念篇 - v1.1.epub&lt;/li&gt;
&lt;li&gt;C++ 基础教程 - v1.4.1.epub&lt;/li&gt;
&lt;li&gt;C++并发编程.epub&lt;/li&gt;
&lt;li&gt;Cocos2D-x 从 C++ 到 JS 的进阶之路 - v1.2.epub&lt;/li&gt;
&lt;li&gt;CodeIgniter 用户指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Composer 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Dart 入门教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Dart 语言概览 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Disruptor 入门 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Django 中文文档 1.8.epub&lt;/li&gt;
&lt;li&gt;Django 搭建简易博客教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Elasticsearch 权威指南（中文版） - v1.0.epub&lt;/li&gt;
&lt;li&gt;Express 指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Flask 用户指南 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Go Web 编程.epub&lt;/li&gt;
&lt;li&gt;GO 命令教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Go+入门指南+-+v1.1.epub&lt;/li&gt;
&lt;li&gt;Google C++ 风格指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Google Guava 官方教程 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Google Java 编程规范.epub&lt;/li&gt;
&lt;li&gt;Google JSON 风格指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Google OAuth 2.0 认证指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Google Python 风格指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;HASKELL 趣学指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Hexo 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Hibernate 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;HTTP API 设计指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;HTTP2 讲解 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Introduction to Tornado 中文翻译 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java NIO 指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java TCP-IP Socket 编程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java 专题合集 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java 中文乱码解决之道 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java 反射机制 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java 并发性和多线程 - v1.2.epub&lt;/li&gt;
&lt;li&gt;Java 并发编程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java 提高篇 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Java 语言快速入门 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Java 集合学习指南 - v1.1.epub&lt;/li&gt;
&lt;li&gt;JDBC 指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;JNI-NDK 开发指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;JSON 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;JSP 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Julia 中文手册 - v1.1.epub&lt;/li&gt;
&lt;li&gt;JUnit 入门教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;JVM 实用参数系列 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Laravel 5.1 官方文档中文版 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Laravel 官方文档中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Log4j 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Lua 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Maven 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Mybatis 实战教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;MyBatis 文档 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Netty 4.x 用户指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Node.js 官方文档中文版 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Node.js 实战心得 - v1.0.epub&lt;/li&gt;
&lt;li&gt;OAuth 2.0系列教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;OpenResty 最佳实践 - v1.0.epub&lt;/li&gt;
&lt;li&gt;OpenResty 最佳实践 - v1.1.epub&lt;/li&gt;
&lt;li&gt;PHP 之道 - v1.0.epub&lt;/li&gt;
&lt;li&gt;PHP 基础教程 - v1.1.epub&lt;/li&gt;
&lt;li&gt;PHP 开发者实践 - v1.0.epub&lt;/li&gt;
&lt;li&gt;PHP 扩展开发及内核应用相关内容 - v1.0.epub&lt;/li&gt;
&lt;li&gt;PHP 新手指南 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Python 入门指南 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Python 实战-从菜鸟到大牛的进阶之路 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Python 爬虫学习系列教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Python 网络爬虫 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Python 语言参考手册 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Python3 CookBook中文版.epub&lt;/li&gt;
&lt;li&gt;Qt 学习之路 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Rails 实践 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Reactor 指南中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Real C.epub&lt;/li&gt;
&lt;li&gt;RESTful Web 服务教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Ruby 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;rust 官方教程 中文版.epub&lt;/li&gt;
&lt;li&gt;Rust 语言中文版 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Scala Specs2 测试入门教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Scala 专题教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Scala 二十四点游戏 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Scala 参数化类型 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Scala 开发教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Scala 抽象成员 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Scala 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Scala 解析器 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Scala 课堂 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Scala 隐式变换和隐式参数 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Scrapy 中文指南 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Servlet 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Slick 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Spring 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Spring-IoC 容器 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Struts 2 教程 - v1.1.epub&lt;/li&gt;
&lt;li&gt;SWING 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Symfony2 Cookbook - v1.0.epub&lt;/li&gt;
&lt;li&gt;Yii Framework 开发教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Zend Framework 2 指南 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Zend Framework 2 深入学习指南 - v1.1.epub&lt;/li&gt;
&lt;li&gt;《从零开始学+Python》%28第二版%29+-+v1.1.epub&lt;/li&gt;
&lt;li&gt;一分钟学会 Dart 编程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;一步一步写算法 - v1.0.epub&lt;/li&gt;
&lt;li&gt;一步步教你用 PHP+MySQL 搭建网站 - v1.0.epub&lt;/li&gt;
&lt;li&gt;一起talk C栗子吧 - v1.0.epub&lt;/li&gt;
&lt;li&gt;七天学会 Nodejs - v1.0.epub&lt;/li&gt;
&lt;li&gt;使用Express与MongoDB 搭建多人博客 - v1.0.epub&lt;/li&gt;
&lt;li&gt;初识 Spring Security - v1.1.epub&lt;/li&gt;
&lt;li&gt;坐在马桶上学算法 - v1.1.epub&lt;/li&gt;
&lt;li&gt;学习 GO 语言 - v1.1.epub&lt;/li&gt;
&lt;li&gt;深入理解 Java 内存模型 - v1.1.epub&lt;/li&gt;
&lt;li&gt;深入理解 Java 虚拟机 - v1.0.epub&lt;/li&gt;
&lt;li&gt;现代 OpenGL 教程(连载） - v1.1.epub&lt;/li&gt;
&lt;li&gt;用 JSON 构建 API 的标准指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;神奇的 Go 语言 - v1.0.epub&lt;/li&gt;
&lt;li&gt;简明 Python 教程 - v1.1.epub&lt;/li&gt;
&lt;li&gt;自己动手写框架 - v1.0.epub&lt;/li&gt;
&lt;li&gt;菜鸟学 SSH - v1.0.epub&lt;/li&gt;
&lt;li&gt;设计模式之创建型模式 - v1.0.epub&lt;/li&gt;
&lt;li&gt;设计模式之结构型模式 - v1.1.epub&lt;/li&gt;
&lt;li&gt;设计模式之行为型模式 - v1.1.epub&lt;/li&gt;
&lt;li&gt;设计模式的六大原则 - v1.0.epub&lt;/li&gt;
&lt;li&gt;跟我学 Shiro - v1.1.epub&lt;/li&gt;
&lt;li&gt;轻松学习排序算法 - v1.0.epub&lt;/li&gt;
&lt;li&gt;轻松学习正则表达式 - v1.0.epub&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YRjfMj9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mega.nz/#!bZdXTLQI!A6CWwWD_HWjupLSyrix-290IpIgMCHh5MYxqdGOZfkM&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MEGA下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;来源：&lt;a href=&quot;http://wiki.jikexueyuan.com/list/back-end/&quot;&gt;后端开发&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：EPUB&lt;/p&gt;
&lt;p&gt;大小：162 MB (169,957,953 字节)&lt;/p&gt;
&lt;p&gt;日期：2016.4.4&lt;/p&gt;
    
    </summary>
    
    
      <category term="综合" scheme="http://it-ebooks.flygon.net/tags/%E7%BB%BC%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Creating Mobile Apps with Xamarin.Forms</title>
    <link href="http://it-ebooks.flygon.net/creating-mobile-apps-with-xamarin-forms/"/>
    <id>http://it-ebooks.flygon.net/creating-mobile-apps-with-xamarin-forms/</id>
    <published>2016-04-04T02:33:21.000Z</published>
    <updated>2016-04-17T13:14:07.974Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2016/03/9781509302970_alternate_thumb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：Charles Petzold&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://blogs.msdn.microsoft.com/microsoft_press/2016/03/31/free-ebook-creating-mobile-apps-with-xamarin-forms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Free ebook: Creating Mobile Apps with Xamarin.Forms&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://aka.ms/xamebook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://msdnshared.blob.core.windows.net/media/2016/03/9781509302970_alternate_thumb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：Charles Petzold&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://blogs.msdn.microsoft.com/microsoft_press/2016/03/31/free-ebook-creating-mobile-apps-with-xamarin-forms/&quot;&gt;Free ebook: Creating Mobile Apps with Xamarin.Forms&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="csharp" scheme="http://it-ebooks.flygon.net/tags/csharp/"/>
    
      <category term="英文" scheme="http://it-ebooks.flygon.net/tags/%E8%8B%B1%E6%96%87/"/>
    
      <category term="xamarin" scheme="http://it-ebooks.flygon.net/tags/xamarin/"/>
    
  </entry>
  
  <entry>
    <title>Asp.NET 官方文档（英文）</title>
    <link href="http://it-ebooks.flygon.net/asp-net-doc-en/"/>
    <id>http://it-ebooks.flygon.net/asp-net-doc-en/</id>
    <published>2016-04-04T02:29:24.000Z</published>
    <updated>2016-04-17T13:13:07.932Z</updated>
    
    <content type="html">&lt;p&gt;作者：&lt;a href=&quot;https://github.com/aspnet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;aspnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/aspnet/Docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.asp.net/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://readthedocs.com/projects/aspnet-aspnet/downloads/pdf/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://readthedocs.com/projects/aspnet-aspnet/downloads/epub/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://readthedocs.com/projects/aspnet-aspnet/downloads/htmlzip/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://github.com/aspnet&quot;&gt;aspnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/aspnet/Docs&quot;&gt;Docs&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="csharp" scheme="http://it-ebooks.flygon.net/tags/csharp/"/>
    
      <category term="asp.net" scheme="http://it-ebooks.flygon.net/tags/asp-net/"/>
    
      <category term="英文" scheme="http://it-ebooks.flygon.net/tags/%E8%8B%B1%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>极客学院 Wiki 开发工具教程打包</title>
    <link href="http://it-ebooks.flygon.net/jikexueyuan-wiki-tool/"/>
    <id>http://it-ebooks.flygon.net/jikexueyuan-wiki-tool/</id>
    <published>2016-04-03T12:08:47.000Z</published>
    <updated>2016-04-04T03:14:26.738Z</updated>
    
    <content type="html">&lt;p&gt;来源：&lt;a href=&quot;http://wiki.jikexueyuan.com/list/tool/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：EPUB&lt;/p&gt;
&lt;p&gt;大小：153 MB (160,469,738 字节)&lt;/p&gt;
&lt;p&gt;日期：2016.4.3&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;内容列表&quot;&gt;&lt;a href=&quot;#内容列表&quot; class=&quot;headerlink&quot; title=&quot;内容列表&quot;&gt;&lt;/a&gt;内容列表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Android Gradle 用户指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Android Studio 操作手册 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Apache Ant 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Atom 使用教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;atom-flight-manual-zh-cn.epub&lt;/li&gt;
&lt;li&gt;Balsamiq Mockups 3 中文教程 - v1.2.epub&lt;/li&gt;
&lt;li&gt;CodeSmith使用教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;easy-web-code-book.epub&lt;/li&gt;
&lt;li&gt;Eclipse 使用教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;FontForge 与字体设计 - v1.1.epub&lt;/li&gt;
&lt;li&gt;Ghost使用指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Git Community Book 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Git 命令参考 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Git 工作流指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Git 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Git 魔法 - v1.0.epub&lt;/li&gt;
&lt;li&gt;GitHub Pages 指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;GitHub 使用手册 - 基础篇 - v1.1.epub&lt;/li&gt;
&lt;li&gt;GitHub 开发指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;GitHub 秘籍 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Gradle 使用指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;gradle-2-user-guide.epub&lt;/li&gt;
&lt;li&gt;gradle-user-guide-.epub&lt;/li&gt;
&lt;li&gt;Grunt 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Gulp 入门指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Hexo 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Jekyll 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;JUnit 入门教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Maven 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Pixate 使用指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Pro Git - v1.0.epub&lt;/li&gt;
&lt;li&gt;Pro Git v2 中文版 - v1.0.epub&lt;/li&gt;
&lt;li&gt;SBT 手册 - v1.0.epub&lt;/li&gt;
&lt;li&gt;SEO 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Sketch 3 的用户手册 - v1.0.epub&lt;/li&gt;
&lt;li&gt;SVN 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;Vim 教程 - v1.0.epub&lt;/li&gt;
&lt;li&gt;《极客星球周刊》第 1 期 - v1.2.epub&lt;/li&gt;
&lt;li&gt;像 geek 一样写博客 - v1.0.epub&lt;/li&gt;
&lt;li&gt;杰出产品经理书 - v1.3.epub&lt;/li&gt;
&lt;li&gt;极客周刊 - v1.0.epub&lt;/li&gt;
&lt;li&gt;极客学院 Newsletter - v1.1.epub&lt;/li&gt;
&lt;li&gt;极客学院 Wiki 作者帮助中心 - v1.0.epub&lt;/li&gt;
&lt;li&gt;极客学院 Wiki 商务合作指南 - v1.0.epub&lt;/li&gt;
&lt;li&gt;极客学院 Wiki 编辑团队组建指南 - v1.0.epub&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YRjfPjX&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mega.nz/#!mAcUmSCS!jzjs0uKsF5PgBJ84psfa5tOKWAUz-d3SkgQ-8Nh8iAY&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MEGA下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;来源：&lt;a href=&quot;http://wiki.jikexueyuan.com/list/tool/&quot;&gt;开发工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：EPUB&lt;/p&gt;
&lt;p&gt;大小：153 MB (160,469,738 字节)&lt;/p&gt;
&lt;p&gt;日期：2016.4.3&lt;/p&gt;
    
    </summary>
    
    
      <category term="综合" scheme="http://it-ebooks.flygon.net/tags/%E7%BB%BC%E5%90%88/"/>
    
  </entry>
  
</feed>
