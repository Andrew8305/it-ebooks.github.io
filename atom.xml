<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>计算机电子书</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://it-ebooks.flygon.net/"/>
  <updated>2016-03-24T04:07:23.084Z</updated>
  <id>http://it-ebooks.flygon.net/</id>
  
  <author>
    <name>Flygon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTF Field Guide</title>
    <link href="http://it-ebooks.flygon.net/ctf-field-guide/"/>
    <id>http://it-ebooks.flygon.net/ctf-field-guide/</id>
    <published>2016-03-24T04:05:23.000Z</published>
    <updated>2016-03-24T04:07:23.084Z</updated>
    
    <content type="html">&lt;p&gt;作者：&lt;a href=&quot;https://github.com/trailofbits&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;trailofbits&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/trailofbits/ctf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ctf&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://trailofbits.github.io/ctf/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/trailofbits/ctf/archive/master.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它格式请安装 gitbook 和 calibre 后自行编译。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd your_dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gitbook pdf|epub|mobi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://github.com/trailofbits&quot;&gt;trailofbits&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/trailofbits/ctf&quot;&gt;ctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="逆向" scheme="http://it-ebooks.flygon.net/tags/%E9%80%86%E5%90%91/"/>
    
      <category term="ctf" scheme="http://it-ebooks.flygon.net/tags/ctf/"/>
    
      <category term="渗透" scheme="http://it-ebooks.flygon.net/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Functional Programming in Python</title>
    <link href="http://it-ebooks.flygon.net/functional-programming-python/"/>
    <id>http://it-ebooks.flygon.net/functional-programming-python/</id>
    <published>2016-03-24T04:03:39.000Z</published>
    <updated>2016-03-24T04:04:53.768Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://covers.oreillystatic.com/images/0636920041368/cat.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;http://www.oreilly.com/pub/au/1190&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;David Mertz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://www.oreilly.com/programming/free/functional-programming-python.csp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Functional Programming in Python&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oreilly.com/programming/free/files/functional-programming-python.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oreilly.com/programming/free/files/functional-programming-python.epub&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oreilly.com/programming/free/files/functional-programming-python.mobi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://covers.oreillystatic.com/images/0636920041368/cat.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;http://www.oreilly.com/pub/au/1190&quot;&gt;David Mertz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://www.oreilly.com/programming/free/functional-programming-python.csp&quot;&gt;Functional Programming in Python&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>那些年我们一起学XSS</title>
    <link href="http://it-ebooks.flygon.net/%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E5%AD%A6-xss/"/>
    <id>http://it-ebooks.flygon.net/那些年我们一起学-xss/</id>
    <published>2016-03-23T08:17:47.000Z</published>
    <updated>2016-03-23T08:18:46.524Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/xss-naxienian.jpg?build=1439249362341&amp;amp;v=12.0.2&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/xss-naxienian/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/xss-naxienian&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/xss-naxienian&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/xss-naxienian&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mobi格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/xss-naxienian.jpg?build=1439249362341&amp;amp;v=12.0.2&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透" scheme="http://it-ebooks.flygon.net/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Octave 入门</title>
    <link href="http://it-ebooks.flygon.net/octave-%E5%85%A5%E9%97%A8/"/>
    <id>http://it-ebooks.flygon.net/octave-入门/</id>
    <published>2016-03-23T02:25:33.000Z</published>
    <updated>2016-03-23T02:33:39.304Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/841aea59jw1f26l45n76oj20ka0q878b.jpg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://download.csdn.net/detail/u012550782/6455307&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSDN下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YRjjofa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1000eb.com/1jmn0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;千易下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&#39;http://ww1.sinaimg.cn/large/841aea59jw1f26l45n76oj20ka0q878b.jpg&#39; width=&#39;500&#39; /&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
    
    </summary>
    
    
      <category term="科学计算" scheme="http://it-ebooks.flygon.net/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="octave" scheme="http://it-ebooks.flygon.net/tags/octave/"/>
    
  </entry>
  
  <entry>
    <title>Gimp 中文手册</title>
    <link href="http://it-ebooks.flygon.net/gimp-%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/"/>
    <id>http://it-ebooks.flygon.net/gimp-中文手册/</id>
    <published>2016-03-23T02:18:03.000Z</published>
    <updated>2016-03-23T02:33:06.469Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/841aea59jw1f26kyh5ghgj20jt0s13ym.jpg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pan.baidu.com/share/link?shareid=441114&amp;amp;uk=2435549136&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度云下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YRjjnDa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1000eb.com/1jmlh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;千易下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&#39;http://ww2.sinaimg.cn/large/841aea59jw1f26kyh5ghgj20jt0s13ym.jpg&#39; width=&#39;500&#39; /&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
    
    </summary>
    
    
      <category term="gimp" scheme="http://it-ebooks.flygon.net/tags/gimp/"/>
    
      <category term="图像处理" scheme="http://it-ebooks.flygon.net/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>使用 GnuPlot 科学作图</title>
    <link href="http://it-ebooks.flygon.net/%E4%BD%BF%E7%94%A8-gnuplot-%E7%A7%91%E5%AD%A6%E4%BD%9C%E5%9B%BE/"/>
    <id>http://it-ebooks.flygon.net/使用-gnuplot-科学作图/</id>
    <published>2016-03-23T02:14:04.000Z</published>
    <updated>2016-03-23T02:34:02.031Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/841aea59jw1f26ks49obnj20mo0tc420.jpg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.phy.fju.edu.tw/files/archive/876_ab57aed9.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YRjjn_5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1000eb.com/1jmkf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;千易下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&#39;http://ww4.sinaimg.cn/large/841aea59jw1f26ks49obnj20mo0tc420.jpg&#39; width=&#39;500&#39; /&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
    
    </summary>
    
    
      <category term="科学计算" scheme="http://it-ebooks.flygon.net/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="gnuplot" scheme="http://it-ebooks.flygon.net/tags/gnuplot/"/>
    
  </entry>
  
  <entry>
    <title>SciPy Lecture Notes 中文版</title>
    <link href="http://it-ebooks.flygon.net/scipy-lecture-notes/"/>
    <id>http://it-ebooks.flygon.net/scipy-lecture-notes/</id>
    <published>2016-03-21T11:39:56.000Z</published>
    <updated>2016-03-21T11:41:17.163Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/scipy-lecture-notes.jpg?build=1439249362341&amp;amp;v=12.0.2&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/scipy-lecture-notes/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/scipy-lecture-notes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/scipy-lecture-notes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/scipy-lecture-notes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ek8whxe.cloudimg.io/s/width/226/https://www.gitbook.com/cover/book/wizardforcel/scipy-lecture-notes.jpg?build=1439249362341&amp;amp;v=12.0.2&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="科学计算" scheme="http://it-ebooks.flygon.net/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="scipy" scheme="http://it-ebooks.flygon.net/tags/scipy/"/>
    
  </entry>
  
  <entry>
    <title>简明 Python 教程</title>
    <link href="http://it-ebooks.flygon.net/a-byte-of-python/"/>
    <id>http://it-ebooks.flygon.net/a-byte-of-python/</id>
    <published>2016-03-19T08:07:17.000Z</published>
    <updated>2016-03-19T08:08:25.196Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s28291750.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/a-byte-of-python/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/a-byte-of-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/a-byte-of-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/a-byte-of-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s28291750.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Dive Into Python3 中文版</title>
    <link href="http://it-ebooks.flygon.net/dive-into-python3/"/>
    <id>http://it-ebooks.flygon.net/dive-into-python3/</id>
    <published>2016-03-19T07:02:40.000Z</published>
    <updated>2016-03-19T07:04:22.710Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img1.doubanio.com/lpic/s4059293.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/dive-into-python3/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/dive-into-python3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/dive-into-python3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/dive-into-python3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img1.doubanio.com/lpic/s4059293.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Introduction To Tornado 中文版</title>
    <link href="http://it-ebooks.flygon.net/introduction-to-tornado/"/>
    <id>http://it-ebooks.flygon.net/introduction-to-tornado/</id>
    <published>2016-03-19T04:02:01.000Z</published>
    <updated>2016-03-19T04:02:58.606Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://box.kancloud.cn/cover_2015-09-02_55e6e8dc790a_800x1068.jpg?imageMogr2/thumbnail/173x231!/interlace/1/quality/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/kancloud/introduction_to_tornado&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kancloud.cn/kancloud/introduction_to_tornado&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://box.kancloud.cn/cover_2015-09-02_55e6e8dc790a_800x1068.jpg?imageMogr2/thumbnail/173x231!/interlace/1/quality/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="tornado" scheme="http://it-ebooks.flygon.net/tags/tornado/"/>
    
  </entry>
  
  <entry>
    <title>Dive Into Python 中文版</title>
    <link href="http://it-ebooks.flygon.net/dive-into-python/"/>
    <id>http://it-ebooks.flygon.net/dive-into-python/</id>
    <published>2016-03-19T04:00:23.000Z</published>
    <updated>2016-03-19T04:01:27.403Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s4180565.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wizardforcel/dive-into-python/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wizardforcel/dive-into-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wizardforcel/dive-into-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wizardforcel/dive-into-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s4180565.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 漫游指南</title>
    <link href="http://it-ebooks.flygon.net/gitHub-%E6%BC%AB%E6%B8%B8%E6%8C%87%E5%8D%97/"/>
    <id>http://it-ebooks.flygon.net/gitHub-漫游指南/</id>
    <published>2016-03-16T10:19:11.000Z</published>
    <updated>2016-03-16T10:20:34.707Z</updated>
    
    <content type="html">&lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/github-roam&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github-roam&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://github.phodal.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phodal/github-roam/raw/gh-pages/github-roam.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phodal/github-roam/raw/gh-pages/github-roam.epub&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phodal/github-roam/raw/gh-pages/github-roam.mobi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/github-roam&quot;&gt;github-roam&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://it-ebooks.flygon.net/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>RePractise</title>
    <link href="http://it-ebooks.flygon.net/repractise/"/>
    <id>http://it-ebooks.flygon.net/repractise/</id>
    <published>2016-03-16T10:16:06.000Z</published>
    <updated>2016-03-16T10:23:15.349Z</updated>
    
    <content type="html">&lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/repractise&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;repractise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-nd/3.0/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CC BY-NC-ND 3.0&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://repractise.phodal.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://github.com/phodal&quot;&gt;phodal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/phodal/repractise&quot;&gt;repractise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;协议：&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-nd/3.0/cn/&quot;&gt;CC BY-NC-ND 3.0&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="工程" scheme="http://it-ebooks.flygon.net/tags/%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>CoffeeScript 小书</title>
    <link href="http://it-ebooks.flygon.net/coffeescript-%E5%B0%8F%E4%B9%A6/"/>
    <id>http://it-ebooks.flygon.net/coffeescript-小书/</id>
    <published>2016-03-14T10:07:24.000Z</published>
    <updated>2016-03-14T10:18:10.345Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1wk7eb5vxj20e60iwt9q.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href=&quot;http://island205.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;寸志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://island205.com/tlboc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CoffeeScript 小书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;p&gt;暂无。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pan.baidu.com/s/1dDkUyCp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度云下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/CeFLYiTngI9wb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1000eb.com/1j11x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;千易下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1wk7eb5vxj20e60iwt9q.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href=&quot;http://island205.com&quot;&gt;寸志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://island205.com/tlboc&quot;&gt;CoffeeScript 小书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;格式：PDF&lt;/p&gt;
    
    </summary>
    
    
      <category term="coffeescript" scheme="http://it-ebooks.flygon.net/tags/coffeescript/"/>
    
  </entry>
  
  <entry>
    <title>CoffeeScript Coobook 中文版</title>
    <link href="http://it-ebooks.flygon.net/coffeescript-cookbook-zh/"/>
    <id>http://it-ebooks.flygon.net/coffeescript-cookbook-zh/</id>
    <published>2016-03-14T10:01:22.000Z</published>
    <updated>2016-03-14T10:02:22.783Z</updated>
    
    <content type="html">&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/coffeescript/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/download/coffeescript/pdf/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/download/coffeescript/epub/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/coffeescrip
    
    </summary>
    
    
      <category term="coffeescript" scheme="http://it-ebooks.flygon.net/tags/coffeescript/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin for android Developers 中文翻译</title>
    <link href="http://it-ebooks.flygon.net/kotlin-for-android-developers-zh/"/>
    <id>http://it-ebooks.flygon.net/kotlin-for-android-developers-zh/</id>
    <published>2016-03-14T06:49:59.000Z</published>
    <updated>2016-03-14T06:54:05.508Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1web1pkp3j20ar0dw74r.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/wangjiegulu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wangjiegulu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kotlin-for-android-developers-zh&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在线阅读&quot;&gt;&lt;a href=&quot;#在线阅读&quot; class=&quot;headerlink&quot; title=&quot;在线阅读&quot;&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wangjiegulu/kotlin-for-android-developers-zh/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EPUB格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/wangjiegulu/kotlin-for-android-developers-zh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MOBI格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/841aea59jw1f1web1pkp3j20ar0dw74r.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://github.com/wangjiegulu&quot;&gt;wangjiegulu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/wangjiegulu/kotlin-for-android-developers-zh&quot;&gt;kotlin-for-android-developers-zh&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="android" scheme="http://it-ebooks.flygon.net/tags/android/"/>
    
      <category term="kotlin" scheme="http://it-ebooks.flygon.net/tags/kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib 教程</title>
    <link href="http://it-ebooks.flygon.net/matplotlib-%E6%95%99%E7%A8%8B/"/>
    <id>http://it-ebooks.flygon.net/matplotlib-教程/</id>
    <published>2016-03-14T03:40:33.000Z</published>
    <updated>2016-03-14T02:46:13.261Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://www.labri.fr/perso/nrougier/teaching/matplotlib/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matplotlib tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matplotlib 教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Matplotlib 可能是 Python 2D-绘图领域使用最广泛的套件。它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。这里将会探索 matplotlib 的常见用法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;IPython-以及-pylab-模式&quot;&gt;&lt;a href=&quot;#IPython-以及-pylab-模式&quot; class=&quot;headerlink&quot; title=&quot;IPython 以及 pylab 模式&quot;&gt;&lt;/a&gt;IPython 以及 pylab 模式&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://ipython.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IPython&lt;/a&gt; 是 Python 的一个增强版本。它在下列方面有所增强：命名输入输出、使用系统命令（shell commands）、排错（debug）能力。我们在命令行终端给 IPython 加上参数 &lt;code&gt;-pylab&lt;/code&gt; （0.12 以后的版本是 &lt;code&gt;--pylab&lt;/code&gt;）之后，就可以像 Matlab 或者 Mathematica 那样以交互的方式绘图。&lt;/p&gt;
&lt;h4 id=&quot;pylab&quot;&gt;&lt;a href=&quot;#pylab&quot; class=&quot;headerlink&quot; title=&quot;pylab&quot;&gt;&lt;/a&gt;pylab&lt;/h4&gt;&lt;p&gt;pylab 是 matplotlib 面向对象绘图库的一个接口。它的语法和 Matlab 十分相近。也就是说，它主要的绘图命令和 Matlab 对应的命令有相似的参数。&lt;/p&gt;
&lt;h3 id=&quot;初级绘制&quot;&gt;&lt;a href=&quot;#初级绘制&quot; class=&quot;headerlink&quot; title=&quot;初级绘制&quot;&gt;&lt;/a&gt;初级绘制&lt;/h3&gt;&lt;p&gt;这一节中，我们将从简到繁：先尝试用默认配置在同一张图上绘制正弦和余弦函数图像，然后逐步美化它。&lt;/p&gt;
&lt;p&gt;第一步，是取得正弦函数和预先函数的值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;X&lt;/code&gt; 是一个 &lt;code&gt;numpy&lt;/code&gt; 数组，包含了从 &lt;code&gt;-π&lt;/code&gt; 到 &lt;code&gt;+π&lt;/code&gt; 等间隔的 256 个值。&lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;S&lt;/code&gt; 则分别是这 256 个值对应的余弦和正弦函数值组成的 &lt;code&gt;numpy&lt;/code&gt; 数组。&lt;/p&gt;
&lt;p&gt;你可以在 IPython 的交互模式下测试代码，也可以下载代码（下载链接就是这些示例图），然后执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python exercise_1.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用默认配置&quot;&gt;&lt;a href=&quot;#使用默认配置&quot; class=&quot;headerlink&quot; title=&quot;使用默认配置&quot;&gt;&lt;/a&gt;使用默认配置&lt;/h4&gt;&lt;p&gt;Matplotlib 的默认配置都允许用户自定义。你可以调整大多数的默认配置：图片大小和分辨率（dpi）、线宽、颜色、风格、坐标轴、坐标轴以及网格的属性、文字与字体属性等。不过，matplotlib 的默认配置在大多数情况下已经做得足够好，你可能只在很少的情况下才会想更改这些默认配置。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X,C)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X,S)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_1.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_1.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;默认配置的具体内容&quot;&gt;&lt;a href=&quot;#默认配置的具体内容&quot; class=&quot;headerlink&quot; title=&quot;默认配置的具体内容&quot;&gt;&lt;/a&gt;默认配置的具体内容&lt;/h4&gt;&lt;p&gt;下面的代码中，我们展现了 matplotlib 的默认配置并辅以注释说明，这部分配置包含了有关绘图样式的所有配置。代码中的配置与默认配置完全相同，你可以在交互模式中修改其中的值来观察效果。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 导入 matplotlib 的所有内容（nympy 可以用 np 这个名字来使用）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个 8 * 6 点（point）的图，并设置分辨率为 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;figure(figsize=(8,6), dpi=80)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(1,1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制余弦曲线，使用蓝色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, C, color=&amp;quot;blue&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制正弦曲线，使用绿色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, S, color=&amp;quot;green&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(-4.0,4.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks(np.linspace(-4,4,9,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(-1.0,1.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks(np.linspace(-1,1,5,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 以分辨率 72 来保存图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# savefig(&amp;quot;exercice_2.png&amp;quot;,dpi=72)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在屏幕上显示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_2.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_2.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;改变线条的颜色和粗细&quot;&gt;&lt;a href=&quot;#改变线条的颜色和粗细&quot; class=&quot;headerlink&quot; title=&quot;改变线条的颜色和粗细&quot;&gt;&lt;/a&gt;改变线条的颜色和粗细&lt;/h4&gt;&lt;p&gt;首先，我们以蓝色和红色分别表示余弦和正弦函数，而后将线条变粗一点。接下来，我们在水平方向拉伸一下整个图。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 导入 matplotlib 的所有内容（nympy 可以用 np 这个名字来使用）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个 8 * 6 点（point）的图，并设置分辨率为 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;figure(figsize=(8,6), dpi=80)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(1,1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.linspace(-np.pi, np.pi, 256,endpoint=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C,S = np.cos(X), np.sin(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制余弦曲线，使用蓝色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, C, color=&amp;quot;blue&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制正弦曲线，使用绿色的、连续的、宽度为 1 （像素）的线条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, S, color=&amp;quot;green&amp;quot;, linewidth=1.0, linestyle=&amp;quot;-&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(-4.0,4.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置横轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks(np.linspace(-4,4,9,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴的上下限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(-1.0,1.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置纵轴记号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks(np.linspace(-1,1,5,endpoint=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 以分辨率 72 来保存图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# savefig(&amp;quot;exercice_2.png&amp;quot;,dpi=72)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在屏幕上显示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_3.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_3.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;设置图片边界&quot;&gt;&lt;a href=&quot;#设置图片边界&quot; class=&quot;headerlink&quot; title=&quot;设置图片边界&quot;&gt;&lt;/a&gt;设置图片边界&lt;/h4&gt;&lt;p&gt;当前的图片边界设置得不好，所以有些地方看得不是很清楚。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(X.min()*1.1, X.max()*1.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(C.min()*1.1, C.max()*1.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更好的方式是这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xmin ,xmax = X.min(), X.max()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ymin, ymax = Y.min(), Y.max()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dx = (xmax - xmin) * 0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dy = (ymax - ymin) * 0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlim(xmin - dx, xmax + dx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(ymin - dy, ymax + dy)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_4.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_4.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;设置记号&quot;&gt;&lt;a href=&quot;#设置记号&quot; class=&quot;headerlink&quot; title=&quot;设置记号&quot;&gt;&lt;/a&gt;设置记号&lt;/h4&gt;&lt;p&gt;我们讨论正弦和余弦函数的时候，通常希望知道函数在 &lt;code&gt;±π&lt;/code&gt; 和 &lt;code&gt;±π/2&lt;/code&gt; 的值。这样看来，当前的设置就不那么理想了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks( [-np.pi, -np.pi/2, 0, np.pi/2, np.pi])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks([-1, 0, +1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_5.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_5.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;设置记号的标签&quot;&gt;&lt;a href=&quot;#设置记号的标签&quot; class=&quot;headerlink&quot; title=&quot;设置记号的标签&quot;&gt;&lt;/a&gt;设置记号的标签&lt;/h4&gt;&lt;p&gt;记号现在没问题了，不过标签却不大符合期望。我们可以把 3.142 当做是 &lt;code&gt;π&lt;/code&gt;，但毕竟不够精确。当我们设置记号的时候，我们可以同时设置记号的标签。注意这里使用了 LaTeX。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [r&amp;apos;$-\pi$&amp;apos;, r&amp;apos;$-\pi/2$&amp;apos;, r&amp;apos;$0$&amp;apos;, r&amp;apos;$+\pi/2$&amp;apos;, r&amp;apos;$+\pi$&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yticks([-1, 0, +1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [r&amp;apos;$-1$&amp;apos;, r&amp;apos;$0$&amp;apos;, r&amp;apos;$+1$&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_6.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_6.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;移动脊柱&quot;&gt;&lt;a href=&quot;#移动脊柱&quot; class=&quot;headerlink&quot; title=&quot;移动脊柱&quot;&gt;&lt;/a&gt;移动脊柱&lt;/h4&gt;&lt;p&gt;坐标轴线和上面的记号连在一起就形成了脊柱（Spines，一条线段上有一系列的凸起，是不是很像脊柱骨啊~），它记录了数据区域的范围。它们可以放在任意位置，不过至今为止，我们都把它放在图的四边。&lt;/p&gt;
&lt;p&gt;实际上每幅图有四条脊柱（上下左右），为了将脊柱放在图的中间，我们必须将其中的两条（上和右）设置为无色，然后调整剩下的两条到合适的位置——数据空间的 0 点。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax = gca()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;right&amp;apos;].set_color(&amp;apos;none&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;top&amp;apos;].set_color(&amp;apos;none&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.xaxis.set_ticks_position(&amp;apos;bottom&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;bottom&amp;apos;].set_position((&amp;apos;data&amp;apos;,0))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.yaxis.set_ticks_position(&amp;apos;left&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.spines[&amp;apos;left&amp;apos;].set_position((&amp;apos;data&amp;apos;,0))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_7.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_7.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;添加图例&quot;&gt;&lt;a href=&quot;#添加图例&quot; class=&quot;headerlink&quot; title=&quot;添加图例&quot;&gt;&lt;/a&gt;添加图例&lt;/h4&gt;&lt;p&gt;我们在图的左上角添加一个图例。为此，我们只需要在 &lt;code&gt;plot&lt;/code&gt; 函数里以「键 - 值」的形式增加一个参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, C, color=&amp;quot;blue&amp;quot;, linewidth=2.5, linestyle=&amp;quot;-&amp;quot;, label=&amp;quot;cosine&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(X, S, color=&amp;quot;red&amp;quot;,  linewidth=2.5, linestyle=&amp;quot;-&amp;quot;, label=&amp;quot;sine&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;legend(loc=&amp;apos;upper left&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_8.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_8.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;给一些特殊点做注释&quot;&gt;&lt;a href=&quot;#给一些特殊点做注释&quot; class=&quot;headerlink&quot; title=&quot;给一些特殊点做注释&quot;&gt;&lt;/a&gt;给一些特殊点做注释&lt;/h4&gt;&lt;p&gt;我们希望在 &lt;code&gt;2π/3&lt;/code&gt; 的位置给两条函数曲线加上一个注释。首先，我们在对应的函数图像位置上画一个点；然后，向横轴引一条垂线，以虚线标记；最后，写上标签。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = 2*np.pi/3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot([t,t],[0,np.cos(t)], color =&amp;apos;blue&amp;apos;, linewidth=2.5, linestyle=&amp;quot;--&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scatter([t,],[np.cos(t),], 50, color =&amp;apos;blue&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;annotate(r&amp;apos;$\sin(\frac&amp;#123;2\pi&amp;#125;&amp;#123;3&amp;#125;)=\frac&amp;#123;\sqrt&amp;#123;3&amp;#125;&amp;#125;&amp;#123;2&amp;#125;$&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xy=(t, np.sin(t)), xycoords=&amp;apos;data&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xytext=(+10, +30), textcoords=&amp;apos;offset points&amp;apos;, fontsize=16,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         arrowprops=dict(arrowstyle=&amp;quot;-&amp;gt;&amp;quot;, connectionstyle=&amp;quot;arc3,rad=.2&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot([t,t],[0,np.sin(t)], color =&amp;apos;red&amp;apos;, linewidth=2.5, linestyle=&amp;quot;--&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scatter([t,],[np.sin(t),], 50, color =&amp;apos;red&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;annotate(r&amp;apos;$\cos(\frac&amp;#123;2\pi&amp;#125;&amp;#123;3&amp;#125;)=-\frac&amp;#123;1&amp;#125;&amp;#123;2&amp;#125;$&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xy=(t, np.cos(t)), xycoords=&amp;apos;data&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         xytext=(-90, -50), textcoords=&amp;apos;offset points&amp;apos;, fontsize=16,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         arrowprops=dict(arrowstyle=&amp;quot;-&amp;gt;&amp;quot;, connectionstyle=&amp;quot;arc3,rad=.2&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_9.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_9.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;精益求精&quot;&gt;&lt;a href=&quot;#精益求精&quot; class=&quot;headerlink&quot; title=&quot;精益求精&quot;&gt;&lt;/a&gt;精益求精&lt;/h4&gt;&lt;p&gt;坐标轴上的记号标签被曲线挡住了，作为强迫症患者（雾）这是不能忍的。我们可以把它们放大，然后添加一个白色的半透明底色。这样可以保证标签和曲线同时可见。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for label in ax.get_xticklabels() + ax.get_yticklabels():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_fontsize(16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_bbox(dict(facecolor=&amp;apos;white&amp;apos;, edgecolor=&amp;apos;None&amp;apos;, alpha=0.65 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_10.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/exercice_10.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;图像、子图、坐标轴和记号&quot;&gt;&lt;a href=&quot;#图像、子图、坐标轴和记号&quot; class=&quot;headerlink&quot; title=&quot;图像、子图、坐标轴和记号&quot;&gt;&lt;/a&gt;图像、子图、坐标轴和记号&lt;/h3&gt;&lt;p&gt;到目前为止，我们都用隐式的方法来绘制图像和坐标轴。快速绘图中，这是很方便的。我们也可以显式地控制图像、子图、坐标轴。Matplotlib 中的「图像」指的是用户界面看到的整个窗口内容。在图像里面有所谓「子图」。子图的位置是由坐标网格确定的，而「坐标轴」却不受此限制，可以放在图像的任意位置。我们已经隐式地使用过图像和子图：当我们调用 &lt;code&gt;plot&lt;/code&gt; 函数的时候，matplotlib 调用 &lt;code&gt;gca()&lt;/code&gt; 函数以及 &lt;code&gt;gcf()&lt;/code&gt; 函数来获取当前的坐标轴和图像；如果无法获取图像，则会调用 &lt;code&gt;figure()&lt;/code&gt; 函数来创建一个——严格地说，是用 &lt;code&gt;subplot(1,1,1)&lt;/code&gt; 创建一个只有一个子图的图像。&lt;/p&gt;
&lt;h4 id=&quot;图像&quot;&gt;&lt;a href=&quot;#图像&quot; class=&quot;headerlink&quot; title=&quot;图像&quot;&gt;&lt;/a&gt;图像&lt;/h4&gt;&lt;p&gt;所谓「图像」就是 GUI 里以「Figure #」为标题的那些窗口。图像编号从 1 开始，与 MATLAB 的风格一致，而于 Python 从 0 开始编号的风格不同。以下参数是图像的属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;num&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;图像的数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;figsize&lt;/td&gt;
&lt;td&gt;figure.figsize&lt;/td&gt;
&lt;td&gt;图像的长和宽（英寸）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dpi&lt;/td&gt;
&lt;td&gt;figure.dpi&lt;/td&gt;
&lt;td&gt;分辨率（点/英寸）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;facecolor&lt;/td&gt;
&lt;td&gt;figure.facecolor&lt;/td&gt;
&lt;td&gt;绘图区域的背景颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edgecolor&lt;/td&gt;
&lt;td&gt;figure.edgecolor&lt;/td&gt;
&lt;td&gt;绘图区域边缘的颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frameon&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;是否绘制图像边缘&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这些默认值可以在源文件中指明。不过除了图像数量这个参数，其余的参数都很少修改。&lt;/p&gt;
&lt;p&gt;你在图形界面中可以按下右上角的 X 来关闭窗口（OS X 系统是左上角）。Matplotlib 也提供了名为 &lt;code&gt;close&lt;/code&gt; 的函数来关闭这个窗口。&lt;code&gt;close&lt;/code&gt; 函数的具体行为取决于你提供的参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不传递参数：关闭当前窗口；&lt;/li&gt;
&lt;li&gt;传递窗口编号或窗口实例（instance）作为参数：关闭指定的窗口；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;all&lt;/code&gt;：关闭所有窗口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;和其他对象一样，你可以使用 &lt;code&gt;setp&lt;/code&gt; 或者是 &lt;code&gt;set_something&lt;/code&gt; 这样的方法来设置图像的属性。&lt;/p&gt;
&lt;h4 id=&quot;子图&quot;&gt;&lt;a href=&quot;#子图&quot; class=&quot;headerlink&quot; title=&quot;子图&quot;&gt;&lt;/a&gt;子图&lt;/h4&gt;&lt;p&gt;你可以用子图来将图样（plot）放在均匀的坐标网格中。用 &lt;code&gt;subplot&lt;/code&gt; 函数的时候，你需要指明网格的行列数量，以及你希望将图样放在哪一个网格区域中。此外，&lt;a href=&quot;http://matplotlib.sourceforge.net/users/gridspec.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;gridspec&lt;/code&gt;&lt;/a&gt; 的功能更强大，你也可以选择它来实现这个功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-horizontal.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/subplot-horizontal.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-vertical.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/subplot-vertical.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-grid.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/subplot-grid.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/gridspec.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/gridspec.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;坐标轴&quot;&gt;&lt;a href=&quot;#坐标轴&quot; class=&quot;headerlink&quot; title=&quot;坐标轴&quot;&gt;&lt;/a&gt;坐标轴&lt;/h4&gt;&lt;p&gt;坐标轴和子图功能类似，不过它可以放在图像的任意位置。因此，如果你希望在一副图中绘制一个小图，就可以用这个功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/axes.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/axes.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/axes-2.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/axes-2.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;记号&quot;&gt;&lt;a href=&quot;#记号&quot; class=&quot;headerlink&quot; title=&quot;记号&quot;&gt;&lt;/a&gt;记号&lt;/h4&gt;&lt;p&gt;良好的记号是图像的重要组成部分。Matplotlib 里的记号系统里的各个细节都是可以由用户个性化配置的。你可以用 Tick Locators 来指定在那些位置放置记号，用 Tick Formatters 来调整记号的样式。主要和次要的记号可以以不同的方式呈现。默认情况下，每一个次要的记号都是隐藏的，也就是说，默认情况下的次要记号列表是空的——&lt;code&gt;NullLocator&lt;/code&gt;。&lt;/p&gt;
&lt;h5 id=&quot;Tick-Locators&quot;&gt;&lt;a href=&quot;#Tick-Locators&quot; class=&quot;headerlink&quot; title=&quot;Tick Locators&quot;&gt;&lt;/a&gt;Tick Locators&lt;/h5&gt;&lt;p&gt;下面有为不同需求设计的一些 Locators。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NullLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No ticks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-NullLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-NullLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IndexLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Place a tick on every multiple of some base number of points plotted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-IndexLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-IndexLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FixedLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tick locations are fixed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-FixedLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-FixedLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LinearLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Determine the tick locations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-LinearLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-LinearLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MultipleLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set a tick on every integer that is multiple of some base.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-MultipleLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-MultipleLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AutoLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Select no more than n intervals at nice locations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-AutoLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-AutoLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LogLocator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Determine the tick locations for log axes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;../img/matplotlib-教程/ticks-LogLocator.png&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/ticks-LogLocator.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这些 Locators 都是 &lt;code&gt;matplotlib.ticker.Locator&lt;/code&gt; 的子类，你可以据此定义自己的 Locator。以日期为 ticks 特别复杂，因此 Matplotlib 提供了 &lt;code&gt;matplotlib.dates&lt;/code&gt; 来实现这一功能。&lt;/p&gt;
&lt;h3 id=&quot;其他类型的图&quot;&gt;&lt;a href=&quot;#其他类型的图&quot; class=&quot;headerlink&quot; title=&quot;其他类型的图&quot;&gt;&lt;/a&gt;其他类型的图&lt;/h3&gt;&lt;p&gt;接下来的内容是练习。请运用你学到的知识，从提供的代码开始，实现配图所示的效果。具体的答案可以点击配图下载。&lt;/p&gt;
&lt;h4 id=&quot;普通图&quot;&gt;&lt;a href=&quot;#普通图&quot; class=&quot;headerlink&quot; title=&quot;普通图&quot;&gt;&lt;/a&gt;普通图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for label in ax.get_xticklabels() + ax.get_yticklabels():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_fontsize(16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.set_bbox(dict(facecolor=&amp;apos;white&amp;apos;, edgecolor=&amp;apos;None&amp;apos;, alpha=0.65 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/plot_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/plot_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;散点图&quot;&gt;&lt;a href=&quot;#散点图&quot; class=&quot;headerlink&quot; title=&quot;散点图&quot;&gt;&lt;/a&gt;散点图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 1024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.random.normal(0,1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y = np.random.normal(0,1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scatter(X,Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/scatter_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/scatter_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;条形图&quot;&gt;&lt;a href=&quot;#条形图&quot; class=&quot;headerlink&quot; title=&quot;条形图&quot;&gt;&lt;/a&gt;条形图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.arange(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y1 = (1-X/float(n)) * np.random.uniform(0.5,1.0,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y2 = (1-X/float(n)) * np.random.uniform(0.5,1.0,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(X, +Y1, facecolor=&amp;apos;#9999ff&amp;apos;, edgecolor=&amp;apos;white&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(X, -Y2, facecolor=&amp;apos;#ff9999&amp;apos;, edgecolor=&amp;apos;white&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for x,y in zip(X,Y1):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text(x+0.4, y+0.05, &amp;apos;%.2f&amp;apos; % y, ha=&amp;apos;center&amp;apos;, va= &amp;apos;bottom&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylim(-1.25,+1.25)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/bar_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/bar_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;等高线图&quot;&gt;&lt;a href=&quot;#等高线图&quot; class=&quot;headerlink&quot; title=&quot;等高线图&quot;&gt;&lt;/a&gt;等高线图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def f(x,y): return (1-x/2+x**5+y**3)*np.exp(-x**2-y**2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = np.linspace(-3,3,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = np.linspace(-3,3,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X,Y = np.meshgrid(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;contourf(X, Y, f(X,Y), 8, alpha=.75, cmap=&amp;apos;jet&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C = contour(X, Y, f(X,Y), 8, colors=&amp;apos;black&amp;apos;, linewidth=.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/contour_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/contour_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;灰度图（Imshow）&quot;&gt;&lt;a href=&quot;#灰度图（Imshow）&quot; class=&quot;headerlink&quot; title=&quot;灰度图（Imshow）&quot;&gt;&lt;/a&gt;灰度图（Imshow）&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def f(x,y): return (1-x/2+x**5+y**3)*np.exp(-x**2-y**2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = np.linspace(-3,3,4*n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = np.linspace(-3,3,3*n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X,Y = np.meshgrid(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imshow(f(X,Y)), show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/imshow_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/imshow_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;饼状图&quot;&gt;&lt;a href=&quot;#饼状图&quot; class=&quot;headerlink&quot; title=&quot;饼状图&quot;&gt;&lt;/a&gt;饼状图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Z = np.random.uniform(0,1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pie(Z), show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/pie_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/pie_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;量场图（Quiver-Plots）&quot;&gt;&lt;a href=&quot;#量场图（Quiver-Plots）&quot; class=&quot;headerlink&quot; title=&quot;量场图（Quiver Plots）&quot;&gt;&lt;/a&gt;量场图（Quiver Plots）&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X,Y = np.mgrid[0:n,0:n]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quiver(X,Y), show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/quiver_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/quiver_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;网格&quot;&gt;&lt;a href=&quot;#网格&quot; class=&quot;headerlink&quot; title=&quot;网格&quot;&gt;&lt;/a&gt;网格&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes = gca()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_xlim(0,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_ylim(0,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_xticklabels([])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes.set_yticklabels([])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/grid_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/grid_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;多重网格&quot;&gt;&lt;a href=&quot;#多重网格&quot; class=&quot;headerlink&quot; title=&quot;多重网格&quot;&gt;&lt;/a&gt;多重网格&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(2,2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(2,2,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subplot(2,2,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/multiplot_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/multiplot_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;极轴图&quot;&gt;&lt;a href=&quot;#极轴图&quot; class=&quot;headerlink&quot; title=&quot;极轴图&quot;&gt;&lt;/a&gt;极轴图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axes([0,0,1,1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N = 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theta = np.arange(0.0, 2*np.pi, 2*np.pi/N)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radii = 10*np.random.rand(N)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;width = np.pi/4*np.random.rand(N)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bars = bar(theta, radii, width=width, bottom=0.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for r,bar in zip(radii, bars):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bar.set_facecolor( cm.jet(r/10.))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bar.set_alpha(0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/polar_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/polar_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;3D-图&quot;&gt;&lt;a href=&quot;#3D-图&quot; class=&quot;headerlink&quot; title=&quot;3D 图&quot;&gt;&lt;/a&gt;3D 图&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from mpl_toolkits.mplot3d import Axes3D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fig = figure()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax = Axes3D(fig)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = np.arange(-4, 4, 0.25)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Y = np.arange(-4, 4, 0.25)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X, Y = np.meshgrid(X, Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;R = np.sqrt(X**2 + Y**2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Z = np.sin(R)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=&amp;apos;hot&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/plot3d_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/plot3d_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;手稿&quot;&gt;&lt;a href=&quot;#手稿&quot; class=&quot;headerlink&quot; title=&quot;手稿&quot;&gt;&lt;/a&gt;手稿&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/scripts/text_ex.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;../img/matplotlib-教程/text_ex.png&quot; alt=&quot;点击图片下载相应 Python 代码&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;结束篇&quot;&gt;&lt;a href=&quot;#结束篇&quot; class=&quot;headerlink&quot; title=&quot;结束篇&quot;&gt;&lt;/a&gt;结束篇&lt;/h3&gt;&lt;p&gt;Matplotlib 能有今天这样强大的功能和广泛的使用得益于大量的文档和社区开发者。这里提供一些有益的链接。&lt;/p&gt;
&lt;h4 id=&quot;入门教程&quot;&gt;&lt;a href=&quot;#入门教程&quot; class=&quot;headerlink&quot; title=&quot;入门教程&quot;&gt;&lt;/a&gt;入门教程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/pyplot_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pyplot tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/image_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Image tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/index_text.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Text tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/artists.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Artist tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/path_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Path tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/transforms_tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Transforms tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Matplotlib-文档&quot;&gt;&lt;a href=&quot;#Matplotlib-文档&quot; class=&quot;headerlink&quot; title=&quot;Matplotlib 文档&quot;&gt;&lt;/a&gt;Matplotlib 文档&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/faq/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常见问题及回答&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/users/screenshots.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;截屏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;随代码分发的文档&quot;&gt;&lt;a href=&quot;#随代码分发的文档&quot; class=&quot;headerlink&quot; title=&quot;随代码分发的文档&quot;&gt;&lt;/a&gt;随代码分发的文档&lt;/h4&gt;&lt;p&gt;Matplotlib 的代码是自文档（Self-documented）的。你可以在 Python 中快速查询某个命令的用法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from pylab import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; help(plot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Help on function plot in module matplotlib.pyplot:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(*args, **kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Plot lines and/or markers to the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   :class:`~matplotlib.axes.Axes`.  *args* is a variable length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   argument, allowing for multiple *x*, *y* pairs with an&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   optional format string.  For example, each of the following is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   legal::&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(x, y)         # plot x and y using default line style and color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(x, y, &amp;apos;bo&amp;apos;)   # plot x and y using blue circle markers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(y)            # plot y using x as index array 0..N-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       plot(y, &amp;apos;r+&amp;apos;)      # ditto, but with red plusses&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   If *x* and/or *y* is 2-dimensional, then the corresponding columns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   will be plotted.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;画廊&quot;&gt;&lt;a href=&quot;#画廊&quot; class=&quot;headerlink&quot; title=&quot;画廊&quot;&gt;&lt;/a&gt;画廊&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/gallery.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matplotlib 画廊&lt;/a&gt; 也非常有用。其中的例子都有配图和对应的代码，当你不知道某一个效果如何实现的时候，你可以在这里找找。&lt;/p&gt;
&lt;p&gt;哦，这里还有一个&lt;a href=&quot;http://www.loria.fr/~rougier/coding/gallery/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小一点的画廊&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;邮件列表&quot;&gt;&lt;a href=&quot;#邮件列表&quot; class=&quot;headerlink&quot; title=&quot;邮件列表&quot;&gt;&lt;/a&gt;邮件列表&lt;/h4&gt;&lt;p&gt;你可以在&lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/matplotlib-users&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户邮件列表&lt;/a&gt;提问，或者在&lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/matplotlib-devel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者邮件列表&lt;/a&gt;里交流技术。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注：邮件列表是一个很正式的交流平台，其内的每一封邮件，列表的收听者都会看到，所以请不要在邮件列表灌水或发表质量低劣的文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;快速查询&quot;&gt;&lt;a href=&quot;#快速查询&quot; class=&quot;headerlink&quot; title=&quot;快速查询&quot;&gt;&lt;/a&gt;快速查询&lt;/h4&gt;&lt;p&gt;你可以在&lt;a href=&quot;http://www.loria.fr/~rougier/teaching/matplotlib/#id12&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;找到 Matplotlib 主要的属性表，以便按照需求个性化配置你的输出图样。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://www.labri.fr/perso/nrougier/teaching/matplotlib/&quot;&gt;Matplotlib tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/&quot;&gt;Matplotlib 教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Matplotlib 可能是 Python 2D-绘图领域使用最广泛的套件。它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。这里将会探索 matplotlib 的常见用法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="matplotlib" scheme="http://it-ebooks.flygon.net/tags/matplotlib/"/>
    
      <category term="科学计算" scheme="http://it-ebooks.flygon.net/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>试验性 Numpy 教程</title>
    <link href="http://it-ebooks.flygon.net/%E8%AF%95%E9%AA%8C%E6%80%A7-numpy-%E6%95%99%E7%A8%8B/"/>
    <id>http://it-ebooks.flygon.net/试验性-numpy-教程/</id>
    <published>2016-03-14T02:45:44.000Z</published>
    <updated>2016-03-14T02:45:53.555Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://scipy.org/Tentative_NumPy_Tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tentative NumPy Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://reverland.org/python/2012/08/22/numpy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;试验性NumPy教程(译)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;先决条件&quot;&gt;&lt;a href=&quot;#先决条件&quot; class=&quot;headerlink&quot; title=&quot;先决条件&quot;&gt;&lt;/a&gt;先决条件&lt;/h2&gt;&lt;p&gt;在阅读这个教程之前，你多少需要知道点python。如果你想重新回忆下，请看看&lt;a href=&quot;http://docs.python.org/tut/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;如果你想要运行教程中的示例，你至少需要在你的电脑上安装了以下一些软件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.python.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://numpy.scipy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些是可能对你有帮助的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ipython.scipy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ipython&lt;/a&gt;是一个净强化的交互Python Shell，对探索NumPy的特性非常方便。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://matplotlib.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;matplotlib&lt;/a&gt;将允许你绘图&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scipy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scipy&lt;/a&gt;在NumPy的基础上提供了很多科学模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h2&gt;&lt;p&gt;NumPy的主要对象是同种元素的多维数组。这是一个所有的元素都是一种类型、通过一个正整数元组索引的元素表格(通常是元素是数字)。在NumPy中维度(dimensions)叫做轴(axes)，轴的个数叫做秩(rank)。&lt;/p&gt;
&lt;p&gt;例如，在3D空间一个点的坐标&lt;code&gt;[1, 2, 3]&lt;/code&gt;是一个秩为1的数组，因为它只有一个轴。那个轴长度为3.又例如，在以下例子中，数组的秩为2(它有两个维度).第一个维度长度为2,第二个维度长度为3.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[ 1., 0., 0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 0., 1., 2.]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;NumPy的数组类被称作&lt;em&gt;ndarray&lt;/em&gt;。通常被称作数组。注意numpy.array和标准Python库类array.array并不相同，后者只处理一维数组和提供少量功能。更多重要ndarray对象属性有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ndarray.ndim&lt;/p&gt;
&lt;p&gt;数组轴的个数，在python的世界中，轴的个数被称作秩&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.shape&lt;/p&gt;
&lt;p&gt;数组的维度。这是一个指示数组在每个维度上大小的整数元组。例如一个n排m列的矩阵，它的shape属性将是(2,3),这个元组的长度显然是秩，即维度或者ndim属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.size&lt;/p&gt;
&lt;p&gt;数组元素的总个数，等于shape属性中元组元素的乘积。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.dtype&lt;/p&gt;
&lt;p&gt;一个用来描述数组中元素类型的对象，可以通过创造或指定dtype使用标准Python类型。另外NumPy提供它自己的数据类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.itemsize&lt;/p&gt;
&lt;p&gt;数组中每个元素的字节大小。例如，一个元素类型为float64的数组itemsiz属性值为8(=64/8),又如，一个元素类型为complex32的数组item属性为4(=32/8).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ndarray.data&lt;/p&gt;
&lt;p&gt;包含实际数组元素的缓冲区，通常我们不需要使用这个属性，因为我们总是通过索引来使用数组中的元素。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;一个例子-1-在python的交互环境或ipython中&quot;&gt;&lt;a href=&quot;#一个例子-1-在python的交互环境或ipython中&quot; class=&quot;headerlink&quot; title=&quot;一个例子[1](在python的交互环境或ipython中)&quot;&gt;&lt;/a&gt;一个例子[1](在python的交互环境或ipython中)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy  import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(15).reshape(3, 5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3,  4],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5,  6,  7,  8,  9],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11, 12, 13, 14]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.ndim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;int32&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.itemsize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numpy.ndarray&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array([6, 7, 8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([6, 7, 8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numpy.ndarray&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建数组&quot;&gt;&lt;a href=&quot;#创建数组&quot; class=&quot;headerlink&quot; title=&quot;创建数组&quot;&gt;&lt;/a&gt;创建数组&lt;/h3&gt;&lt;p&gt;有好几种创建数组的方法。&lt;/p&gt;
&lt;p&gt;例如，你可以使用&lt;code&gt;array&lt;/code&gt;函数从常规的Python列表和元组创造数组。所创建的数组类型由原序列中的元素类型推导而来。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy  import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array( [2,3,4] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([2, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.dtype&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dtype(&amp;apos;int32&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array([1.2, 3.5, 5.1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.dtype&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dtype(&amp;apos;float64&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个常见的错误包括用多个数值参数调用&lt;code&gt;array&lt;/code&gt;而不是提供一个由数值组成的列表作为一个参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array(1,2,3,4)    # WRONG&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array([1,2,3,4])  # RIGHT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组将序列包含序列转化成二维的数组，序列包含序列包含序列转化成三维数组等等。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array( [ (1.5,2,3), (4,5,6) ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.5,  2. ,  3. ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4. ,  5. ,  6. ]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组类型可以在创建时显示指定&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = array( [ [1,2], [3,4] ], dtype=complex )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.+0.j,  2.+0.j],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.+0.j,  4.+0.j]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通常，数组的元素开始都是未知的，但是它的大小已知。因此，NumPy提供了一些使用占位符创建数组的函数。这最小化了扩展数组的需要和高昂的运算代价。&lt;/p&gt;
&lt;p&gt;函数&lt;code&gt;function&lt;/code&gt;创建一个全是0的数组，函数&lt;code&gt;ones&lt;/code&gt;创建一个全1的数组，函数&lt;code&gt;empty&lt;/code&gt;创建一个内容随机并且依赖与内存状态的数组。默认创建的数组类型(dtype)都是float64。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zeros( (3,4) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[0.,  0.,  0.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0.,  0.,  0.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0.,  0.,  0.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ones( (2,3,4), dtype=int16 )                # dtype can also be specified&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 1, 1, 1, 1]]], dtype=int16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; empty( (2,3) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[  3.73603959e-262,   6.02658058e-154,   6.55490914e-260],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [  5.30498948e-313,   3.14673309e-307,   1.00000000e+000]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了创建一个数列，NumPy提供一个类似arange的函数返回数组而不是列表:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; arange( 10, 30, 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([10, 15, 20, 25])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; arange( 0, 2, 0.3 )                 # it accepts float arguments&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0. ,  0.3,  0.6,  0.9,  1.2,  1.5,  1.8])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当&lt;code&gt;arange&lt;/code&gt;使用浮点数参数时，由于有限的浮点数精度，通常无法预测获得的元素个数。因此，最好使用函数&lt;code&gt;linspace&lt;/code&gt;去接收我们想要的元素个数来代替用range来指定步长。&lt;/p&gt;
&lt;p&gt;其它函数array, zeros, zeros_like, ones, ones_like, empty, empty_like, arange, linspace, rand, randn, fromfunction, fromfile参考：&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;打印数组&quot;&gt;&lt;a href=&quot;#打印数组&quot; class=&quot;headerlink&quot; title=&quot;打印数组&quot;&gt;&lt;/a&gt;打印数组&lt;/h3&gt;&lt;p&gt;当你打印一个数组，NumPy以类似嵌套列表的形式显示它，但是呈以下布局：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最后的轴从左到右打印&lt;/li&gt;
&lt;li&gt;次后的轴从顶向下打印&lt;/li&gt;
&lt;li&gt;剩下的轴从顶向下打印，每个切片通过一个空行与下一个隔开&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一维数组被打印成行，二维数组成矩阵，三维数组成矩阵列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(6)                         # 1d array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0 1 2 3 4 5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = arange(12).reshape(4,3)           # 2d array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 3  4  5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 6  7  8]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = arange(24).reshape(2,3,4)         # 3d array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [[12 13 14 15]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [16 17 18 19]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [20 21 22 23]]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看形状操作一节获得有关reshape的更多细节&lt;/p&gt;
&lt;p&gt;如果一个数组用来打印太大了，NumPy自动省略中间部分而只打印角落&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print arange(10000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[   0    1    2 ..., 9997 9998 9999]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print arange(10000).reshape(100,100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[   0    1    2 ...,   97   98   99]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 100  101  102 ...,  197  198  199]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 200  201  202 ...,  297  298  299]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ...,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9700 9701 9702 ..., 9797 9798 9799]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9800 9801 9802 ..., 9897 9898 9899]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9900 9901 9902 ..., 9997 9998 9999]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;禁用NumPy的这种行为并强制打印整个数组，你可以设置printoptions参数来更改打印选项。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; set_printoptions(threshold=&amp;apos;nan&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;基本运算&quot;&gt;&lt;a href=&quot;#基本运算&quot; class=&quot;headerlink&quot; title=&quot;基本运算&quot;&gt;&lt;/a&gt;基本运算&lt;/h3&gt;&lt;p&gt;数组的算术运算是按元素的。新的数组被创建并且被结果填充。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array( [20,30,40,50] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = arange( 4 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 2, 3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([20, 29, 38, 47])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b**2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 4, 9])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 10*sin(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 9.12945251, -9.88031624,  7.4511316 , -2.62374854])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&amp;lt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([True, True, False, False], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不像许多矩阵语言，NumPy中的乘法运算符&lt;code&gt;*&lt;/code&gt;指示按元素计算，矩阵乘法可以使用&lt;code&gt;dot&lt;/code&gt;函数或创建矩阵对象实现(参见教程中的矩阵章节)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A = array( [[1,1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             [0,1]] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; B = array( [[2,0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             [3,4]] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A*B                         # elementwise product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[2, 0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0, 4]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dot(A,B)                    # matrix product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[5, 4],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [3, 4]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有些操作符像&lt;code&gt;+=&lt;/code&gt;和&lt;code&gt;*=&lt;/code&gt;被用来更改已存在数组而不创建一个新的数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = ones((2,3), dtype=int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = random.random((2,3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a *= 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[3, 3, 3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [3, 3, 3]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b += a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 3.69092703,  3.8324276 ,  3.0114541 ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.18679111,  3.3039349 ,  3.37600289]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a += b                                  # b is converted to integer type&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[6, 6, 6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [6, 6, 6]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当运算的是不同类型的数组时，结果数组和更普遍和精确的已知(这种行为叫做upcast)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = ones(3, dtype=int32)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = linspace(0,pi,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;float64&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1.        ,  2.57079633,  4.14159265])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;float64&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d = exp(c*1j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0.54030231+0.84147098j, -0.84147098+0.54030231j,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       -0.54030231-0.84147098j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d.dtype.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;complex128&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;许多非数组运算，如计算数组所有元素之和，被作为ndarray类的方法实现&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = random.random((2,3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0.6903007 ,  0.39168346,  0.16524769],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.48819875,  0.77188505,  0.94792155]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.sum()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.4552372100521485&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.min()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.16524768654743593&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.max()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.9479215542670073&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这些运算默认应用到数组好像它就是一个数字组成的列表，无关数组的形状。然而，指定&lt;code&gt;axis&lt;/code&gt;参数你可以吧运算应用到数组指定的轴上：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.sum(axis=0)                            # sum of each column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([12, 15, 18, 21])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.min(axis=1)                            # min of each row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 4, 8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.cumsum(axis=1)                         # cumulative sum along each row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  3,  6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  9, 15, 22],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8, 17, 27, 38]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;通用函数-ufunc&quot;&gt;&lt;a href=&quot;#通用函数-ufunc&quot; class=&quot;headerlink&quot; title=&quot;通用函数(ufunc)&quot;&gt;&lt;/a&gt;通用函数(ufunc)&lt;/h3&gt;&lt;p&gt;NumPy提供常见的数学函数如&lt;code&gt;sin&lt;/code&gt;,&lt;code&gt;cos&lt;/code&gt;和&lt;code&gt;exp&lt;/code&gt;。在NumPy中，这些叫作“通用函数”(ufunc)。在NumPy里这些函数作用按数组的元素运算，产生一个数组作为输出。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; B = arange(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; exp(B)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1.        ,  2.71828183,  7.3890561 ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; sqrt(B)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0.        ,  1.        ,  1.41421356])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; C = array([2., -1., 4.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; add(B, C)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 2.,  0.,  6.])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多函数all, alltrue, any, apply along axis, argmax, argmin, argsort, average, bincount, ceil, clip, conj, conjugate, corrcoef, cov, cross, cumprod, cumsum, diff, dot, floor, inner, inv, lexsort, max, maximum, mean, median, min, minimum, nonzero, outer, prod, re, round, sometrue, sort, std, sum, trace, transpose, var, vdot, vectorize, where 参见:&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;索引，切片和迭代&quot;&gt;&lt;a href=&quot;#索引，切片和迭代&quot; class=&quot;headerlink&quot; title=&quot;索引，切片和迭代&quot;&gt;&lt;/a&gt;索引，切片和迭代&lt;/h3&gt;&lt;p&gt;&lt;em&gt;一维&lt;/em&gt;数组可以被索引、切片和迭代，就像&lt;a href=&quot;http://docs.python.org/tutorial/introduction.html#SECTION005140000000000000000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;列表&lt;/a&gt;和其它Python序列。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(10)**3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  0,   1,   8,  27,  64, 125, 216, 343, 512, 729])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[2:5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 8, 27, 64])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:6:2] = -1000    # equivalent to a[0:6:2] = -1000; from start to position 6, exclusive, set every 2nd element to -1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([-1000,     1, -1000,    27, -1000,   125,   216,   343,   512,   729])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[ : :-1]                                 # reversed a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  729,   512,   343,   216,   125, -1000,    27, -1000,     1, -1000])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for i in a:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         print i**(1/3.),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nan 1.0 nan 3.0 nan 5.0 6.0 7.0 8.0 9.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;多维&lt;/em&gt;数组可以每个轴有一个索引。这些索引由一个逗号分割的元组给出。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def f(x,y):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         return 10*x+y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = fromfunction(f,(5,4),dtype=int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11, 12, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [20, 21, 22, 23],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [30, 31, 32, 33],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [40, 41, 42, 43]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[0:5, 1]                       # each row in the second column of b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1, 11, 21, 31, 41])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[ : ,1]                        # equivalent to the previous example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1, 11, 21, 31, 41])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[1:3, : ]                      # each column in the second and third row of b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[10, 11, 12, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [20, 21, 22, 23]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当少于轴数的索引被提供时，确失的索引被认为是整个切片：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b[-1]                                  # the last row. Equivalent to b[-1,:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([40, 41, 42, 43])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;b[i]&lt;/code&gt;中括号中的表达式被当作&lt;code&gt;i&lt;/code&gt;和一系列&lt;code&gt;:&lt;/code&gt;，来代表剩下的轴。NumPy也允许你使用“点”像&lt;code&gt;b[i,...]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;点&lt;/em&gt;(…)代表许多产生一个完整的索引元组必要的分号。如果x是秩为5的数组(即它有5个轴)，那么:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x[1,2,…] 等同于 x[1,2,:,:,:],&lt;/li&gt;
&lt;li&gt;x[…,3] 等同于 x[:,:,:,:,3]&lt;/li&gt;
&lt;li&gt;x[4,…,5,:] 等同 x[4,:,:,5,:].&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--?0--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = array( [ [[  0,  1,  2],      # a 3D array (two stacked 2D arrays)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               [ 10, 12, 13]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              [[100,101,102],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               [110,112,113]] ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 2, 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c[1,...]                          # same as c[1,:,:] or c[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[100, 101, 102],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [110, 112, 113]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c[...,2]                          # same as c[:,:,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[  2,  13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [102, 113]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;迭代&lt;/em&gt;多维数组是就第一个轴而言的:[2](0轴)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for row in b:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         print row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0 1 2 3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[10 11 12 13]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[20 21 22 23]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[30 31 32 33]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[40 41 42 43]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，如果一个人想对每个数组中元素进行运算，我们可以使用flat属性，该属性是数组元素的一个迭代器:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for element in b.flat:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         print element,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 1 2 3 10 11 12 13 20 21 22 23 30 31 32 33 40 41 42 43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多[], …, newaxis, ndenumerate, indices, index exp 参考&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;形状操作&quot;&gt;&lt;a href=&quot;#形状操作&quot; class=&quot;headerlink&quot; title=&quot;形状操作&quot;&gt;&lt;/a&gt;形状操作&lt;/h2&gt;&lt;h3 id=&quot;更改数组的形状&quot;&gt;&lt;a href=&quot;#更改数组的形状&quot; class=&quot;headerlink&quot; title=&quot;更改数组的形状&quot;&gt;&lt;/a&gt;更改数组的形状&lt;/h3&gt;&lt;p&gt;一个数组的形状由它每个轴上的元素个数给出：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = floor(10*random.random((3,4)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  5.,  9.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  2.,  7.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  8.,  3.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个数组的形状可以被多种命令修改：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.ravel() # flatten the array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 7.,  5.,  9.,  3.,  7.,  2.,  7.,  8.,  6.,  8.,  3.,  2.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape = (6, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.transpose()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  9.,  7.,  7.,  6.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  3.,  2.,  8.,  8.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由&lt;code&gt;ravel()&lt;/code&gt;展平的数组元素的顺序通常是“C风格”的，就是说，最右边的索引变化得最快，所以元素a[0,0]之后是a[0,1]。如果数组被改变形状(reshape)成其它形状，数组仍然是“C风格”的。NumPy通常创建一个以这个顺序保存数据的数组，所以&lt;code&gt;ravel()&lt;/code&gt;将总是不需要复制它的参数[3](即self，它自己)。但是如果数组是通过切片其它数组或有不同寻常的选项时，它可能需要被复制。函数&lt;code&gt;reshape()&lt;/code&gt;和&lt;code&gt;ravel()&lt;/code&gt;还可以被同过一些可选参数构建成FORTRAN风格的数组，即最左边的索引变化最快。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reshape&lt;/code&gt;函数改变参数形状并返回它，而&lt;code&gt;resize&lt;/code&gt;函数改变数组自身。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  5.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.resize((2,6))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 7.,  5.,  9.,  3.,  7.,  2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  8.,  6.,  8.,  3.,  2.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果在改变形状操作中一个维度被给做-1，其维度将自动被计算&lt;/p&gt;
&lt;p&gt;更多 shape, reshape, resize, ravel 参考&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;组合-stack-不同的数组&quot;&gt;&lt;a href=&quot;#组合-stack-不同的数组&quot; class=&quot;headerlink&quot; title=&quot;组合(stack)不同的数组&quot;&gt;&lt;/a&gt;组合(stack)不同的数组&lt;/h3&gt;&lt;p&gt;几种方法可以沿不同轴将数组堆叠在一起：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = floor(10*random.random((2,2)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = floor(10*random.random((2,2)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; vstack((a,b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hstack((a,b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.,  3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.,  6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数&lt;code&gt;column_stack&lt;/code&gt;以列将一维数组合成二维数组，它等同与&lt;code&gt;vstack&lt;/code&gt;对一维数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; column_stack((a,b))   # With 2D arrays&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  1.,  3.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5.,  8.,  6.,  0.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=array([4.,2.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=array([2.,8.])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:,newaxis]  # This allows to have a 2D columns vector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; column_stack((a[:,newaxis],b[:,newaxis]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4.,  2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.,  8.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; vstack((a[:,newaxis],b[:,newaxis])) # The behavior of vstack is different&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;row_stack&lt;/code&gt;函数，另一方面，将一维数组以行组合成二维数组。&lt;/p&gt;
&lt;p&gt;对那些维度比二维更高的数组，&lt;code&gt;hstack&lt;/code&gt;沿着第二个轴组合，&lt;code&gt;vstack&lt;/code&gt;沿着第一个轴组合,&lt;code&gt;concatenate&lt;/code&gt;允许可选参数给出组合时沿着的轴。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在复杂情况下，&lt;code&gt;r_[]&lt;/code&gt;和&lt;code&gt;c_[]&lt;/code&gt;对创建沿着一个方向组合的数很有用，它们允许范围符号(“:”):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; r_[1:4,0,4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([1, 2, 3, 0, 4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当使用数组作为参数时，&lt;code&gt;r_&lt;/code&gt;和&lt;code&gt;c_&lt;/code&gt;的默认行为和&lt;code&gt;vstack&lt;/code&gt;和&lt;code&gt;hstack&lt;/code&gt;很像，但是允许可选的参数给出组合所沿着的轴的代号。&lt;/p&gt;
&lt;p&gt;更多函数hstack , vstack, column_stack , row&lt;em&gt;stack , concatenate , c&lt;/em&gt; , r_&lt;br&gt;参见&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;将一个数组分割-split-成几个小数组&quot;&gt;&lt;a href=&quot;#将一个数组分割-split-成几个小数组&quot; class=&quot;headerlink&quot; title=&quot;将一个数组分割(split)成几个小数组&quot;&gt;&lt;/a&gt;将一个数组分割(split)成几个小数组&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;hsplit&lt;/code&gt;你能将数组沿着它的水平轴分割，或者指定返回相同形状数组的个数，或者指定在哪些列后发生分割:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = floor(10*random.random((2,12)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 8.,  8.,  3.,  9.,  0.,  4.,  3.,  0.,  0.,  6.,  4.,  4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  3.,  2.,  9.,  6.,  0.,  4.,  5.,  7.,  5.,  1.,  4.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hsplit(a,3)   # Split a into 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[array([[ 8.,  8.,  3.,  9.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  3.,  2.,  9.]]), array([[ 0.,  4.,  3.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.,  4.,  5.]]), array([[ 0.,  6.,  4.,  4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7.,  5.,  1.,  4.]])]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hsplit(a,(3,4))   # Split a after the third and the fourth column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[array([[ 8.,  8.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  3.,  2.]]), array([[ 9.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9.]]), array([[ 0.,  4.,  3.,  0.,  0.,  6.,  4.,  4.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6.,  0.,  4.,  5.,  7.,  5.,  1.,  4.]])]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;vsplit&lt;/code&gt;沿着纵向的轴分割，&lt;code&gt;array split&lt;/code&gt;允许指定沿哪个轴分割。&lt;/p&gt;
&lt;h2 id=&quot;复制和视图&quot;&gt;&lt;a href=&quot;#复制和视图&quot; class=&quot;headerlink&quot; title=&quot;复制和视图&quot;&gt;&lt;/a&gt;复制和视图&lt;/h2&gt;&lt;p&gt;当运算和处理数组时，它们的数据有时被拷贝到新的数组有时不是。这通常是新手的困惑之源。这有三种情况:&lt;/p&gt;
&lt;h3 id=&quot;完全不拷贝&quot;&gt;&lt;a href=&quot;#完全不拷贝&quot; class=&quot;headerlink&quot; title=&quot;完全不拷贝&quot;&gt;&lt;/a&gt;完全不拷贝&lt;/h3&gt;&lt;p&gt;简单的赋值不拷贝数组对象或它们的数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = a            # no new object is created&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b is a           # a and b are two names for the same ndarray object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b.shape = 3,4    # changes the shape of a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Python 传递不定对象作为参考[4](形参)，所以函数调用不拷贝数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def f(x):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print id(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; id(a)                           # id is a unique identifier of an object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148293216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; f(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148293216&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;视图-view-和浅复制&quot;&gt;&lt;a href=&quot;#视图-view-和浅复制&quot; class=&quot;headerlink&quot; title=&quot;视图(view)和浅复制&quot;&gt;&lt;/a&gt;视图(view)和浅复制&lt;/h3&gt;&lt;p&gt;不同的数组对象分享同一个数据。视图方法创造一个新的数组对象指向同一数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = a.view()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c is a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.base is a                        # c is a view of the data owned by a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.flags.owndata&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.shape = 2,6                      # a&amp;apos;s shape doesn&amp;apos;t change&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c[0,4] = 1234                      # a&amp;apos;s data changes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[   0,    1,    2,    3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [1234,    5,    6,    7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [   8,    9,   10,   11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;切片数组返回它的一个视图：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = a[ : , 1:3]     # spaces added for clarity; could also be written &amp;quot;s = a[:,1:3]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s[:] = 10           # s[:] is a view of s. Note the difference between s=10 and s[:]=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[   0,   10,   10,    3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [1234,   10,   10,    7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [   8,   10,   10,   11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;深复制&quot;&gt;&lt;a href=&quot;#深复制&quot; class=&quot;headerlink&quot; title=&quot;深复制&quot;&gt;&lt;/a&gt;深复制&lt;/h2&gt;&lt;p&gt;这个复制方法完全复制数组和它的数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d = a.copy()                          # a new array object with new data is created&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d is a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d.base is a                           # d doesn&amp;apos;t share anything with a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d[0,0] = 9999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[   0,   10,   10,    3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [1234,   10,   10,    7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [   8,   10,   10,   11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;函数和方法-method-总览&quot;&gt;&lt;a href=&quot;#函数和方法-method-总览&quot; class=&quot;headerlink&quot; title=&quot;函数和方法(method)总览&quot;&gt;&lt;/a&gt;函数和方法(method)总览&lt;/h3&gt;&lt;p&gt;这是个NumPy函数和方法分类排列目录。这些名字链接到&lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy示例&lt;/a&gt;,你可以看到这些函数起作用。[5](0轴)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;创建数组&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;arange, array, copy, empty, empty_like, eye, fromfile, fromfunction, identity, linspace, logspace, mgrid, ogrid, ones, ones_like, r , zeros, zeros_like&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;转化&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;astype, atleast 1d, atleast 2d, atleast 3d, mat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;操作&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;array split, column stack, concatenate, diagonal, dsplit, dstack, hsplit, hstack, item, newaxis, ravel, repeat, reshape, resize, squeeze, swapaxes, take, transpose, vsplit, vstack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;询问&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;all, any, nonzero, where&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;排序&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;argmax, argmin, argsort, max, min, ptp, searchsorted, sort&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;运算&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;choose, compress, cumprod, cumsum, inner, fill, imag, prod, put, putmask, real, sum&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;基本统计&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cov, mean, std, var&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;基本线性代数&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cross, dot, outer, svd, vdot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;进阶&quot;&gt;&lt;a href=&quot;#进阶&quot; class=&quot;headerlink&quot; title=&quot;进阶&quot;&gt;&lt;/a&gt;进阶&lt;/h2&gt;&lt;h3 id=&quot;广播法则-rule&quot;&gt;&lt;a href=&quot;#广播法则-rule&quot; class=&quot;headerlink&quot; title=&quot;广播法则(rule)&quot;&gt;&lt;/a&gt;广播法则(rule)&lt;/h3&gt;&lt;p&gt;广播法则能使通用函数有意义地处理不具有相同形状的输入。&lt;/p&gt;
&lt;p&gt;广播第一法则是，如果所有的输入数组维度不都相同，一个“1”将被重复地添加在维度较小的数组上直至所有的数组拥有一样的维度。&lt;/p&gt;
&lt;p&gt;广播第二法则确定长度为1的数组沿着特殊的方向表现地好像它有沿着那个方向最大形状的大小。对数组来说，沿着那个维度的数组元素的值理应相同。&lt;/p&gt;
&lt;p&gt;应用广播法则之后，所有数组的大小必须匹配。更多细节可以从这个&lt;a href=&quot;http://scipy.org/EricsBroadcastingDoc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;找到。&lt;/p&gt;
&lt;h2 id=&quot;花哨的索引和索引技巧&quot;&gt;&lt;a href=&quot;#花哨的索引和索引技巧&quot; class=&quot;headerlink&quot; title=&quot;花哨的索引和索引技巧&quot;&gt;&lt;/a&gt;花哨的索引和索引技巧&lt;/h2&gt;&lt;p&gt;NumPy比普通Python序列提供更多的索引功能。除了索引整数和切片，正如我们之前看到的，数组可以被整数数组和布尔数组索引。&lt;/p&gt;
&lt;h3 id=&quot;通过数组索引&quot;&gt;&lt;a href=&quot;#通过数组索引&quot; class=&quot;headerlink&quot; title=&quot;通过数组索引&quot;&gt;&lt;/a&gt;通过数组索引&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12)**2                          # the first 12 square numbers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; i = array( [ 1,1,3,8,5 ] )                 # an array of indices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[i]                                       # the elements of a at the positions i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 1,  1,  9, 64, 25])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; j = array( [ [ 3, 4], [ 9, 7 ] ] )         # a bidimensional array of indices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[j]                                       # the same shape as j&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 9, 16],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [81, 49]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当被索引数组a是多维的时，每一个唯一的索引数列指向a的第一维[5](0轴)。以下示例通过将图片标签用调色版转换成色彩图像展示了这种行为。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; palette = array( [ [0,0,0],                # black&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [255,0,0],              # red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [0,255,0],              # green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [0,0,255],              # blue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                    [255,255,255] ] )       # white&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; image = array( [ [ 0, 1, 2, 0 ],           # each value corresponds to a color in the palette&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                  [ 0, 3, 4, 0 ]  ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; palette[image]                            # the (2,4,3) color image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[  0,   0,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [255,   0,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0, 255,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0,   0,   0]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[  0,   0,   0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0,   0, 255],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [255, 255, 255],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [  0,   0,   0]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们也可以给出不不止一维的索引，每一维的索引数组必须有相同的形状。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  1,  2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; i = array( [ [0,1],                        # indices for the first dim of a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              [1,2] ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; j = array( [ [2,1],                        # indices for the second dim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              [3,3] ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[i,j]                                     # i and j must have equal shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[i,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6, 10]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:,j]                                     # i.e., a[ : , j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[ 2,  1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 3,  3]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[ 6,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 7,  7]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[10,  9],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [11, 11]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自然，我们可以把i和j放到序列中(比如说列表)然后通过list索引。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; l = [i,j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[l]                                       # equivalent to a[i,j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，我们不能把i和j放在一个数组中，因为这个数组将被解释成索引a的第一维。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = array( [i,j] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[s]                                       # not what we want&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IndexError                                Traceback (most recent call last)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ipython-input-100-b912f631cc75&amp;gt; in &amp;lt;module&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----&amp;gt; 1 a[s]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IndexError: index (3) out of range (0&amp;lt;=index&amp;lt;2) in dimension 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[tuple(s)]                                # same as a[i,j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 7, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一个常用的数组索引用法是搜索时间序列最大值[6](我也不知道在翻译什么了……)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time = linspace(20, 145, 5)                 # time scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data = sin(arange(20)).reshape(5,4)         # 4 time-dependent series&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  20.  ,   51.25,   82.5 ,  113.75,  145.  ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0.        ,  0.84147098,  0.90929743,  0.14112001],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [-0.7568025 , -0.95892427, -0.2794155 ,  0.6569866 ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.98935825,  0.41211849, -0.54402111, -0.99999021],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [-0.53657292,  0.42016704,  0.99060736,  0.65028784],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [-0.28790332, -0.96139749, -0.75098725,  0.14987721]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ind = data.argmax(axis=0)                   # index of the maxima for each series&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ind&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([2, 0, 3, 1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time_max = time[ ind]                       # times corresponding to the maxima&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data_max = data[ind, xrange(data.shape[1])] # =&amp;gt; data[ind[0],0], data[ind[1],1]...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time_max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([  82.5 ,   20.  ,  113.75,   51.25])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; data_max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0.98935825,  0.84147098,  0.99060736,  0.6569866 ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; all(data_max == data.max(axis=0))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也可以使用数组索引作为目标来赋值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 1, 2, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[[1,3,4]] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([0, 0, 2, 0, 0])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，当一个索引列表包含重复时，赋值被多次完成，保留最后的值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[[0,0,2]]=[1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([2, 1, 3, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这足够合理，但是小心如果你想用Python的&lt;code&gt;+=&lt;/code&gt;结构，可能结果并非你所期望：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[[0,0,2]]+=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([1, 1, 3, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即使0在索引列表中出现两次，索引为0的元素仅仅增加一次。这是因为Python要求&lt;code&gt;a+=1&lt;/code&gt;和&lt;code&gt;a=a+1&lt;/code&gt;等同。&lt;/p&gt;
&lt;h3 id=&quot;通过布尔数组索引&quot;&gt;&lt;a href=&quot;#通过布尔数组索引&quot; class=&quot;headerlink&quot; title=&quot;通过布尔数组索引&quot;&gt;&lt;/a&gt;通过布尔数组索引&lt;/h3&gt;&lt;p&gt;当我们使用整数数组索引数组时，我们提供一个索引列表去选择。通过布尔数组索引的方法是不同的我们显式地选择数组中我们想要和不想要的元素。&lt;/p&gt;
&lt;p&gt;我们能想到的使用布尔数组的索引最自然方式就是使用和原数组一样形状的布尔数组。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = a &amp;gt; 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b                                          # b is a boolean with a&amp;apos;s shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[False, False, False, False],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [False, True, True, True],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [True, True, True, True]], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b]                                       # 1d array with the selected elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 5,  6,  7,  8,  9, 10, 11])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个属性在赋值时非常有用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b] = 0                                   # All elements of &amp;apos;a&amp;apos; higher than 4 become 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[0, 1, 2, 3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [4, 0, 0, 0],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [0, 0, 0, 0]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你可以参考&lt;a href=&quot;http://scipy.org/Tentative_NumPy_Tutorial/Mandelbrot_Set_Example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;曼德博集合示例&lt;/a&gt;看看如何使用布尔索引来生成曼德博集合的图像。&lt;/p&gt;
&lt;p&gt;第二种通过布尔来索引的方法更近似于整数索引；对数组的每个维度我们给一个一维布尔数组来选择我们想要的切片。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(12).reshape(3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b1 = array([False,True,True])             # first dim selection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b2 = array([True,False,True,False])       # second dim selection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b1,:]                                   # selecting rows&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b1]                                     # same thing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 4,  5,  6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8,  9, 10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[:,b2]                                   # selecting columns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0,  2],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4,  6],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 8, 10]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[b1,b2]                                  # a weird thing to do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 4, 10])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意一维数组的长度必须和你想要切片的维度或轴的长度一致，在之前的例子中，b1是一个秩为1长度为三的数组(a的行数)，b2(长度为4)与a的第二秩(列)相一致。[7](上面最后一个例子，b1和b2中的true个数必须一致)&lt;/p&gt;
&lt;h3 id=&quot;ix-函数&quot;&gt;&lt;a href=&quot;#ix-函数&quot; class=&quot;headerlink&quot; title=&quot;ix_()函数&quot;&gt;&lt;/a&gt;ix_()函数&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ix_&lt;/code&gt;函数可以为了获得&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E5%A4%9A%E5%85%83%E7%BB%84&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多元组&lt;/a&gt;的结果而用来结合不同向量。例如，如果你想要用所有向量a、b和c元素组成的三元组来计算&lt;code&gt;a+b*c&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array([2,3,4,5])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = array([8,5,4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c = array([5,4,6,8,3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ax,bx,cx = ix_(a,b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[2]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[3]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[4]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[5]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; bx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[8],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [4]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; cx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[5, 4, 6, 8, 3]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ax.shape, bx.shape, cx.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;((4, 1, 1), (1, 3, 1), (1, 1, 5))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = ax+bx*cx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[42, 34, 50, 66, 26],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [27, 22, 32, 42, 17],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [22, 18, 26, 34, 14]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[43, 35, 51, 67, 27],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [28, 23, 33, 43, 18],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [23, 19, 27, 35, 15]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[44, 36, 52, 68, 28],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [29, 24, 34, 44, 19],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [24, 20, 28, 36, 16]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[45, 37, 53, 69, 29],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [30, 25, 35, 45, 20],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [25, 21, 29, 37, 17]]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result[3,2,4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[3]+b[2]*c[4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也可以实行如下简化：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def ufunc_reduce(ufct, *vectors):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    vs = ix_(*vectors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = ufct.identity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for v in vs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r = ufct(r,v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return r&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后这样使用它：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ufunc_reduce(add,a,b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[15, 14, 16, 18, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [12, 11, 13, 15, 10],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [11, 10, 12, 14,  9]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[16, 15, 17, 19, 14],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [13, 12, 14, 16, 11],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [12, 11, 13, 15, 10]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[17, 16, 18, 20, 15],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [14, 13, 15, 17, 12],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [13, 12, 14, 16, 11]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[18, 17, 19, 21, 16],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [15, 14, 16, 18, 13],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [14, 13, 15, 17, 12]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个reduce与ufunc.reduce(比如说add.reduce)相比的优势在于它利用了广播法则，避免了创建一个输出大小乘以向量个数的参数数组。[8](我不怎么明白……总之避免创建一个很大的数组。)&lt;/p&gt;
&lt;h3 id=&quot;用字符串索引&quot;&gt;&lt;a href=&quot;#用字符串索引&quot; class=&quot;headerlink&quot; title=&quot;用字符串索引&quot;&gt;&lt;/a&gt;用字符串索引&lt;/h3&gt;&lt;p&gt;参见&lt;a href=&quot;http://www.scipy.org/RecordArrays&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RecordArray&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;线性代数&quot;&gt;&lt;a href=&quot;#线性代数&quot; class=&quot;headerlink&quot; title=&quot;线性代数&quot;&gt;&lt;/a&gt;线性代数&lt;/h2&gt;&lt;p&gt;继续前进，基本线性代数包含在这里。&lt;/p&gt;
&lt;h3 id=&quot;简单数组运算&quot;&gt;&lt;a href=&quot;#简单数组运算&quot; class=&quot;headerlink&quot; title=&quot;简单数组运算&quot;&gt;&lt;/a&gt;简单数组运算&lt;/h3&gt;&lt;p&gt;参考numpy文件夹中的linalg.py获得更多信息&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from numpy.linalg import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = array([[1.0, 2.0], [3.0, 4.0]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 1\.  2.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 3\.  4.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.transpose()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 2.,  4.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; inv(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[-2\. ,  1\. ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 1.5, -0.5]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; u = eye(2) # unit 2x2 matrix; &amp;quot;eye&amp;quot; represents &amp;quot;I&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; u&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.,  1.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; j = array([[0.0, -1.0], [1.0, 0.0]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dot (j, j) # matrix product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[-1.,  0.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0., -1.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; trace(u)  # trace&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; y = array([[5.], [7.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; solve(a, y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[-3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 4.]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; eig(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(array([ 0.+1.j,  0.-1.j]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 0.70710678+0.j,  0.70710678+0.j],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 0.00000000-0.70710678j,  0.00000000+0.70710678j]]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Parameters:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    square matrix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Returns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    The eigenvalues, each repeated according to its multiplicity.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    The normalized (unit &amp;quot;length&amp;quot;) eigenvectors, such that the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    column ``v[:,i]`` is the eigenvector corresponding to the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    eigenvalue ``w[i]`` .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;矩阵类&quot;&gt;&lt;a href=&quot;#矩阵类&quot; class=&quot;headerlink&quot; title=&quot;矩阵类&quot;&gt;&lt;/a&gt;矩阵类&lt;/h3&gt;&lt;p&gt;这是一个关于矩阵类的简短介绍。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A = matrix(&amp;apos;1.0 2.0; 3.0 4.0&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 1\.  2.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 3\.  4.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(A)  # file where class is defined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;class &amp;apos;numpy.matrixlib.defmatrix.matrix&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.T  # transpose&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 1\.  3.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 2\.  4.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; X = matrix(&amp;apos;5.0 7.0&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Y = X.T&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[5.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [7.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A*Y  # matrix multiplication&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[19.]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [43.]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A.I  # inverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[-2\.   1\. ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 1.5 -0.5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; solve(A, Y)  # solving linear equation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[-3.],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 4.]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;索引：比较矩阵和二维数组&quot;&gt;&lt;a href=&quot;#索引：比较矩阵和二维数组&quot; class=&quot;headerlink&quot; title=&quot;索引：比较矩阵和二维数组&quot;&gt;&lt;/a&gt;索引：比较矩阵和二维数组&lt;/h3&gt;&lt;p&gt;注意NumPy中数组和矩阵有些重要的区别。NumPy提供了两个基本的对象：一个N维数组对象和一个通用函数对象。其它对象都是建构在它们之上的。特别的，矩阵是继承自NumPy数组对象的二维数组对象。对数组和矩阵，索引都必须包含合适的一个或多个这些组合：整数标量、省略号(ellipses)、整数列表;布尔值，整数或布尔值构成的元组，和一个一维整数或布尔值数组。矩阵可以被用作矩阵的索引，但是通常需要数组、列表或者其它形式来完成这个任务。&lt;/p&gt;
&lt;p&gt;像平常在Python中一样，索引是从0开始的。传统上我们用矩形的行和列表示一个二维数组或矩阵，其中沿着0轴的方向被穿过的称作行，沿着1轴的方向被穿过的是列。[9](水平是1轴，垂直是0轴。)&lt;/p&gt;
&lt;p&gt;让我们创建数组和矩阵用来切片：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A = arange(12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.shape = (3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M = mat(A.copy())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print type(A),&amp;quot;  &amp;quot;,type(M)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;numpy.ndarray&amp;apos;&amp;gt;    &amp;lt;class &amp;apos;numpy.core.defmatrix.matrix&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在，让我们简单的切几片。基本的切片使用切片对象或整数。例如，&lt;code&gt;A[:]&lt;/code&gt;和&lt;code&gt;M[:]&lt;/code&gt;的求值将表现得和Python索引很相似。然而要注意很重要的一点就是NumPy切片数组&lt;em&gt;不&lt;/em&gt;创建数据的副本;切片提供统一数据的视图。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A[:]; print A[:].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print M[:]; print M[:].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在有些和Python索引不同的了：你可以同时使用逗号分割索引来沿着多个轴索引。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A[:,1]; print A[:,1].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1 5 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print M[:,1]; print M[:,1].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [9]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意最后两个结果的不同。对二维数组使用一个冒号产生一个一维数组，然而矩阵产生了一个二维矩阵。[10](&lt;code&gt;type(M[:,1])&lt;/code&gt;和&lt;code&gt;type(A[:,1])&lt;/code&gt;你可以看到是这样。)例如，一个&lt;code&gt;M[2,:]&lt;/code&gt;切片产生了一个形状为(1,4)的矩阵，相比之下，一个数组的切片总是产生一个最低可能维度[11](什么叫尽可能低的维度？不懂。)的数组。例如，如果C是一个三维数组，&lt;code&gt;C[...,1]&lt;/code&gt;产生一个二维的数组而&lt;code&gt;C[1,:,1]&lt;/code&gt;产生一个一维数组。从这时开始，如果相应的矩阵切片结果是相同的话，我们将只展示数组切片的结果。&lt;/p&gt;
&lt;p&gt;假如我们想要一个数组的第一列和第三列，一种方法是使用列表切片：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[:,[1,3]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;稍微复杂点的方法是使用&lt;code&gt;take()&lt;/code&gt;方法(method):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[:,].take([1,3],axis=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 1,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们想跳过第一行，我们可以这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[1:,].take([1,3],axis=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者我们仅仅使用&lt;code&gt;A[1:,[1,3]]&lt;/code&gt;。还有一种方法是通过矩阵向量积(叉积)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[ix_((1,2),(1,3))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 5,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 9, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了读者的方便，再次写下之前的矩阵：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ 0  1  2  3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 4  5  6  7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ 8  9 10 11]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在让我们做些更复杂的。比如说我们想要保留第一行大于1的列。一种方法是创建布尔索引：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[0,:]&amp;gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([False, False, True, True], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[:,A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就是我们想要的！但是索引矩阵没这么方便。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[0,:]&amp;gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[False, False, True, True]], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[:,M[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[2, 3]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个过程的问题是用“矩阵切片”来切片产生一个矩阵[12](用矩阵切片)，但是矩阵有个方便的&lt;code&gt;A&lt;/code&gt;属性，它的值是数组呈现的。所以我们仅仅做以下替代：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[:,M.A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ 2,  3],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们想要在矩阵两个方向有条件地切片，我们必须稍微调整策略，代之以：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[A[:,0]&amp;gt;2,A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ 6, 11])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[M.A[:,0]&amp;gt;2,M.A[0,:]&amp;gt;1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ 6, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要使用向量积&lt;code&gt;ix_&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A[ix_(A[:,0]&amp;gt;2,A[0,:]&amp;gt;1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; M[ix_(M.A[:,0]&amp;gt;2,M.A[0,:]&amp;gt;1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ 6,  7],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [10, 11]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;技巧和提示&quot;&gt;&lt;a href=&quot;#技巧和提示&quot; class=&quot;headerlink&quot; title=&quot;技巧和提示&quot;&gt;&lt;/a&gt;技巧和提示&lt;/h2&gt;&lt;p&gt;下面我们给出简短和有用的提示。&lt;/p&gt;
&lt;h3 id=&quot;“自动”改变形状&quot;&gt;&lt;a href=&quot;#“自动”改变形状&quot; class=&quot;headerlink&quot; title=&quot;“自动”改变形状&quot;&gt;&lt;/a&gt;“自动”改变形状&lt;/h3&gt;&lt;p&gt;更改数组的维度，你可以省略一个尺寸，它将被自动推导出来。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = arange(30)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape = 2,-1,3  # -1 means &amp;quot;whatever is needed&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 5, 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[[ 0,  1,  2],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 3,  4,  5],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 6,  7,  8],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ 9, 10, 11],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [12, 13, 14]],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[15, 16, 17],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [18, 19, 20],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [21, 22, 23],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [24, 25, 26],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [27, 28, 29]]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;向量组合-stacking&quot;&gt;&lt;a href=&quot;#向量组合-stacking&quot; class=&quot;headerlink&quot; title=&quot;向量组合(stacking)&quot;&gt;&lt;/a&gt;向量组合(stacking)&lt;/h3&gt;&lt;p&gt;我们如何用两个相同尺寸的行向量列表构建一个二维数组？在MATLAB中这非常简单：如果x和y是两个相同长度的向量，你仅仅需要做&lt;code&gt;m=[x;y]&lt;/code&gt;。在NumPy中这个过程通过函数&lt;code&gt;column_stack&lt;/code&gt;、&lt;code&gt;dstack&lt;/code&gt;、&lt;code&gt;hstack&lt;/code&gt;和&lt;code&gt;vstack&lt;/code&gt;来完成，取决于你想要在那个维度上组合。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = arange(0,10,2)                     # x=([0,2,4,6,8])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = arange(5)                          # y=([0,1,2,3,4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = vstack([x,y])                      # m=([[0,2,4,6,8],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       #     [0,1,2,3,4]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xy = hstack([x,y])                     # xy =([0,2,4,6,8,0,1,2,3,4])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;二维以上这些函数背后的逻辑会很奇怪。&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;http://scipy.org/NumPy_for_Matlab_Users&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;写个Matlab用户的NumPy指南&lt;/a&gt;并且在这里添加你的新发现: )&lt;/p&gt;
&lt;h3 id=&quot;直方图-histogram&quot;&gt;&lt;a href=&quot;#直方图-histogram&quot; class=&quot;headerlink&quot; title=&quot;直方图(histogram)&quot;&gt;&lt;/a&gt;直方图(histogram)&lt;/h3&gt;&lt;p&gt;NumPy中&lt;code&gt;histogram&lt;/code&gt;函数应用到一个数组返回一对变量：直方图数组和箱式向量。注意：&lt;code&gt;matplotlib&lt;/code&gt;也有一个用来建立直方图的函数(叫作&lt;code&gt;hist&lt;/code&gt;,正如matlab中一样)与NumPy中的不同。主要的差别是&lt;code&gt;pylab.hist&lt;/code&gt;自动绘制直方图，而&lt;code&gt;numpy.histogram&lt;/code&gt;仅仅产生数据。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import numpy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pylab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Build a vector of 10000 normal deviates with variance 0.5^2 and mean 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mu, sigma = 2, 0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v = numpy.random.normal(mu,sigma,10000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Plot a normalized histogram with 50 bins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.hist(v, bins=50, normed=1)       # matplotlib version (plot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Compute the histogram with numpy and then plot it&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(n, bins) = numpy.histogram(v, bins=50, normed=True)  # NumPy version (no plot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.plot(.5*(bins[1:]+bins[:-1]), n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pylab.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;http://docs.python.org/tut/tut.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://scipy.org/Numpy_Example_List&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Numpy Example List&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The nonexistent &lt;a href=&quot;http://scipy.org/NumPy_Tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy Tutorial&lt;/a&gt; at scipy.org, where we can find the old Numeric documentation.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.tramy.us/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Guide to NumPy&lt;/a&gt; book.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://scipy.org/SciPy_Tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SciPy Tutorial&lt;/a&gt; and a &lt;a href=&quot;http://www.rexx.com/~dkuhlman/scipy_course_01.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SciPy course online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scipy.org/NumPy_for_Matlab_Users&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NumPy for Matlab Users&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a href=&quot;http://mathesaurus.sf.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;matlab, R, IDL, NumPy/SciPy dictionary&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;http://scipy.org/Tentative_NumPy_Tutorial&quot;&gt;Tentative NumPy Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译文：&lt;a href=&quot;http://reverland.org/python/2012/08/22/numpy&quot;&gt;试验性NumPy教程(译)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;先决条件&quot;&gt;&lt;a href=&quot;#先决条件&quot; class=&quot;headerlink&quot; title=&quot;先决条件&quot;&gt;&lt;/a&gt;先决条件&lt;/h2&gt;&lt;p&gt;在阅读这个教程之前，你多少需要知道点python。如果你想重新回忆下，请看看&lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;Python Tutorial&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
      <category term="科学计算" scheme="http://it-ebooks.flygon.net/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="numpy" scheme="http://it-ebooks.flygon.net/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习笔记 模块篇</title>
    <link href="http://it-ebooks.flygon.net/python-note-module/"/>
    <id>http://it-ebooks.flygon.net/python-note-module/</id>
    <published>2016-03-13T09:26:25.000Z</published>
    <updated>2016-03-13T09:26:11.660Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004,2005,2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转 载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年7月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年03月01日，增加cjkcodecs模块。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python为开发人员提供了丰富的模块，通过这些模块，我们就可快速开发出功能强大的程序。本笔记记录我所接触或学习过的Python模块，为想学习Python的朋友提供一个参考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811889&quot;&gt;1. Python Imaging Library(PIL)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811915&quot;&gt;1.1. 安装&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811923&quot;&gt;1.1.1. 下载相关软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809722&quot;&gt;1.1.2. 开始安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809818&quot;&gt;2. Pmw(Python megawidgets)Python超级GUI组件集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2809843&quot;&gt;2.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810164&quot;&gt;2.2. 模块功能演示&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810171&quot;&gt;2.2.1. ScrolledListBox(滚动列表框)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810195&quot;&gt;2.2.2. ScrolledText（滚动文本框）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810219&quot;&gt;3. PyXML&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810394&quot;&gt;3.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810431&quot;&gt;3.2. 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810447&quot;&gt;4. PyGame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810462&quot;&gt;5. PyOpenGL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810479&quot;&gt;6. NumPy和Numarray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810500&quot;&gt;7. MySQLdb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2810521&quot;&gt;7.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810555&quot;&gt;7.2. 模块功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861658&quot;&gt;7.3. 模块功能演示&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2862112&quot;&gt;8. Tkinter模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2862119&quot;&gt;8.1. Tkinter简介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2862133&quot;&gt;9. PyGTK&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2862104&quot;&gt;9.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2862080&quot;&gt;9.2. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861697&quot;&gt;10. PyQt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861724&quot;&gt;10.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861855&quot;&gt;11. PyMedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861875&quot;&gt;12. Python-ldap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861891&quot;&gt;12.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808494&quot;&gt;13. ftplib – FTP protocol client&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808548&quot;&gt;13.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808607&quot;&gt;14. Psyco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808658&quot;&gt;14.1. 安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808709&quot;&gt;15. smtplib&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808717&quot;&gt;15.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808780&quot;&gt;16. XMPPPY&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808800&quot;&gt;16.1. 示例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808819&quot;&gt;16.2. cjkcodecs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-1-Python-Imaging-Library-PIL&quot;&gt;&lt;a href=&quot;#Chapter-1-Python-Imaging-Library-PIL&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1. Python Imaging Library(PIL)&quot;&gt;&lt;/a&gt;Chapter 1. Python Imaging Library(PIL)&lt;/h2&gt;&lt;p&gt;PIL(Python图形库)为python提供强大的图形处理的能力，并提供广泛的图形文件格式支持，当前最新的版本是1.1.4。可到以下网址&lt;a href=&quot;http://www.pythonware.com/products/pil/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pythonware.com/products/pil/index.htm&lt;/a&gt;了解PIL的最新动态。该库能进行图形格式的转换、打印和显示。还能进行一些图形效果的处理，如图形的放大、缩小和旋转等。是Python用户进行图象处理的强有力工具。&lt;/p&gt;
&lt;h2 id=&quot;1-1-安装&quot;&gt;&lt;a href=&quot;#1-1-安装&quot; class=&quot;headerlink&quot; title=&quot;1.1. 安装&quot;&gt;&lt;/a&gt;1.1. 安装&lt;/h2&gt;&lt;h3 id=&quot;1-1-1-下载相关软件&quot;&gt;&lt;a href=&quot;#1-1-1-下载相关软件&quot; class=&quot;headerlink&quot; title=&quot;1.1.1. 下载相关软件&quot;&gt;&lt;/a&gt;1.1.1. 下载相关软件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;到&lt;a href=&quot;http://www.pythonware.com/products/pil/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pythonware.com/products/pil/index.htm&lt;/a&gt;下载最新版的PIL安装程序。这里介绍的是在linux下的安装方法。windows平台的安装方法较简单，只要双击安装程序，就可一步步安装好了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果要PIL支持jpeg格式文件，还需安装jpeg库文件，可到&lt;a href=&quot;http://www.ijg.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ijg.org&lt;/a&gt;下载，现时最新的版本是jpegsrc.v6b.tar.gz。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果要PIL支持压缩功能，还要下载Zlib库，可到&lt;a href=&quot;http://www.gzip.org/zlib/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gzip.org/zlib/&lt;/a&gt;下载zlib-1.1.4.tar.gz。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-1-2-开始安装&quot;&gt;&lt;a href=&quot;#1-1-2-开始安装&quot; class=&quot;headerlink&quot; title=&quot;1.1.2. 开始安装&quot;&gt;&lt;/a&gt;1.1.2. 开始安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;先安装jpeg库，输入以下命令进行安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xfz jpegsrc.v6b.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd jpeg-6b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install-lib&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着安装Zlib库，输入以下命令进行安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xfz zlib-1.1.4.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd zlib-1.1.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后安装PIL，输入以下命令进行安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xfz Imaging-1.1.4.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd Imaging-1.1.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd libImaging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试安装是否成功，可以在Python的命令行界面输入以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;import Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;im = Image.open(&amp;quot;test.jpg&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;im.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果成功打开test.jpg图片则安装成功。注意，在linux中，需要用xv程序来显示图片，所以如果没装xv，python会提示找不到xv。可到&lt;a href=&quot;http://www.trilon.com/xv/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.trilon.com/xv/downloads.html&lt;/a&gt;下载xv。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-2-Pmw-Python-megawidgets-Python超级GUI组件集&quot;&gt;&lt;a href=&quot;#Chapter-2-Pmw-Python-megawidgets-Python超级GUI组件集&quot; class=&quot;headerlink&quot; title=&quot;Chapter 2. Pmw(Python megawidgets)Python超级GUI组件集&quot;&gt;&lt;/a&gt;Chapter 2. Pmw(Python megawidgets)Python超级GUI组件集&lt;/h2&gt;&lt;p&gt;Pmw是一个在python中利用Tkinter模块构建的高级GUI组件，每个Pmw都合并了一个或多个Tkinter组件，以实现更有用和更复杂的功能。如，Pmw中的一个ScrolledListBox（滚动列表框）实现了Tkinter的Scrollbar（滚动条）和ListBox（列表框）功能，使我们编程更方便。如果你在Python中开发GUI程序，Pmw是将是你的一个好帮手。&lt;/p&gt;
&lt;h2 id=&quot;2-1-安装&quot;&gt;&lt;a href=&quot;#2-1-安装&quot; class=&quot;headerlink&quot; title=&quot;2.1. 安装&quot;&gt;&lt;/a&gt;2.1. 安装&lt;/h2&gt;&lt;p&gt;现在最新的Pmw是1.2版，Pmw的安装比较简单，只要到&lt;a href=&quot;http://pmw.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pmw.sourceforge.net/&lt;/a&gt;下载软件，然后用tar -zxvf命令解压文件，把解压出来的Pmw目录拷到python的模块目录下就可以了，如site-packages 目录。windows平台使用同一压缩包，安装方法也一样。安装完成后可登录进python的命令行界面运行“import Pmw”测试是否安装成功，如果没有出错信息，则安装成功，可以使用了。&lt;/p&gt;
&lt;h2 id=&quot;2-2-模块功能演示&quot;&gt;&lt;a href=&quot;#2-2-模块功能演示&quot; class=&quot;headerlink&quot; title=&quot;2.2. 模块功能演示&quot;&gt;&lt;/a&gt;2.2. 模块功能演示&lt;/h2&gt;&lt;h3 id=&quot;2-2-1-ScrolledListBox-滚动列表框&quot;&gt;&lt;a href=&quot;#2-2-1-ScrolledListBox-滚动列表框&quot; class=&quot;headerlink&quot; title=&quot;2.2.1. ScrolledListBox(滚动列表框)&quot;&gt;&lt;/a&gt;2.2.1. ScrolledListBox(滚动列表框)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#ScrolledListBox used to select image.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from Tkinter import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import Pmw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ImageSelection( Frame ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;List of available images and an area to display them&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__( self, images ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;Create list of PhotoImages and Label to display them&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Frame.__init__( self )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Pmw.initialise()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.pack( expand = YES, fill = BOTH )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.master.title( &amp;quot;Select an image&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.photos = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #add PhotoImage object to list photos&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for item in images:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.photos.append( PhotoImage( file = item ) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #create scrolled list box with vertical scrollbar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.listBox = Pmw.ScrolledListBox( self, items = images,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            listbox_height = 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            vscrollmode = &amp;quot;static&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            selectioncommand = self.switchImage )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.listBox.pack( side = LEFT, expand = YES, fill = BOTH, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.display = Label( self, image = self.photos[0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.display.pack( padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switchImage ( self ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;Change image in Label to current selection&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #get tuple containing index of selected list item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        chosenPicture = self.listBox.curselection()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #configure label to display selected image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if chosenPicture:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            choice = int( chosenPicture[0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.display.config( image = self.photos[ choice ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def main():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    images = [ &amp;quot;c:\python23\logo.gif&amp;quot;, &amp;quot;c:\python23\china.gif&amp;quot;, &amp;quot;c:\python23\canada.gif&amp;quot;, &amp;quot;c:\python23\logo.gif&amp;quot; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ImageSelection(images).mainloop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;images/ScrolledListBox.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-2-2-ScrolledText（滚动文本框）&quot;&gt;&lt;a href=&quot;#2-2-2-ScrolledText（滚动文本框）&quot; class=&quot;headerlink&quot; title=&quot;2.2.2. ScrolledText（滚动文本框）&quot;&gt;&lt;/a&gt;2.2.2. ScrolledText（滚动文本框）&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#Copying selected text from one text area to another.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from Tkinter import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import Pmw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class CopyTextWindow( Frame ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;Demonatrate ScrolledText&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__( self ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;Create two ScrolledText and a Button&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Frame.__init__( self )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Pmw.initialise()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.pack( expand = YES, fill = BOTH )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.master.title( &amp;quot;ScrolledText Demo&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #create scrolled text box with word wrap enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text1 = Pmw.ScrolledText( self, text_width = 25, text_height = 12,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       text_wrap = WORD, hscrollmode = &amp;quot;static&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       vscrollmode = &amp;quot;static&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text1.pack( side = LEFT, expand = YES, fill = BOTH, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.copyButton = Button( self, text = &amp;quot;Copy &amp;gt;&amp;gt;&amp;gt;&amp;quot;, command = self.copyText )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.copyButton.pack( side = LEFT, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #create uneditable scrolled text box&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text2 = Pmw.ScrolledText( self, text_state = DISABLED, text_width = 25,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       text_height = 12, text_wrap = WORD,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       hscrollmode = &amp;quot;static&amp;quot;, vscrollmode = &amp;quot;static&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text2.pack( side = LEFT, expand = YES, fill = BOTH, padx = 5, pady = 5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def copyText( self ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;set the text in the second ScrolledText&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text2.settext( self.text1.get( SEL_FIRST,SEL_LAST ) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def main():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CopyTextWindow().mainloop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;images/ScrolledText.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Chapter-3-PyXML&quot;&gt;&lt;a href=&quot;#Chapter-3-PyXML&quot; class=&quot;headerlink&quot; title=&quot;Chapter 3. PyXML&quot;&gt;&lt;/a&gt;Chapter 3. PyXML&lt;/h2&gt;&lt;p&gt;PyXML是一套用Python解析和处理XML文档的工具包，包中的4DOM是完全相容于W3C DOM规范的。它包含以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;xmlproc: 一个符合规范的XML解析器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expat: 一个快速的，非验证的XML解析器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sgmlop: a C helper module that can speed-up xmllib.py and sgmllib.py by a factor of 5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PySAX: SAX 1 and SAX2 libraries with drivers for most of the parsers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4DOM: A fully compliant DOM Level 2 implementation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;javadom: An adapter from Java DOM implementations to the standard Python DOM binding.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pulldom: a DOM implementation that supports lazy instantiation of nodes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;marshal: a module with several options for serializing Python objects to XML, including WDDX and XML-RPC.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-1-安装&quot;&gt;&lt;a href=&quot;#3-1-安装&quot; class=&quot;headerlink&quot; title=&quot;3.1. 安装&quot;&gt;&lt;/a&gt;3.1. 安装&lt;/h2&gt;&lt;p&gt;到&lt;a href=&quot;http://sourceforge.net/project/showfiles.php group_id=6473&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sourceforge.net/project/showfiles.php group_id=6473&lt;/a&gt;下载最新版的模块，现在是PyXML-0.8.3。安装PyXML需要有python2.0以上及以上的版本。下载完成后用tar解压缩生成PyXML-0.8.3目录，进入该目录并运行python setup.py build和python setup.py install完成安装。测试方法是进入命令行交互界面运行“import xml.dom.ext”命令，如果没提示模块出错则说明安装成功。PyXML提供windows平台的安装包，下载后双击运行就可以了。&lt;/p&gt;
&lt;h2 id=&quot;3-2-使用&quot;&gt;&lt;a href=&quot;#3-2-使用&quot; class=&quot;headerlink&quot; title=&quot;3.2. 使用&quot;&gt;&lt;/a&gt;3.2. 使用&lt;/h2&gt;&lt;p&gt;由于该模块的内容较多，所以该模块的详细使用将我在“PyXML学习笔记”中单独讨论。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-4-PyGame&quot;&gt;&lt;a href=&quot;#Chapter-4-PyGame&quot; class=&quot;headerlink&quot; title=&quot;Chapter 4. PyGame&quot;&gt;&lt;/a&gt;Chapter 4. PyGame&lt;/h2&gt;&lt;p&gt;PyGame是一组用于多媒体开发和游戏软件开发的模块。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-5-PyOpenGL&quot;&gt;&lt;a href=&quot;#Chapter-5-PyOpenGL&quot; class=&quot;headerlink&quot; title=&quot;Chapter 5. PyOpenGL&quot;&gt;&lt;/a&gt;Chapter 5. PyOpenGL&lt;/h2&gt;&lt;p&gt;PyOpenGL模块封装了“OpenGL应用程序编程接口”，通过该模块python程序员可在程序中集成2D和3D的图形。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-6-NumPy和Numarray&quot;&gt;&lt;a href=&quot;#Chapter-6-NumPy和Numarray&quot; class=&quot;headerlink&quot; title=&quot;Chapter 6. NumPy和Numarray&quot;&gt;&lt;/a&gt;Chapter 6. NumPy和Numarray&lt;/h2&gt;&lt;p&gt;NumPy是Python的一个扩展库，主要用于处理任意维数的固定类型数组，它的低层代码使用C来编写，所以速度的优势很明显。Numarray是NumPy的一个改进版，用于取代NumPy。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-7-MySQLdb&quot;&gt;&lt;a href=&quot;#Chapter-7-MySQLdb&quot; class=&quot;headerlink&quot; title=&quot;Chapter 7. MySQLdb&quot;&gt;&lt;/a&gt;Chapter 7. MySQLdb&lt;/h2&gt;&lt;p&gt;MySQLdb模块用于连接MySQL数据库。源码位于&lt;a href=&quot;http://sourceforge.net/projects/mysql-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sourceforge.net/projects/mysql-python&lt;/a&gt;，这里还有用于zope的ZMySQLDA模块，通过它就可在zope中连接mysql数据库。&lt;/p&gt;
&lt;h2 id=&quot;7-1-安装&quot;&gt;&lt;a href=&quot;#7-1-安装&quot; class=&quot;headerlink&quot; title=&quot;7.1. 安装&quot;&gt;&lt;/a&gt;7.1. 安装&lt;/h2&gt;&lt;p&gt;安装的方法在解压目录的README文件中有详细说明。不难，这里就不详细讲了。要注意的一点是，如果你的mysql不是安装在默认的路径，而是安装在/usr/local/mysql这样的路径的话，libmysqlclient.so.12这个动态库python可能会找不到，造成import出错，解决方法是在/usr/lib下做一个符号连接，ln -s /usr/local/mysql/lib/mysql/libmysqlclient.so.12 libmysqlclient.so.12。最后在python中用import MySQLdb测试，如果没有出错信息就说明安装成功，可以连接mysql数据库了。&lt;/p&gt;
&lt;h2 id=&quot;7-2-模块功能&quot;&gt;&lt;a href=&quot;#7-2-模块功能&quot; class=&quot;headerlink&quot; title=&quot;7.2. 模块功能&quot;&gt;&lt;/a&gt;7.2. 模块功能&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;connect()方法用于连接数据库，返回一个数据库连接对象。如果要连接一个位于host.remote.com服务器上名为fourm的MySQL数据库，连接串可以这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db = MySQLdb.connect(host=&amp;quot;remote.com&amp;quot;,user=&amp;quot;user&amp;quot;,passwd=&amp;quot;xxx&amp;quot;,db=&amp;quot;fourm&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;connect()的参数列表如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;host，连接的数据库服务器主机名，默认为本地主机(localhost)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;user，连接数据库的用户名，默认为当前用户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;passwd，连接密码，没有默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;db，连接的数据库名，没有默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;conv，将文字映射到Python类型的字典。默认为MySQLdb.converters.conversions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cursorclass，cursor()使用的种类，默认值为MySQLdb.cursors.Cursor。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;compress，启用协议压缩功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;named_pipe，在windows中，与一个命名管道相连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;init_command，一旦连接建立，就为数据库服务器指定一条语句来运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;read_default_file，使用指定的MySQL配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;read_default_group，读取的默认组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unix_socket，在unix中，连接使用的套接字，默认使用TCP。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;port，指定数据库服务器的连接端口，默认是3306。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.close()方法可关闭数据库连接，并释放相关资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.cursor([cursorClass])方法返回一个指针对象，用于访问和操作数据库中的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.begin()方法用于开始一个事务，如果数据库的AUTOCOMMIT已经开启就关闭它，直到事务调用commit()和rollback()结束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接对象的db.commit()和db.rollback()方法分别表示事务提交和回退。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.close()方法关闭指针并释放相关资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.execute(query[,parameters])方法执行数据库查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.fetchall()可取出指针结果集中的所有行，返回的结果集一个元组(tuples)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.fetchmany([size=cursor.arraysize])从查询结果集中取出多行，我们可利用可选的参数指定取出的行数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.fetchone()从查询结果集中返回下一行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.arraysize属性指定由cursor.fetchmany()方法返回行的数目，影响fetchall()的性能，默认值为1。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指针对象的cursor.rowcount属性指出上次查询或更新所发生行数。-1表示还没开始查询或没有查询到数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;7-3-模块功能演示&quot;&gt;&lt;a href=&quot;#7-3-模块功能演示&quot; class=&quot;headerlink&quot; title=&quot;7.3. 模块功能演示&quot;&gt;&lt;/a&gt;7.3. 模块功能演示&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import MySQLdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   connection = MySQLdb.connect(user=&amp;quot;user&amp;quot;,passwd=&amp;quot;password&amp;quot;,host=&amp;quot;xxx&amp;quot;,db=&amp;quot;test&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;quot;Could not connect to MySQL server.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   exit( 0 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cursor.execute( &amp;quot;SELECT note_id,note_detail FROM note where note_id = 1&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;quot;Rows selected:&amp;quot;, cursor.rowcount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   for row in cursor.fetchall():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       print &amp;quot;note : &amp;quot;, row[0], row[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cursor.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-8-Tkinter模块&quot;&gt;&lt;a href=&quot;#Chapter-8-Tkinter模块&quot; class=&quot;headerlink&quot; title=&quot;Chapter 8. Tkinter模块&quot;&gt;&lt;/a&gt;Chapter 8. Tkinter模块&lt;/h2&gt;&lt;h2 id=&quot;8-1-Tkinter简介&quot;&gt;&lt;a href=&quot;#8-1-Tkinter简介&quot; class=&quot;headerlink&quot; title=&quot;8.1. Tkinter简介&quot;&gt;&lt;/a&gt;8.1. Tkinter简介&lt;/h2&gt;&lt;p&gt;Tkinter是Python默认的图形界面接口，Tkinter是一个和Tk接口的Python模块，Tkinter库提供了对Tk API的接口，它属于Tcl/Tk的GUI工具组。Tcl/Tk是由John Ousterhout发展的书写和图形设备。Tcl(工具命令语言)是个宏语言，用于简化shell下复杂程序的开发，Tk工具包是和Tcl一起开发的，目的是为了简化用户接口的设计过程。Tk工具包由许多不同的小部件，如一个按钮、一个滚动条等。通过Tk提供的这些小部件，我们就可快速地进行GUI开发。Perl、Scheme等语言也利用Tk库进行GUI开发。Tkinter是跨平台，在各种平台下都能使用。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-9-PyGTK&quot;&gt;&lt;a href=&quot;#Chapter-9-PyGTK&quot; class=&quot;headerlink&quot; title=&quot;Chapter 9. PyGTK&quot;&gt;&lt;/a&gt;Chapter 9. PyGTK&lt;/h2&gt;&lt;p&gt;PyGTK是一个用于python GUI程序开发的GTK+库，当前版本的PyGTK需要GTK+ 2.0以上版本支持和Python 2.2以上版本支持才能运行。&lt;/p&gt;
&lt;h2 id=&quot;9-1-安装&quot;&gt;&lt;a href=&quot;#9-1-安装&quot; class=&quot;headerlink&quot; title=&quot;9.1. 安装&quot;&gt;&lt;/a&gt;9.1. 安装&lt;/h2&gt;&lt;p&gt;如果是在Debian系统中，则安装python2.3-gtk2软件包即可。如果要从源码安装，可到&lt;a href=&quot;http://www.pygtk.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pygtk.org&lt;/a&gt;下载最新的软件包。安装方法也很简单，和其它开源软件差不多，通过configure、make和make install三步操作就可完成。具体操作你可参考源码目录下的README和INSTALL文档，里面有详细的安装说明。注意，要成功安装PyGTK，要有相应版本的GTK+和Python支持。在源码目录下有一个examples目录，这是一个宝贵的资源，里面有很多有用的PyGTK示例代码，对我们学习PyGTK很有帮助。&lt;/p&gt;
&lt;h2 id=&quot;9-2-示例&quot;&gt;&lt;a href=&quot;#9-2-示例&quot; class=&quot;headerlink&quot; title=&quot;9.2. 示例&quot;&gt;&lt;/a&gt;9.2. 示例&lt;/h2&gt;&lt;p&gt;下面是一个PyGTK的示例，演示了PyGTK的基本概念。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygtk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pygtk.require(&amp;apos;2.0&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import gtk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class base:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#destroy信号的回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def destroy(self,widget,data=None):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                gtk.main_quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#clicked信号的回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def hello(self,widget,data):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;apos;hello &amp;apos; + data + &amp;apos; this is a button clicked() test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#delete_event事件的回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def delete_event(self, widget, event, data=None):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;delete event occurred&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果delete_event事件返回假，则会触发destroy信号，从而关闭窗口。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果返回真，则不会关闭窗口。这个特性在当我们需要一个确认是否退出的选择对话框时是很有用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return gtk.FALSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置窗口的delete_event信号触发delete_event函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.connect(&amp;quot;delete_event&amp;quot;, self.delete_event)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置窗口的destroy信号触发destroy函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handler1 = self.window.connect(&amp;quot;destroy&amp;quot;,self.destroy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;handler1 is:%d&amp;quot; % handler1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_title(&amp;apos;PyGTK 测试 window&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_default_size(200,200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_border_width(100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#控制窗口出现的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.set_position(gtk.WIN_POS_CENTER)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#生成按钮实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1 = gtk.Button()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button2 = gtk.Button()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1.set_label(&amp;apos;label1&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button2.set_label(&amp;apos;label2&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置按钮的clicked信号触发hello函数，并传递‘pyGTK’字符串参数给hello函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handler2 = self.button1.connect(&amp;quot;clicked&amp;quot;,self.hello,&amp;quot;pyGTK&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;handler2 is:%d&amp;quot; % handler2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置按钮的clicked信号触发self..window对象的gtk.Widget.destroy方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1.connect_object(&amp;quot;clicked&amp;quot;, gtk.Widget.destroy, self.window)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#取消handler2的功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#               self.button.disconnect(handler2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置一个不可见的横向的栏位self.box1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1 = gtk.HBox(gtk.FALSE, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把box1放到窗口中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.add(self.box1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把button1部件放到box1中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1.pack_start(self.button1,gtk.TRUE,gtk.TRUE,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button1.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把button2部件放到button1部件之后&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1.pack_start(self.button2,gtk.TRUE,gtk.TRUE,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.button2.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.box1.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.window.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def main(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                gtk.main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print __name__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base = base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base.main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有关PyGTK的详细介绍请参考我整理的“PyGTK学习笔记”。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-10-PyQt&quot;&gt;&lt;a href=&quot;#Chapter-10-PyQt&quot; class=&quot;headerlink&quot; title=&quot;Chapter 10. PyQt&quot;&gt;&lt;/a&gt;Chapter 10. PyQt&lt;/h2&gt;&lt;p&gt;PyQt是一套用于python的Qt开发库，由一系列的模块组成，有qt, qtcanvas, qtgl, qtnetwork, qtsql, qttable, qtui and qtxml，包含有300个类和超过5750个的函数和方法。&lt;/p&gt;
&lt;p&gt;PyQt还支持一个叫qtext的模块，它包含一个QScintilla库。该库是Scintillar编辑器类的Qt接口。&lt;/p&gt;
&lt;h2 id=&quot;10-1-安装&quot;&gt;&lt;a href=&quot;#10-1-安装&quot; class=&quot;headerlink&quot; title=&quot;10.1. 安装&quot;&gt;&lt;/a&gt;10.1. 安装&lt;/h2&gt;&lt;p&gt;到&lt;a href=&quot;http://www.riverbankcomputing.co.uk/pyqt/download.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.riverbankcomputing.co.uk/pyqt/download.php&lt;/a&gt;下载最新的版本。安装PyQt需要先安装SIP，到以&lt;a href=&quot;http://www.riverbankcomputing.co.uk/sip/download.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;下载。&lt;a href=&quot;http://www.riverbankcomputing.co.uk/sip/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SIP&lt;/a&gt;是一个把C\C++库转换成Python模块的工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装SIP&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% tar -zxvf sip-4.1.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% cd sip-4.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% python configure.py -l qt          # -l qt 选项指定qt版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装PyQt&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% tar -zxvf PyQt-x11-gpl-3.13.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% cd PyQt-x11-gpl-3.13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% python configure.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-11-PyMedia&quot;&gt;&lt;a href=&quot;#Chapter-11-PyMedia&quot; class=&quot;headerlink&quot; title=&quot;Chapter 11. PyMedia&quot;&gt;&lt;/a&gt;Chapter 11. PyMedia&lt;/h2&gt;&lt;p&gt;PyMedia模块是一个用于多媒体操作的python模块。它提供了丰富而简单的接口用于多媒体处理(wav, mp3, ogg, avi, divx, dvd, cdda etc)。可在Windows和Linux平台下使用。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-12-Python-ldap&quot;&gt;&lt;a href=&quot;#Chapter-12-Python-ldap&quot; class=&quot;headerlink&quot; title=&quot;Chapter 12. Python-ldap&quot;&gt;&lt;/a&gt;Chapter 12. Python-ldap&lt;/h2&gt;&lt;p&gt;Python-ldap模块提供一组面向对象的API，可方便地在python中访问ldap目录服务，它基于OpenLDAP2.x。&lt;/p&gt;
&lt;h2 id=&quot;12-1-示例&quot;&gt;&lt;a href=&quot;#12-1-示例&quot; class=&quot;headerlink&quot; title=&quot;12.1. 示例&quot;&gt;&lt;/a&gt;12.1. 示例&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以下示例在python-ldap网站上有列出，这里作一下简要说明：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- coding:utf-8 -*-                          #设置源码文件编码为utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn = ldap.open(&amp;quot;server_name&amp;quot;)             #server_name为ldap服务器名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.protocol_version = ldap.VERSION3       #设置ldap协议版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;     #用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   password = &amp;quot;123&amp;quot;                            #访问密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.simple_bind(username,password)         #连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:                      #捕获出错信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baseDN = &amp;quot;dc=employees,dc=company,dc=com&amp;quot;      #设置目录的搜索路径起点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;searchScope = ldap.SCOPE_SUBTREE               #设置可搜索子路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;retrieveAttributes = None                      #None表示搜索所有属性，[&amp;apos;cn&amp;apos;]表示只搜索cn属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;searchFilter = &amp;quot;cn=test&amp;quot;                       #设置过滤属性，这里只显示cn=test的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ldap_result_id = conn.search(baseDN,searchScope,searchFilter,retrieveAttributes)                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#调用search方法返回结果id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result_set = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result_type, result_data = conn.result(ldap_result_id, 0)       #通过结果id返回信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if result_data == []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if result_type == ldap.RES_SEARCH_ENTRY:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         result_set.append(result_data)                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print result_set[0][0][1][&amp;apos;o&amp;apos;][0]       #result_set是一个复合列表，需通过索引返回组织单元(o)信息 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里采用的是非同步方式，同步方式的连接和搜索命令后有“_s”后缀，如search_s。非同步方式需通过一个结果id来访问目录服务信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面是一个修改目录信息的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn = ldap.open(&amp;quot;server_name&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.protocol_version = ldap.VERSION3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   password = &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.simple_bind_s(username,password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   dn = &amp;quot;cn=test,dc=employees,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.modify_s(dn,[(ldap.MOD_ADD,&amp;apos;mail&amp;apos;,&amp;apos;test@163.com&amp;apos;)])     #增加一个mail属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ldap.MOD_ADD表示增加属性，ldap.MOD_DELETE表示删除属性，ldap.MOD_REPLACE表示修改属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面是一个增加目录项的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap,ldap.modlist                 #ldap.modlist是ldap的子模块，用于格式化目录服务的数据项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn = ldap.open(&amp;quot;server_name&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.protocol_version = ldap.VERSION3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password = &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.simple_bind_s(username,password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dn = &amp;quot;cn=test,dc=card,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modlist = ldap.modlist.addModlist(&amp;#123;          #格式化目录项，除对象类型要求必填项外， &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;cn&amp;apos;: [&amp;apos;test&amp;apos;],                              #其它项可自由增减                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;objectClass&amp;apos;: [&amp;apos;top&amp;apos;, &amp;apos;person&amp;apos;, &amp;apos;organizationalPerson&amp;apos;, &amp;apos;inetOrgPerson&amp;apos;], &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;o&amp;apos;: [&amp;apos;\xe5\xb9\xbf\xe5\xb7\x9e&amp;apos;],           #这些为utf-8编码的中文 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;street&amp;apos;: [&amp;apos;\xe5\xb9\xbf\xe5\xb7\x9e&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;sn&amp;apos;: [&amp;apos;tester&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;mail&amp;apos;: [&amp;apos;test@163.com&amp;apos;, &amp;apos;test@21cn.com&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;homePhone&amp;apos;: [&amp;apos;xxxxxxxx&amp;apos;], &amp;apos;uid&amp;apos;: [&amp;apos;test&amp;apos;] &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       print modlist                                #显示格式化数据项，格式化后是一个元组列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.add_s(dn,modlist)                       #调用add_s方法添加目录项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实我们也可按格式化后元组列表的形式把目录项直接写到add_s()里，省却转换的步骤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面是一个删除目录项的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ldap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn = ldap.open(&amp;quot;server_name&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.protocol_version = ldap.VERSION3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        username = &amp;quot;cn=admin,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password = &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.simple_bind_s(username,password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dn = &amp;quot;cn=sale,dc=company,dc=com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn.delete_s(dn)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ldap.LDAPError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-13-ftplib-–-FTP-protocol-client&quot;&gt;&lt;a href=&quot;#Chapter-13-ftplib-–-FTP-protocol-client&quot; class=&quot;headerlink&quot; title=&quot;Chapter 13. ftplib – FTP protocol client&quot;&gt;&lt;/a&gt;Chapter 13. ftplib – FTP protocol client&lt;/h2&gt;&lt;p&gt;ftplib模块定义了FTP类和一些方法，用以进行客户端的ftp编程。我们可用python编写一个自已的ftp客户端程序，用于下载文件或镜像站点。如果想了解ftp协议的详细内容，请参考&lt;a href=&quot;http://www.faqs.org/rfcs/rfc959.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RFC959&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;13-1-示例&quot;&gt;&lt;a href=&quot;#13-1-示例&quot; class=&quot;headerlink&quot; title=&quot;13.1. 示例&quot;&gt;&lt;/a&gt;13.1. 示例&lt;/h2&gt;&lt;p&gt;该模块是python的通用模块，所以默认应该已安装。ftplib模块使用很简单，暂时只有一个FTP类和十几个函数。下面用一个交互方式演示一下ftplib的主要功能。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp=FTP(&amp;apos;ftp.python.org&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.login()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;230 Login successful.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.dir()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwxr-x    7 1004     1004          512 Aug 13 01:35 pub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.cwd(&amp;apos;pub&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;250 Directory successfully changed.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.dir()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwxr-x    5 1000     1004         1024 Dec 24 11:04 docs.python.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwsr-x    2 1002     1004          512 Oct 12  2001 jython&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwx------    1 0        1003           25 Aug 03  2001 python -&amp;gt; www.python.org/ftp/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x    9 1018     1004          512 Feb 02 03:44 pyvault&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x    2 1005     1004          512 May 06  2003 tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwsr-x   59 1004     1004         3072 Feb 03 14:58 www.python.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ftp.quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;221 Goodbye.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面一个下载文件的示例&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#author:Jims of www.ringkee.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#create date: 2005/02/05&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#description: Using ftplib module download a file from a ftp server.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp=FTP()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(2)              #打开调试级别2，显示详细信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.connect(&amp;apos;ftp_server&amp;apos;,&amp;apos;port&amp;apos;)   #连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.login(&amp;apos;username&amp;apos;,&amp;apos;password&amp;apos;)   #登录，如果匿名登录则用空串代替即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print ftp.getwelcome()             #显示ftp服务器欢迎信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.cwd(&amp;apos;xxx/xxx/&amp;apos;)                #选择操作目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bufsize = 1024                     #设置缓冲块大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename=&amp;apos;dog.jpg&amp;apos;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_handler = open(filename,&amp;apos;wb&amp;apos;).write              #以写模式在本地打开文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.retrbinary(&amp;apos;RETR dog.jpg&amp;apos;,file_handler,bufsize)   #接收服务器上文件并写入本地文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(0)                                 #关闭调试&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.quit()                                            #退出ftp服务器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面一个上传文件的示例，要成功运行该脚本，需在ftp服务器上有上传文件的权限。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#author:Jims of www.ringkee.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#create date: 2005/02/05&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#description: Using ftplib module upload a file to a ftp server.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp=FTP()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.connect(&amp;apos;ftp_server&amp;apos;,&amp;apos;port&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.login(&amp;apos;username&amp;apos;,&amp;apos;password&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print ftp.getwelcome()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.cwd(&amp;apos;xxx/xxx/&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bufsize = 1024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename=&amp;apos;dog.jpg&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_handler = open(filename,&amp;apos;rb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.storbinary(&amp;apos;STOR dog.jpg&amp;apos;,file_handler,bufsize)   #上传文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.set_debuglevel(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_handler.close()         #关闭文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ftp.quit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是不是很简单，其它功能可查询python的官方网站，网址是&lt;a href=&quot;http://docs.python.org/lib/module-ftplib.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://docs.python.org/lib/module-ftplib.html&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-14-Psyco&quot;&gt;&lt;a href=&quot;#Chapter-14-Psyco&quot; class=&quot;headerlink&quot; title=&quot;Chapter 14. Psyco&quot;&gt;&lt;/a&gt;Chapter 14. Psyco&lt;/h2&gt;&lt;p&gt;Psyco是一个Python代码加速度器，可使Python代码的执行速度提高到与编译语言一样的水平。&lt;/p&gt;
&lt;h2 id=&quot;14-1-安装&quot;&gt;&lt;a href=&quot;#14-1-安装&quot; class=&quot;headerlink&quot; title=&quot;14.1. 安装&quot;&gt;&lt;/a&gt;14.1. 安装&lt;/h2&gt;&lt;p&gt;安装Psyco很简单，它有两种安装方式，一种是源码方式，一种是二进制码方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果用源码方式安装，你需在源码的目录中调用python setup.py install命令编译生成psyco子目录，再把该子目录整个拷贝到python的site-packages目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果用二进制码方式安装，按&lt;a href=&quot;http://psyco.sourceforge.net/psycoguide/binaries.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个网址&lt;/a&gt;列表中的python与psyco版本对应表下载合适的二进制文件，解压后会生成一个psyco-1.x的目录，把该目录下的psyco目录整个拷贝到python的site-packages目录下即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-15-smtplib&quot;&gt;&lt;a href=&quot;#Chapter-15-smtplib&quot; class=&quot;headerlink&quot; title=&quot;Chapter 15. smtplib&quot;&gt;&lt;/a&gt;Chapter 15. smtplib&lt;/h2&gt;&lt;h2 id=&quot;15-1-示例&quot;&gt;&lt;a href=&quot;#15-1-示例&quot; class=&quot;headerlink&quot; title=&quot;15.1. 示例&quot;&gt;&lt;/a&gt;15.1. 示例&lt;/h2&gt;&lt;p&gt;smtplib模块以发送电子邮件。下面是一个示例，可发送附件。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import smtplib,mimetypes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email import Encoders&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email.MIMEBase import MIMEBase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email.MIMEText import MIMEText&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email.MIMEMultipart import MIMEMultipart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg = MIMEMultipart()                        #创建可包含附件的MIME对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg[&amp;apos;Subject&amp;apos;] = &amp;apos;this is title&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg[&amp;apos;From&amp;apos;] = &amp;apos;yjnet@21cn.com&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg[&amp;apos;To&amp;apos;] = &amp;apos;yjnet@21cn.com&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;txt = MIMEText(&amp;apos;这是邮件正文的中文测试。&amp;apos;,_charset=&amp;apos;utf-8&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg.attach(txt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename = &amp;apos;jdk15.tar&amp;apos;                      #附件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fp = open(filename,&amp;apos;rb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ctype,encoding = mimetypes.guess_type(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ctype is None or encoding is not None:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ctype = &amp;apos;application/octet-stream&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;maintype,subtype = ctype.split(&amp;apos;/&amp;apos;,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = MIMEBase(maintype,subtype)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m.set_payload(fp.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fp.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Encoders.encode_base64(m)                                             #把附件编码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m.add_header(&amp;apos;Content-disposition&amp;apos;,&amp;apos;attachment&amp;apos;,filename=filename)    #修改邮件头&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg.attach(m)                                                         #添加附件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = smtplib.SMTP(&amp;apos;smtp.21cn.com&amp;apos;)                                     #连接邮件服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.login(&amp;apos;yjnet&amp;apos;,&amp;apos;****&amp;apos;)                                               #登录邮件服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.sendmail(&amp;apos;yjnet@21cn.com&amp;apos;,&amp;apos;yjnet@21cn.com&amp;apos;,msg.as_string())         #发送邮件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-16-XMPPPY&quot;&gt;&lt;a href=&quot;#Chapter-16-XMPPPY&quot; class=&quot;headerlink&quot; title=&quot;Chapter 16. XMPPPY&quot;&gt;&lt;/a&gt;Chapter 16. XMPPPY&lt;/h2&gt;&lt;p&gt;Jabber服务器采用开发的XMPP协议，Google Talk也是采用XMPP协议的IM系统 。在Python中有一个xmpppy模块支持该协议。也就是说，我们可以通过该模块与Jabber服务器通信，是不是很Cool。&lt;/p&gt;
&lt;h2 id=&quot;16-1-示例&quot;&gt;&lt;a href=&quot;#16-1-示例&quot; class=&quot;headerlink&quot; title=&quot;16.1. 示例&quot;&gt;&lt;/a&gt;16.1. 示例&lt;/h2&gt;&lt;p&gt;下面是一个简单的示例，可使大家对该模块有一个大概的了解。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#导入xmpppy模块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import xmpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#建立Client实例，debian是我的jabber服务器名，jabber服务器的安装可参考我的Debian学习笔记。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c=xmpp.Client(&amp;apos;debian&amp;apos;,debug=[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.connect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;tcp&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#验证&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.auth(&amp;apos;yangjing&amp;apos;,&amp;apos;12345&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;old_auth&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#登入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.sendInitPresence()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#向ringkee@debian&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.send(xmpp.protocol.Message(&amp;apos;ringkee@debian &amp;apos;,&amp;apos;test message from yangjing&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;20&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#下面测试信息接收功能，如果没有信息，则pending_data()为空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;c.TCPsocket.pending_data()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果有信息，则pending_data()不为空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.TCPsocket.pending_data()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;lt;socket._socketobject object at 0xb795beb4&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#接收信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.TCPsocket.receive()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;&amp;lt;message type=&amp;apos;chat&amp;apos; to=&amp;apos;yangjing@debian/xmpppy&amp;apos; from=&amp;apos;ringkee@debian/Gaim&amp;apos;&amp;gt;&amp;lt;x xmlns=&amp;apos;jabber:x:event&amp;apos;&amp;gt;&amp;lt;composing/&amp;gt;&amp;lt;/x&amp;gt;&amp;lt;body&amp;gt;message from ringkee@debian&amp;lt;/body&amp;gt;&amp;lt;html xmlns=&amp;apos;http://jabber.org/protocol/xhtml-im&amp;apos;&amp;gt;&amp;lt;body xmlns=&amp;apos;http://www.w3.org/1999/xhtml&amp;apos;&amp;gt;message from &amp;lt;a HREF=&amp;apos;mailto:ringkee@debian&amp;apos;&amp;gt;ringkee@debian&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;/message&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#登出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; c.disconnect()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;16-2-cjkcodecs&quot;&gt;&lt;a href=&quot;#16-2-cjkcodecs&quot; class=&quot;headerlink&quot; title=&quot;16.2. cjkcodecs&quot;&gt;&lt;/a&gt;16.2. cjkcodecs&lt;/h2&gt;&lt;p&gt;在python2.4版以前，python不能处理cjk（中国，日本和韩国）的编码，所以就有了cjkcodecs模块。安装该模块后Python就能处理cjk字符了。下载网址：&lt;a href=&quot;http://cjkpython.i18n.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cjkpython.i18n.org/&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004,2005,2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转 载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年7月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年03月01日，增加cjkcodecs模块。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习笔记 基础篇</title>
    <link href="http://it-ebooks.flygon.net/python-note-basic/"/>
    <id>http://it-ebooks.flygon.net/python-note-basic/</id>
    <published>2016-03-13T09:20:25.000Z</published>
    <updated>2016-03-13T09:20:48.731Z</updated>
    
    <content type="html">&lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004，2005，2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年07月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年06月14日，把参考篇的内容合并进来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现时国内python的中文资料极少，使学习Python较困难。国外的资料虽多，但都是英文的，使我们学习起来很不方便。有鉴于此，我开始了Python中文资料库的整理工作，以推动Python的发展和在中国的应用。在自由的世界里，正因为有你的支持和帮助，才使我得以不断前进。我相信我们每人一小步就可带动python在中国前进一大步。&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2875104&quot;&gt;1. 绪论&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2811704&quot;&gt;1.1. Python历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2811781&quot;&gt;1.2. Python功能简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810170&quot;&gt;1.3. 应用范围&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2810267&quot;&gt;1.4. 如何开始？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861425&quot;&gt;2. Python编程习惯与特点&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861433&quot;&gt;2.1. 代码风格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861575&quot;&gt;2.2. 保留字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861594&quot;&gt;2.3. Python运算符和表达式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2861602&quot;&gt;2.3.1. Python运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2861844&quot;&gt;2.3.2. 运算符优先顺序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808594&quot;&gt;2.3.3. 真值表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808746&quot;&gt;2.3.4. 复合表达式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808820&quot;&gt;2.4. 给变量赋值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2808911&quot;&gt;3. Python内建对象类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2808928&quot;&gt;3.1. Number数值型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809008&quot;&gt;3.2. String字符串型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2809192&quot;&gt;3.2.1. 字符串的格式化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2809469&quot;&gt;3.2.2. 转义字符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875369&quot;&gt;3.2.3. Unicode字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875512&quot;&gt;3.2.4. 原始字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875536&quot;&gt;3.3. List列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875904&quot;&gt;3.4. Tuple元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2875979&quot;&gt;3.5. 序列对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876078&quot;&gt;3.6. Dictionary字典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876321&quot;&gt;3.7. File文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876343&quot;&gt;3.8. 理解引用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876409&quot;&gt;3.9. copy and deepcopy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876486&quot;&gt;3.10. 标识数据类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876523&quot;&gt;3.11. 数组对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2876868&quot;&gt;4. 控制语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877126&quot;&gt;5. 函数&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2877464&quot;&gt;5.1. 常用函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2877751&quot;&gt;5.2. 内置类型转换函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878060&quot;&gt;5.3. 序列处理函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878241&quot;&gt;6. 模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2878430&quot;&gt;6.1. String模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878537&quot;&gt;6.2. time模块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878619&quot;&gt;7. 类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878694&quot;&gt;8. 异常处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2878856&quot;&gt;9. 文件处理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2878871&quot;&gt;9.1. 文件处理的函数和方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879330&quot;&gt;9.2. 示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2879657&quot;&gt;10. 正则表达式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#id2879700&quot;&gt;10.1. 基本元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2880568&quot;&gt;10.2. 操作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2881059&quot;&gt;11. 调试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#id2881117&quot;&gt;12. HOW-TO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-1-绪论&quot;&gt;&lt;a href=&quot;#Chapter-1-绪论&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1. 绪论&quot;&gt;&lt;/a&gt;Chapter 1. 绪论&lt;/h2&gt;&lt;h2 id=&quot;1-1-Python历史&quot;&gt;&lt;a href=&quot;#1-1-Python历史&quot; class=&quot;headerlink&quot; title=&quot;1.1. Python历史&quot;&gt;&lt;/a&gt;1.1. Python历史&lt;/h2&gt;&lt;p&gt;Python是一种开源的面向对象的脚本语言，它起源于1989年末，当时，CWI（阿姆斯特丹国家数学和计算机科学研究所）的研究员Guido van Rossum需要一种高级脚本编程语言，为其研究小组的Amoeba分布式操作系统执行管理任务。为创建新语言，他从高级数学语言ABC（ALL BASIC CODE）汲取了大量语法，并从系统编程语言Modula-3借鉴了错语处理机制。Van Rossum把这种新的语言命名为Python（大蟒蛇）—来源于BBC当时正在热播的喜剧连续剧“Monty Python”。&lt;/p&gt;
&lt;p&gt;Python于1991年初公开发行，由于功能强大和采用开源方式发行，Python的发展得很快，用户越来越多，形成了一个强大的社区力量。2001年，Python的核心开发团队移师Digital Creations公司，该公司是Zope（一个用Python编写的web应用服务器）的创始者。现在最新的版本是python2.3.4，大家可到&lt;a href=&quot;http://www.python.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.python.org&lt;/a&gt;上了解最新的Python动态和资料 。&lt;/p&gt;
&lt;h2 id=&quot;1-2-Python功能简介&quot;&gt;&lt;a href=&quot;#1-2-Python功能简介&quot; class=&quot;headerlink&quot; title=&quot;1.2. Python功能简介&quot;&gt;&lt;/a&gt;1.2. Python功能简介&lt;/h2&gt;&lt;p&gt;Python是一种解析性的，交互式的，面向对象的编程语言，类似于Perl、Tcl、Scheme或Java。&lt;/p&gt;
&lt;p&gt;Python一些主要功能介绍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python使用一种优雅的语法，可读性强。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python是一种很灵活的语言，能帮你轻松完成编程工作。并可作为一种原型开发语言，加快大型程序的开发速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有多种数据类型：numbers (integers, floating point, complex, and unlimited-length long integers), strings (ASCII 和 Unicode), lists, dictionaries。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python支持类和多层继承等的面向对象编程技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代码能打包成模块和包，方便管理和发布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持异常处理，能有效捕获和处理程序中发生的错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强大的动态数据类型支持，不同数据类型相加会引发一个异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python支持如生成器和列表嵌套等高级编程功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自动内存碎片管理，有效利用内存资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强大的类库支持，使编写文件处理、正则表达式，网络连接等程序变得相当容易。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python的交互命令行模块能方便地进行小代码调试和学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python易于扩展，可以通过C或C++编写的模块进行功能扩展。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python解析器可作为一个编程接口嵌入一个应用程序中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python可运行在多种计算机平台和操作系统中，如各位unix，windows，MacOS,OS/2等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python是开源的，可自由免费使用和发布，并且可用于商业用途以获取利润。如想详细了解Python的许可协议可到以下网址查询&lt;a href=&quot;http://www.python.org/psf/license.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.python.org/psf/license.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-3-应用范围&quot;&gt;&lt;a href=&quot;#1-3-应用范围&quot; class=&quot;headerlink&quot; title=&quot;1.3. 应用范围&quot;&gt;&lt;/a&gt;1.3. 应用范围&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;系统编程，提供大量系统接口API，能方便进行系统维护和管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图形处理，有PIL、Tkinter等图形库支持，能方便进行图形处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数学处理，NumPy扩展提供大量与许多标准数学库的接口，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文本处理，python提供的re模块能支持正则表达式，还提供SGML，XML分析模块，许多程序员利用python进行XML程序的开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库编程，程序员可通过遵循Python DB-API（数据库应用程序编程接口）规范的模块与Microsoft SQL Server，Oracle，Sybase，DB2，Mysql等数据库通信。python自带有一个Gadfly模块，提供了一个完整的SQL环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网络编程，提供丰富的模块支持sockets编程，能方便快速地开发分布式应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;作为Web应用的开发语言，支持最新的XML技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多媒体应用，Python的PyOpenGL模块封装了“OpenGL应用程序编程接口”，能进行二维和三维图像处理。PyGame模块可用于编写游戏软件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-4-如何开始？&quot;&gt;&lt;a href=&quot;#1-4-如何开始？&quot; class=&quot;headerlink&quot; title=&quot;1.4. 如何开始？&quot;&gt;&lt;/a&gt;1.4. 如何开始？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进入交互命令行方式。如果是linux类的系统，python解析器应该已经安装在/usr/local/bin/python中，直接打python就可进入交互式命令行界面，如下所示:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Python 2.3.3 (#1, Apr 27 2004, 15:17:58)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[GCC 3.2 20020903 (Red Hat Linux 8.0 3.2-7)] on linux2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;“&amp;gt;&amp;gt;&amp;gt;”符号是Python命令行界面的提示符，可按CTRL+D退出，如果是windows环境的话就要按CTRL+Z了。还可以用以下命令退出命令行界面：“import sys；sys.exit()”。如果是windows系统，可到&lt;a href=&quot;http://www.python.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.python.org/download/&lt;/a&gt;下载最新的安装程序进行安装。安装完成后直接打python也可进入命令行界面。命令行是python最简单直观，也是最方便的一种执行环境，我们可以在这里学习python语法和调试程序。如果要打印”hello world”可以输入以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print &amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello world&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以模块文件方式运行。模块文件是包含python语句的文本，以.py结尾。运行模块文件只要输入python xxx.py就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以linux脚本方式运行。和shell脚本差不多，以vi或其它文本编辑器输入以下内容:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/local/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;test ............&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;存盘后，把文件属性改为可执行，就可象shell脚本一样执行了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Table 1.1. Python命令行选项&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 选项 | 作用 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -c cmd | 在命令行直接执行python代码。如python -c &amp;apos;print &amp;quot;hello world&amp;quot;&amp;apos;。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -d | 脚本编译后从解释器产生调试信息。同PYTHONDEBUG=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -E | 忽略环境变量。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -h | 显示python命令行选项帮助信息。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -i | 脚本执行后马上进入交互命令行模式。同PYTHONINSPECT=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -O | 在执行前对解释器产生的字节码进行优化。同 PYTHONOPTIMIZE=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -OO | 在执行前对解释器产生的字节码进行优化，并删除优化代码中的嵌入式文档字符串。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -Q arg | 除法规则选项，-Qold(default)，-Qwarn，-Qwarnall，-Qnew。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -S | 解释器不自动导入site.py模块。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -t | 当脚本的tab缩排格式不一致时产生警告。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -u | 不缓冲stdin、stdout和stderr，默认是缓冲的。同PYTHONUNBUFFERED=1。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -v | 产生每个模块的信息。如果两个-v选项，则产生更详细的信息。同PYTHONVERBOSE=x。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -V | 显示Python的版本信息。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -W arg | 出错信息控制。(arg is action:message:category:module:lineno) |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| -x | 忽略源文件的首行。要在多平台上执行脚本时有用。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| file | 执行file里的代码。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| - | 从stdin里读取执行代码。 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-2-Python编程习惯与特点&quot;&gt;&lt;a href=&quot;#Chapter-2-Python编程习惯与特点&quot; class=&quot;headerlink&quot; title=&quot;Chapter 2. Python编程习惯与特点&quot;&gt;&lt;/a&gt;Chapter 2. Python编程习惯与特点&lt;/h2&gt;&lt;h2 id=&quot;2-1-代码风格&quot;&gt;&lt;a href=&quot;#2-1-代码风格&quot; class=&quot;headerlink&quot; title=&quot;2.1. 代码风格&quot;&gt;&lt;/a&gt;2.1. 代码风格&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Python中，每行程序以换行符代表结束，如果一行程序太长的话，可以用“\”符号扩展到下一行。在python中以三引号(“””)括起来的字符串，列表，元组和字典都能跨行使用。并且以小括号(…)、中括号[…]和大括号{…}包围的代码不用加“\”符也可扩展到多行。如：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Python中是以缩进来区分程序功能块的，缩进的长度不受限制，但就一个功能块来讲，最好保持一致的缩进量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果一行中有多条语句，语句间要以分号（;）分隔。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以“#”号开头的内容为注释，python解释器会忽略该行内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在python中，所有标识符可以包括英文、数字以及下划线（_），但不能以数字开头。python中的标识符是区分大小写的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以下划线开头的标识符是有特殊意义的。以单下划线开头（_foo）的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用“from xxx import *”而导入；以双下划线开头的（__foo）代表类的私有成员；以双下划线开头和结尾的（__foo__）代表python里特殊方法专用的标识，如__init__（）代表类的构造函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在交互模式下运行python时，一个下划线字符(_)是特殊标识符，它保留了表达式的最后一个计算结果。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;quot;hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;hello&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; _&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;hello&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 10+10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; _&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在python中，函数、类、模块定义的第一段代码如果是字符串的话，就把它叫作文件字串，可通过__doc__属性访问。如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def test():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;this is a document string&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return 100+1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print test.__doc__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a document string&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-2-保留字&quot;&gt;&lt;a href=&quot;#2-2-保留字&quot; class=&quot;headerlink&quot; title=&quot;2.2. 保留字&quot;&gt;&lt;/a&gt;2.2. 保留字&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;and		elif		global		or          yield&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assert		else		if		pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;break		except		import		print&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class		exec		in		raise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;continue	finally		is		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def		for		lambda		try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;del		from		not		while&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-3-Python运算符和表达式&quot;&gt;&lt;a href=&quot;#2-3-Python运算符和表达式&quot; class=&quot;headerlink&quot; title=&quot;2.3. Python运算符和表达式&quot;&gt;&lt;/a&gt;2.3. Python运算符和表达式&lt;/h2&gt;&lt;h3 id=&quot;2-3-1-Python运算符&quot;&gt;&lt;a href=&quot;#2-3-1-Python运算符&quot; class=&quot;headerlink&quot; title=&quot;2.3.1. Python运算符&quot;&gt;&lt;/a&gt;2.3.1. Python运算符&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Table 2.1. Python运算符列表&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;x+y，x-y&lt;/td&gt;
&lt;td&gt;加、减，“+”号可重载为连接符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x*y，x**y，x/y，x%y&lt;/td&gt;
&lt;td&gt;相乘、求平方、相除、求余，“*”号可重载为重复，“%”号可重载为格式化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;，&amp;lt;=，&amp;gt;，&amp;gt;=，==，&amp;lt;&amp;gt;，!=&lt;/td&gt;
&lt;td&gt;比较运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+=，-=，*=，/=，%=，**=，&amp;lt;&amp;lt;=，&amp;gt;&amp;gt;=，&amp;amp;=，^=，&amp;#124;=&lt;/td&gt;
&lt;td&gt;自变运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;#124;y&lt;/td&gt;
&lt;td&gt;按位或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x^y&lt;/td&gt;
&lt;td&gt;按位异或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;amp;y&lt;/td&gt;
&lt;td&gt;按位与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~x&lt;/td&gt;
&lt;td&gt;按位取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;lt;&amp;lt;，x&amp;gt;&amp;gt;y&lt;/td&gt;
&lt;td&gt;x向左或向右移y位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is, is not&lt;/td&gt;
&lt;td&gt;等同测试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in, not in&lt;/td&gt;
&lt;td&gt;是否为成员测试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;or，and，not&lt;/td&gt;
&lt;td&gt;逻辑运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x[i]，x[i:j]，x.y，x(…)&lt;/td&gt;
&lt;td&gt;索引，分片，限定引用，函数调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(…)，[…]，{…}，’…’&lt;/td&gt;
&lt;td&gt;元组，列表，字典，转化为字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;2-3-2-运算符优先顺序&quot;&gt;&lt;a href=&quot;#2-3-2-运算符优先顺序&quot; class=&quot;headerlink&quot; title=&quot;2.3.2. 运算符优先顺序&quot;&gt;&lt;/a&gt;2.3.2. 运算符优先顺序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Table 2.2. 运算符优先顺序列表(从最高到最低)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‘expr’&lt;/td&gt;
&lt;td&gt;字符串转换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{key:expr,…}&lt;/td&gt;
&lt;td&gt;字典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[expr1,expr2…]&lt;/td&gt;
&lt;td&gt;列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(expr1,expr2,…)&lt;/td&gt;
&lt;td&gt;元组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;function(expr,…)&lt;/td&gt;
&lt;td&gt;函数调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x[index:index]&lt;/td&gt;
&lt;td&gt;切片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x[index]&lt;/td&gt;
&lt;td&gt;下标索引取值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x.attribute&lt;/td&gt;
&lt;td&gt;属性引用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~x&lt;/td&gt;
&lt;td&gt;按位取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+x，-x&lt;/td&gt;
&lt;td&gt;正，负&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x**y&lt;/td&gt;
&lt;td&gt;幂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x*y，x/y，x%y&lt;/td&gt;
&lt;td&gt;乘，除，取模&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x+y，x-y&lt;/td&gt;
&lt;td&gt;加，减&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;lt;&amp;lt;y，x&amp;gt;&amp;gt;y&lt;/td&gt;
&lt;td&gt;移位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;amp;y&lt;/td&gt;
&lt;td&gt;按位与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x^y&lt;/td&gt;
&lt;td&gt;按位异或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;#124;y&lt;/td&gt;
&lt;td&gt;按位或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&amp;lt;y，x&amp;lt;=y，x==y，x!=y，x&amp;gt;=y，x&amp;gt;y&lt;/td&gt;
&lt;td&gt;比较&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x is y，x is not y&lt;/td&gt;
&lt;td&gt;等同测试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x in y，x not in y&lt;/td&gt;
&lt;td&gt;成员判断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;not x&lt;/td&gt;
&lt;td&gt;逻辑否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x and y&lt;/td&gt;
&lt;td&gt;逻辑与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x or y&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lambda arg,…:expr&lt;/td&gt;
&lt;td&gt;Lambda匿名函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;2-3-3-真值表&quot;&gt;&lt;a href=&quot;#2-3-3-真值表&quot; class=&quot;headerlink&quot; title=&quot;2.3.3. 真值表&quot;&gt;&lt;/a&gt;2.3.3. 真值表&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Table 2.3.&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;对象/常量&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;“”&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;“string”&lt;/td&gt;
&lt;td&gt;真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=1&lt;/td&gt;
&lt;td&gt;真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=-1&lt;/td&gt;
&lt;td&gt;真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;()空元组&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[]空列表&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{}空字典&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;假&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;2-3-4-复合表达式&quot;&gt;&lt;a href=&quot;#2-3-4-复合表达式&quot; class=&quot;headerlink&quot; title=&quot;2.3.4. 复合表达式&quot;&gt;&lt;/a&gt;2.3.4. 复合表达式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对于and，当计算a and b时，python会计算a，如果a为假，则取a值，如果a为真，则python会计算b且整个表达式会取b值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=10,20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a and b   #a is true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=0,5   #a is false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a and b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于or，当计算a or b时，python会计算a，如果a为真，则整个表达式取a值，如果a为假，表达式将取b值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=10,20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a or b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b=0,5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a or b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于not，not将反转表表达式的“实际值”，如果表达式为真，not为返回假，如为表达式为假，not为返回真。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not &amp;quot;test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; not &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-4-给变量赋值&quot;&gt;&lt;a href=&quot;#2-4-给变量赋值&quot; class=&quot;headerlink&quot; title=&quot;2.4. 给变量赋值&quot;&gt;&lt;/a&gt;2.4. 给变量赋值&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;简单赋值，Variable(变量)=Value(值)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;b=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多变量赋值，Variable1,variable2,…=Value1,Value2,…&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a,b,c=1,2,3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;多变量赋值也可用于变量交换，接上例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a,b,c=c,b,a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多目标赋值，a=b=variable&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=b=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自变赋值，如+=，-=，*=等。在自变赋值中，python仅计算一次，而普通写法需计算两次；自变赋值会修改原始对象，而不是创建一个新对象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-3-Python内建对象类型&quot;&gt;&lt;a href=&quot;#Chapter-3-Python内建对象类型&quot; class=&quot;headerlink&quot; title=&quot;Chapter 3. Python内建对象类型&quot;&gt;&lt;/a&gt;Chapter 3. Python内建对象类型&lt;/h2&gt;&lt;p&gt;在Python中，所有数据都是对象，数据有各种类型，如数值型、列表型、字符串型等。除系统内建的数据类型外，程序员也可以创建自已的数据类型。以下主要介绍Python内建的数据类型。&lt;/p&gt;
&lt;h2 id=&quot;3-1-Number数值型&quot;&gt;&lt;a href=&quot;#3-1-Number数值型&quot; class=&quot;headerlink&quot; title=&quot;3.1. Number数值型&quot;&gt;&lt;/a&gt;3.1. Number数值型&lt;/h2&gt;&lt;p&gt;在python中，数值有四种类型，分别是整型、长整形、浮点型和复数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;整型—从-2147483648至2147483647，有符号位32位长，可表达的最大数为2^31-1。如：number=123，number1=-123。在数字前加0x或0X 前缀表示十六进制数，在数字前加前缀0表示八进制数，与C/C++ and perl一样。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为方便起见，sys模块包含一个maxint成员，该成员保留了整形变量的最大正数值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print sys.maxint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2147483647&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;长整型—python支持任意长度的长整型，长整型的最大值和最小值由可用的内存确定。长整型数在数字常量尾加L or l，一般都是用L，因为小写的l太容易与数字1混淆了。如：long=1232132131231232132132131L。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浮点数—python支持普通十进制和科学计数法表示的浮点数。如：number=123.456，nubmer1=123.2E10。浮点数在python中的存储格式与C中的双精度数相同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复数—复数的实部和虚部用加号分开，虚部使用后缀j表示，如：number=1.2+2j&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-2-String字符串型&quot;&gt;&lt;a href=&quot;#3-2-String字符串型&quot; class=&quot;headerlink&quot; title=&quot;3.2. String字符串型&quot;&gt;&lt;/a&gt;3.2. String字符串型&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字符串在python被看成是单个字符的序列，具有序列对象的特殊功能，字符串是固定的，不可变的。如：string=”hello world”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可在字符串中使用单引号和双引号。如：string=”I’m a boy”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串内部的一个反斜杠“\”可允许把字符串放于多行：如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;quot;test \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... python&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;test python&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用三个单引号或双引号可使字符串跨行显示。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;helptext=&amp;quot;&amp;quot;&amp;quot;this a help test.if you have any quesions.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            please call me anytime.I will help you.I&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            like python.I hope so as you.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用“+”号可连接字符串。如：string = “hello” + “world”，注意，不能将字符串与其它对象进行连接。如string = “ok” + 5。其实不用“+”号，直接用空格也可连接两个字符串。如：string=”hello” “world”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用“*”号重复字符串，如：’hello’*5会生成’hellohellohellohellohello’。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用索引访问字符串中的字符。如：string=”hello world”，print string[1]将显示字符e。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串可用in或not in运算符来测试字符是不属于一个字符串的成员。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可对字符串分片，如string=”hello world”,print string[6:]将显示world。分片的格式为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string[start:end]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分片和索引的规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回的字符串包含从start起始到end但不包括end结束的所有字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若指定了start但未指定end，则一直向后分片，直至字符串结束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若指定了end但未指定start，则从0开始分片直至end，但不包括end指定的字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若start和end为负数，则索引从字符串尾部开始算起，最后一个字符为-1。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python提供了一个string模块来进行字符串处理。&lt;/p&gt;
&lt;h3 id=&quot;3-2-1-字符串的格式化&quot;&gt;&lt;a href=&quot;#3-2-1-字符串的格式化&quot; class=&quot;headerlink&quot; title=&quot;3.2.1. 字符串的格式化&quot;&gt;&lt;/a&gt;3.2.1. 字符串的格式化&lt;/h3&gt;&lt;p&gt;象C 中的sprintf函数一样，可以用“%”来格式化字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.1. 字符串格式化代码&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;格式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%%&lt;/td&gt;
&lt;td&gt;百分号标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;
&lt;td&gt;字符及其ASCII码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%s&lt;/td&gt;
&lt;td&gt;字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%d&lt;/td&gt;
&lt;td&gt;有符号整数(十进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%u&lt;/td&gt;
&lt;td&gt;无符号整数(十进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%o&lt;/td&gt;
&lt;td&gt;无符号整数(八进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%x&lt;/td&gt;
&lt;td&gt;无符号整数(十六进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%X&lt;/td&gt;
&lt;td&gt;无符号整数(十六进制大写字符)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%e&lt;/td&gt;
&lt;td&gt;浮点数字(科学计数法)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%E&lt;/td&gt;
&lt;td&gt;浮点数字(科学计数法，用E代替e)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%f&lt;/td&gt;
&lt;td&gt;浮点数字(用小数点符号)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%g&lt;/td&gt;
&lt;td&gt;浮点数字(根据值的大小采用%e或%f)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%G&lt;/td&gt;
&lt;td&gt;浮点数字(类似于%g)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%p&lt;/td&gt;
&lt;td&gt;指针(用十六进制打印值的内存地址)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%n&lt;/td&gt;
&lt;td&gt;存储输出字符的数量放进参数列表的下一个变量中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;%格式化符也可用于字典，可用%(name)引用字典中的元素进行格式化输出。&lt;/p&gt;
&lt;p&gt;负号指时数字应该是左对齐的，“0”告诉Python用前导0填充数字，正号指时数字总是显示它的正负(+，-)符号，即使数字是正数也不例外。&lt;/p&gt;
&lt;p&gt;可指定最小的字段宽度，如：”%5d” % 2。也可用句点符指定附加的精度，如：”%.3d” % 3。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3-2-2-转义字符&quot;&gt;&lt;a href=&quot;#3-2-2-转义字符&quot; class=&quot;headerlink&quot; title=&quot;3.2.2. 转义字符&quot;&gt;&lt;/a&gt;3.2.2. 转义字符&lt;/h3&gt;&lt;p&gt;在需要在字符中使用特殊字符时，python用反斜杠()转义字符。如下表：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.2. python支持的转义字符表&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;转义字符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;(在行尾时)&lt;/td&gt;
&lt;td&gt;续行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;反斜杠符号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\’&lt;/td&gt;
&lt;td&gt;单引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\”&lt;/td&gt;
&lt;td&gt;双引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\a&lt;/td&gt;
&lt;td&gt;响铃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;退格(Backspace)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\e&lt;/td&gt;
&lt;td&gt;转义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\000&lt;/td&gt;
&lt;td&gt;空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\v&lt;/td&gt;
&lt;td&gt;纵向制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;横向制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;回车&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;换页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\oyy&lt;/td&gt;
&lt;td&gt;八进制数yy代表的字符，例如：\o12代表换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\xyy&lt;/td&gt;
&lt;td&gt;十进制数yy代表的字符，例如：\x0a代表换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\other&lt;/td&gt;
&lt;td&gt;其它的字符以普通格式输出&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;3-2-3-Unicode字符串&quot;&gt;&lt;a href=&quot;#3-2-3-Unicode字符串&quot; class=&quot;headerlink&quot; title=&quot;3.2.3. Unicode字符串&quot;&gt;&lt;/a&gt;3.2.3. Unicode字符串&lt;/h3&gt;&lt;p&gt;在python2.0中才完全支持Unicode字符串，Unicode字符采用16位(0—65535)值表示，能进行多语言支持。要使用Unicode字符串，只要在字符串前加上“u”即可。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=u&amp;quot;test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原始Unicode字符串用ur前缀，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; u&amp;apos;hello world\0020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;hello world\x020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ur&amp;apos;hello world\0020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;hello world\\0020&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-2-3-1-Unicode转换&quot;&gt;&lt;a href=&quot;#3-2-3-1-Unicode转换&quot; class=&quot;headerlink&quot; title=&quot;3.2.3.1. Unicode转换&quot;&gt;&lt;/a&gt;3.2.3.1. Unicode转换&lt;/h4&gt;&lt;p&gt;只要和Unicode连接，就会产生Unicode字串。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;help&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;help&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;help，&amp;apos; + u&amp;apos;python&amp;apos;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;help，python&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于ASCII(7位)兼容的字串，可和内置的str()函数把Unicode字串转换成ASCII字串。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(u&amp;apos;hello world&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;hello world&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;转换非ASCII兼容的字串会出错。编码和译码字符串时的错误引发UnicodeError异常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可使用encode()函数转换Unicode字串格式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;unicode\xb1\xe0\xc2\xeb\xb2\xe2\xca\xd4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.encode(&amp;apos;utf-8&amp;apos;)   #转换成utf-8，显示结果会根据终端的字符集支持不同而不同，下面是在GB18030下的显示结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;unicode\xc2\xb1\xc3\xa0\xc3\x82\xc3\xab\xc2\xb2\xc3\xa2\xc3\x8a\xc3\x94&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可使用unicode()函数把字符串转换成unicode格式，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=u&amp;apos;unicode测试&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;unicode\xb2\xe2\xca\xd4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.encode(&amp;apos;utf-8&amp;apos;)     #把unicode字串转换成utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;unicode\xc2\xb2\xc3\xa2\xc3\x8a\xc3\x94&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=a.encode(&amp;apos;utf-8&amp;apos;)   #给变量b赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;unicode\xc2\xb2\xc3\xa2\xc3\x8a\xc3\x94&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;unicode(b,&amp;apos;utf-8&amp;apos;)           #用unicode()函数把utf-8格式字串转换回unicode格式。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;unicode\xb2\xe2\xca\xd4&amp;apos;      #和原始的这是a相同&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ord()支持unicode，可以显示特定字符的unicode号码，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;ord(&amp;apos;A&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用unichr()函数可将unicode号码转换回unicode字符，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; unichr(65)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u&amp;apos;A&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-2-4-原始字符串&quot;&gt;&lt;a href=&quot;#3-2-4-原始字符串&quot; class=&quot;headerlink&quot; title=&quot;3.2.4. 原始字符串&quot;&gt;&lt;/a&gt;3.2.4. 原始字符串&lt;/h3&gt;&lt;p&gt;有时我们并不想让转义字符生效，我们只想显示字符串原来的意思，这就要用r和R来定义原始字符串。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;print r&amp;apos;\t\r&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际输出为“\t\r”。&lt;/p&gt;
&lt;h2 id=&quot;3-3-List列表&quot;&gt;&lt;a href=&quot;#3-3-List列表&quot; class=&quot;headerlink&quot; title=&quot;3.3. List列表&quot;&gt;&lt;/a&gt;3.3. List列表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;列表是序列对象，可包含任意的Python数据信息，如字符串、数字、列表、元组等。列表的数据是可变的，我们可通过对象方法对列表中的数据进行增加、修改、删除等操作。可以通过list(seq)函数把一个序列类型转换成一个列表。列表的几个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot; ]&lt;/code&gt;，这是字符列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ 1, 2, 3, 4 ]&lt;/code&gt;，这是数字列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ [1,2,3,4], [&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;] ]&lt;/code&gt;，这是列表的列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;list = [ (1,2,3,4), (&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;) ]&lt;/code&gt;，这是元组列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;list((1,2))把一个元组转换成一个列表[1,2]，list(‘test’)可把字符串转换成[‘t’,’e’,’s’,’t’]列表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问列表可通过索引来引用，如：list[0]将引用列表的第一个值。list[0:1]返回第一和第二个元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用range()和xrange()函数可自动生成列表，具体用法请参考“python参考篇”的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可通过列表综合来创建列表，该功能是在python2.0版本中新增加的。如果想对列表中的每个项进行运算并把结果存储在一个新列表中，可者想创建一个仅包含特定满足某种条件的项，采用该方法是很适合的。如：[x*x for x in range(1,10)]会得到一个X的平方的新列表；我们还可添加if条件控制输出，如：[x*x for x in range(1,10) if x%2==0]；还可在列表中使用多个for语句，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; [x+y for x in &amp;quot;123&amp;quot; for y in &amp;quot;abc&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;1a&amp;apos;, &amp;apos;1b&amp;apos;, &amp;apos;1c&amp;apos;, &amp;apos;2a&amp;apos;, &amp;apos;2b&amp;apos;, &amp;apos;2c&amp;apos;, &amp;apos;3a&amp;apos;, &amp;apos;3b&amp;apos;, &amp;apos;3c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;x,y值可取列表或元组等，以构成更复杂的结构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“+”号可连接两个列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问列表的列表(嵌套列表)可用list[1][0]，这将访问嵌套中的第二个列表的第一个元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用数字与列表相乘以复制内容，如：list*2会得到一个[1,2,3,4,1,2,3,4]的列表。注意，不能用列表与列表相乘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由于列表是可变的，我们可用赋值语句进行操作，如：list[0] = 2。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;列表对象方法可对列表进行操作，如列表内容的添加，删除，排序等。如list.sort()可对list列表进行排序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;**Table 3.3\. 列表对象支持的方法**

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 方法 | 描述 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| append(x) | 在列表尾部追加单个对象x。使用多个参数会引起异常。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| count(x) | 返回对象x在列表中出现的次数。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| extend(L) | 将列表L中的表项添加到列表中。返回None。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Index(x) | 返回列表中匹配对象x的第一个列表项的索引。无匹配元素时产生异常。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| insert(i,x) | 在索引为i的元素前插入对象x。如list.insert(0,x)在第一项前插入对象。返回None。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| pop(x) | 删除列表中索引为x的表项，并返回该表项的值。若未指定索引，pop返回列表最后一项。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| remove(x) | 删除列表中匹配对象x的第一个元素。匹配元素时产生异常。返回None。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| reverse() | 颠倒列表元素的顺序。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| sort() | 对列表排序，返回none。bisect模块可用于排序列表项的添加和删除。 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;3-4-Tuple元组&quot;&gt;&lt;a href=&quot;#3-4-Tuple元组&quot; class=&quot;headerlink&quot; title=&quot;3.4. Tuple元组&quot;&gt;&lt;/a&gt;3.4. Tuple元组&lt;/h2&gt;&lt;p&gt;Tuple(元组)和List(列表)很相似，但元组是不可变的。不能对元组中的元素进行添加，修改和删除操作。如果需修改元组内容只有重建元组。元组用小括号来表示。如tuple=(1,2,3)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tuple=(1,)，这是单个元素的元组表示，需加额外的逗号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tuple=1，2，3，4，这也可以是一个元组，在不使用圆括号而不会导致混淆时，Python允许不使用圆括号的元组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和列表一样，可对元组进行索引、分片、连接和重复。也可用len()求元组长度。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;元组的索引用tuple[i]的形式，而不是tuple(i)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和列表类似，使用tuple(seq)可把其它序列类型转换成元组。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-5-序列对象&quot;&gt;&lt;a href=&quot;#3-5-序列对象&quot; class=&quot;headerlink&quot; title=&quot;3.5. 序列对象&quot;&gt;&lt;/a&gt;3.5. 序列对象&lt;/h2&gt;&lt;p&gt;上面介绍的字符串、列表和元组的对象类型均属于称为序列的Python对象。它是一种可使用数字化索引进行访问其中元素的对象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可用算术运算符联接或重复序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;比较运算符(&amp;lt;，&amp;lt;=，&amp;gt;，&amp;gt;=，!=，==)也可用于序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可通过下标(test[1])，切片(test[1:3])和解包来访问序列的某部份。解包示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;s=1,2,3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;x,y,z=s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print x,y,z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1,2,3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;in运算符可判断当有对象是否序列对象成员，如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;list = [1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;1 in list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;4 in list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可通过循环运算符对序列对象进行迭代操作。如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for day in days:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print day&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关序列的处理函数请参考“python参考篇”相关内容，这里就不详细讲了。&lt;/p&gt;
&lt;h2 id=&quot;3-6-Dictionary字典&quot;&gt;&lt;a href=&quot;#3-6-Dictionary字典&quot; class=&quot;headerlink&quot; title=&quot;3.6. Dictionary字典&quot;&gt;&lt;/a&gt;3.6. Dictionary字典&lt;/h2&gt;&lt;p&gt;字典是一个用大括号括起来的键值对，字典元素分为两部份，键(key)和值。字典是python中唯一内置映射数据类型。通过指定的键从字典访问值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;monthdays = &amp;#123; &amp;quot;Jan&amp;quot;:31, &amp;quot;Feb&amp;quot;:28, &amp;quot;Mar&amp;quot;:31, &amp;quot;Apr&amp;quot;:30, &amp;quot;May&amp;quot;:31, &amp;quot;Jun&amp;quot;:30, &amp;quot;Jul&amp;quot;:31, &amp;quot;Aug&amp;quot;:31, &amp;quot;Sep&amp;quot;:30, &amp;quot;Oct&amp;quot;:31, &amp;quot;Nov&amp;quot;:30,&amp;quot;Dec&amp;quot;:31 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字典可嵌套，可以在一个字典里包含另一个字典。如test={“test”:{“mytest”:10} }&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可用键访问字典，如monthdays[“Jan”]，可访问值31。如果没有找到指定的键，则解释器会引起异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典是可修改，如monthdays[“Jan”]=30，可把Jan的值由31改为30。如monthdays[“test”]=30可添加一个新键值对。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;del monthdays[“test”]可删除字典条目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典不属序列对象，所以不能进行连接和相乘操作。字典是没有顺序的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典提供keys和values方法，用来返回字典中定义的所有键和值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和列表一样，字典也提供了对象方法来对字典进行操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;**Table 3.4\. 字典方法**

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| 方法 | 描述 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| --- | --- |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| has_key(x) | 如果字典中有键x，则返回真。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| keys() | 返回字典中键的列表 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| values() | 返回字典中值的列表。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| items() | 返回tuples的列表。每个tuple由字典的键和相应值组成。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| clear() | 删除字典的所有条目。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| copy() | 返回字典高层结构的一个拷贝，但不复制嵌入结构，而只复制对那些结构的引用。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| update(x) | 用字典x中的键值对更新字典内容。 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| get(x[,y]) | 返回键x，若未找到该键返回none，若提供y，则未找到x时返回y。 |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;3-7-File文件&quot;&gt;&lt;a href=&quot;#3-7-File文件&quot; class=&quot;headerlink&quot; title=&quot;3.7. File文件&quot;&gt;&lt;/a&gt;3.7. File文件&lt;/h2&gt;&lt;p&gt;可用内置的open()函数对文件进行操作。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;input = open(&amp;quot;test.txt&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for line in input.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-8-理解引用&quot;&gt;&lt;a href=&quot;#3-8-理解引用&quot; class=&quot;headerlink&quot; title=&quot;3.8. 理解引用&quot;&gt;&lt;/a&gt;3.8. 理解引用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python把一块数据存储在对象中，变量是对象的唯一引用；它们是计算机内存中特殊地点的名字。所有对象都具有唯一的身份号、类型和值。对象的类型不会改变，对于可变类型而言，它的值是可变的。id(obj)函数可用于检索对象的身份，也就是内存中的对象的地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每个对象都包含引用计数器，它记录当前有多少个变量正在引用该对象。当给对象指定一个变量或使对象成为列表或其它包容器的成员时，引用计数就增加；当从包容器中撤消、重新分配或删除对象时，引用计数减少。当引用计数达到0值时(即没有任何变量引用这个对象)，python的回收机制会自动回收它使用的内存。注意，del可用来删除变量，但不能删除对象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sys.gettrefcount(obj)函数可返回给定对象的引用计数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-9-copy-and-deepcopy&quot;&gt;&lt;a href=&quot;#3-9-copy-and-deepcopy&quot; class=&quot;headerlink&quot; title=&quot;3.9. copy and deepcopy&quot;&gt;&lt;/a&gt;3.9. copy and deepcopy&lt;/h2&gt;&lt;p&gt;通过给列表分配一个变量能创建对列表的引用，如果要创建列表的副本就要理解浅副本和深副本的概念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;列表或其他包容器对象的浅副本(Shallow)能够生成对象本身的副本，但也会创建对由列表包含的对象的引用。可用分片(object[:])和copy模块的copy(obj)函数创建。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;列表或其他对象包容器对象的深副本能够生成对象本身的副本，并递归地生成所有子对象的副本。可用copy模块的deepcopy(obj)函数创建。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较两种副本，一般情况下表现一样，但当列表内包含另一个列表的情况下，父列表的浅副本将包含对子列表引用，而不是独立副本。其结果是，当更改内部列表时，从父列表的两个副本中都可见，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[1,2,3,[4,5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=a[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [4, 5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[3].remove(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [5]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是深副本，就不会出现这种情况。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[1,2,3,[4,5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=copy.deepcopy(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [4, 5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a[3].remove(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [5]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, [4, 5]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-10-标识数据类型&quot;&gt;&lt;a href=&quot;#3-10-标识数据类型&quot; class=&quot;headerlink&quot; title=&quot;3.10. 标识数据类型&quot;&gt;&lt;/a&gt;3.10. 标识数据类型&lt;/h2&gt;&lt;p&gt;可通过type(obj)函数标识数据类型，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;list&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(copy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;module&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;int&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;types模块包含Python的内置数据类型的类型对象。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import types&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; types.ListType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;list&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; types.IntType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;int&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-11-数组对象&quot;&gt;&lt;a href=&quot;#3-11-数组对象&quot; class=&quot;headerlink&quot; title=&quot;3.11. 数组对象&quot;&gt;&lt;/a&gt;3.11. 数组对象&lt;/h2&gt;&lt;p&gt;数组对象与列表类似，但数组只包含某些类型的简单数据。所以当数据较简单，且要求性能好的情况下，使用数组是一个好的选择。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3.5. 数组类型代码&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;代码&lt;/th&gt;
&lt;th&gt;等价的C类型&lt;/th&gt;
&lt;th&gt;以字节为单位的最小尺寸&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b(B)&lt;/td&gt;
&lt;td&gt;byte(unsigned byte)&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h(H)&lt;/td&gt;
&lt;td&gt;short(unsigned short)&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i(I)&lt;/td&gt;
&lt;td&gt;int(unsigned int)&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;l(L)&lt;/td&gt;
&lt;td&gt;long(unsigned long)&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;数组创建方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z=array.array(&amp;quot;b&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.append(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组的itemsize和typecode成员可分别检索数组项的大小和数组对象的类型代码，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.itemsize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.typecode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-1-数组类型与其它数据类型的转换&quot;&gt;&lt;a href=&quot;#3-1-数组类型与其它数据类型的转换&quot; class=&quot;headerlink&quot; title=&quot;3.1. 数组类型与其它数据类型的转换&quot;&gt;&lt;/a&gt;3.1. 数组类型与其它数据类型的转换&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tolist()方法可把数组转换为列表，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.tolist()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fromlist(list)方法可把列表项附加到数组的末尾，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.fromlist([10,11])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1, 2, 3, 10, 11])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如添加的列表类型与数组类型不同，则fromlist(list)不会把任何项添加到数组对象中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tostring()方法，可以把数组转换为字节的序列，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.tostring()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;\x01\x02\x03\n\x0b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fromstring(list)方法刚好与tostring()相反，它获取一个字节串，并把它们转换为数组的值。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.fromstring(&amp;quot;\x0b&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1, 2, 3, 10, 11, 11])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tofile(file)方法可把数组转换为字节的序列，并把它们写入文件，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; f=open(&amp;quot;aa&amp;quot;,&amp;quot;wb&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.tofile(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; f.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fromfile(file,count)方法用于从文件对象中读取特定数目的项，并把它们附加到数组中，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z.fromfile(open(&amp;quot;aa&amp;quot;,&amp;quot;rb&amp;quot;),2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array(&amp;apos;b&amp;apos;, [1, 2, 3, 10, 11, 11, 1, 2])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当取数项大于文件数据项时，formfile会产生EOFError异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数组对象支持列表中的很多相同函数和方法：len，append等。访问成员的方法也可列表一样，可用下标和分片。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-4-控制语句&quot;&gt;&lt;a href=&quot;#Chapter-4-控制语句&quot; class=&quot;headerlink&quot; title=&quot;Chapter 4. 控制语句&quot;&gt;&lt;/a&gt;Chapter 4. 控制语句&lt;/h2&gt;&lt;p&gt;流程控制是程序设计中一个重要的内容，Python支持三种不同的控制结构：if，for和while。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if语句判断表达式是否为真，如果为真则执行指定语句。if语句的格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if   EXPRESSION1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         STATEMENT1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif EXPRESSION2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         STATEMENT2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         STATEMENT3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果第一个表达式为真，则执行statement1，否则进行进一步的测试，如果第二个表达式为真则执行statement2，否则执行statement3。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意语句的缩进量要保持一致。在python中没有switch和case语句，我们可通过多重elif来达到相同的效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mytest = raw_input(&amp;quot;please input a number:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mytest = int(mytest)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if mytest == 10:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;quot;you input number is ten.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif mytest == 20:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;quot;you input number is twenty.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;quot;another number.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;脚本的执行效果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;t03:~# python test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;please input a number:10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;you input number is ten.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t03:~# python test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;please input a number:20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;you input number is twenty.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t03:~# python test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;please input a number:777&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;another number.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;while进行循环控制，它对表达式进行测试，如果为真，则循环执行循环体。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;while EXPRESSION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          STATEMENT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          STATEMENT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果测试为假，则会执行else块。如果循环被中断(break)，则else块不会执行。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; while a &amp;amp;gt; 5:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print &amp;quot;a&amp;apos;s value is five&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&amp;apos;s value is five&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;for循环可遍历对象，并可进行迭代操作。语名格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for TARGET in OBJECTS：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       STATEMENT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       STATEMENT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;和while一样，在循环正常退出时，会执行else块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; mylist = &amp;quot;for statement&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for word in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print word&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print &amp;quot;End list&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;End list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在循环的过程中，我们可使用循环控制语句来控制循环的执行。有三个控制语句，分别是break、continue和pass。它们的作用分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;break语句会立即退出当前循环，不会执行else块的内容。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; mylist = [&amp;quot;zope&amp;quot;,&amp;quot;python&amp;quot;,&amp;quot;perl&amp;quot;,&amp;quot;Linux&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for technic in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     if technic == &amp;quot;perl&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             print technic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zope&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;continue语句会忽略后面的语句，强制进入下一次循环。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; mylist = [&amp;quot;zope&amp;quot;,&amp;quot;python&amp;quot;,&amp;quot;perl&amp;quot;,&amp;quot;Linux&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for technic in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     if technic == &amp;quot;perl&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             print technic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zope&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pass不做任何事情。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for technic in mylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     if technic == &amp;quot;perl&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             print technic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zope&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-5-函数&quot;&gt;&lt;a href=&quot;#Chapter-5-函数&quot; class=&quot;headerlink&quot; title=&quot;Chapter 5. 函数&quot;&gt;&lt;/a&gt;Chapter 5. 函数&lt;/h2&gt;&lt;p&gt;函数是一个能完成特定功能的代码块，可在程序中重复使用，减少程序的代码量和提高程序的执行效率。在python中函数定义语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function_name(arg1,arg2[,...]):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[return value]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;返回值不是必须的，如果没有return语句，则Python默认返回值None。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;函数名的命名规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;函数名必须以下划线或字母开头，可以包含任意字母、数字或下划线的组合。不能使用任何的标点符号；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数名是区分大小写的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数名不能是保留字。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python使用名称空间的概念存储对象，这个名称空间就是对象作用的区域， 不同对象存在于不同的作用域。下面是不同对象的作用域规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;每个模块都有自已的全局作用域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数定义的对象属局部作用域，只在函数内有效，不会影响全局作用域中的对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;赋值对象属局部作用域，除非使用global关键字进行声明。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGB规则是Python查找名字的规则，下面是LGB规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;大多数名字引用在三个作用域中查找：先局部(Local)，次之全局(Global)，再次之内置(Build-in)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(b):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     test=a*b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     return test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print test(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;b在局部作用域中找到,a在全局作用域中找到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如想在局部作用域中改变全局作用域的对象，必须使用global关键字。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#没用global时的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; name=&amp;quot;Jims&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def set():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     name=&amp;quot;ringkee&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; set()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Jims&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#使用global后的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; name=&amp;quot;Jims&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def set1():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     global name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     name=&amp;quot;ringkee&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; set1()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ringkee&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘global’声明把赋值的名字映射到一个包含它的模块的作用域中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数的参数是函数与外部沟通的桥梁，它可接收外部传递过来的值。参数传递的规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在一个函数中对参数名赋值不影响调用者。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(a):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     a=a+1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1             # a值不变&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在一个函数中改变一个可变的对象参数会影响调用者。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=[1,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     a=5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     b[0]=4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 [4, 2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[4, 2]    # b值已被更改&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参数是对象指针，无需定义传递的对象类型。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def test(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     return a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(1,2)   #数值型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test(&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;)   #字符型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;ab&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; test([12],[11])   #列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[12, 11]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数中的参数接收传递的值，参数可分默认参数，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function(ARG=VALUE)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;元组（Tuples）参数：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function(*ARG)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;字典（dictionary）参数：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def function(**ARG)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一些函数规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;默认值必须在非默认参数之后；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在单个函数定义中，只能使用一个tuple参数（*ARG）和一个字典参数（**ARG）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tuple参数必须在连接参数和默认参数之后。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字典参数必须在最后定义。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-1-常用函数&quot;&gt;&lt;a href=&quot;#5-1-常用函数&quot; class=&quot;headerlink&quot; title=&quot;5.1. 常用函数&quot;&gt;&lt;/a&gt;5.1. 常用函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;abs(x)&lt;/p&gt;
&lt;p&gt;abs()返回一个数字的绝对值。如果给出复数，返回值就是该复数的模。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print abs(-100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print abs(1+2j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.2360679775&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;callable(object)&lt;/p&gt;
&lt;p&gt;callable()函数用于测试对象是否可调用，如果可以则返回1(真)；否则返回0(假)。可调用对象包括函数、方法、代码对象、类和已经定义了“调用”方法的类实例。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print callable(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print callable(chr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cmp(x,y)&lt;/p&gt;
&lt;p&gt;cmp()函数比较x和y两个对象，并根据比较结果返回一个整数，如果x&amp;lt;y，则返回-1；如果x&amp;gt;y，则返回1,如果x==y则返回0。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;b=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;c=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print cmp(a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print cmp(b,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print cmp(b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;divmod(x,y)&lt;/p&gt;
&lt;p&gt;divmod(x,y)函数完成除法运算，返回商和余数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; divmod(10,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; divmod(9,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(3, 0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isinstance(object,class-or-type-or-tuple) -&amp;gt; bool&lt;/p&gt;
&lt;p&gt;测试对象类型&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;apos;isinstance test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=1234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;len(object) -&amp;gt; integer&lt;/p&gt;
&lt;p&gt;len()函数返回字符串和序列的长度。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; len(&amp;quot;aa&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; len([1,2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pow(x,y[,z])&lt;/p&gt;
&lt;p&gt;pow()函数返回以x为底，y为指数的幂。如果给出z值，该函数就计算x的y次幂值被z取模的值。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print pow(2,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print pow(2,4,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print pow(2.4,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13.824&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;range([lower,]stop[,step])&lt;/p&gt;
&lt;p&gt;range()函数可按参数生成连续的有序整数列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; range(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; range(1,10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; range(1,10,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 3, 5, 7, 9]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;round(x[,n])&lt;/p&gt;
&lt;p&gt;round()函数返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; round(3.333)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; round(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; round(5.9)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;type(obj)&lt;/p&gt;
&lt;p&gt;type()函数可返回对象的数据类型。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;list&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(copy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;module&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;int&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xrange([lower,]stop[,step])&lt;/p&gt;
&lt;p&gt;xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列表很大时，这个特性能为我们节省内存。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=xrange(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print a[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-2-内置类型转换函数&quot;&gt;&lt;a href=&quot;#5-2-内置类型转换函数&quot; class=&quot;headerlink&quot; title=&quot;5.2. 内置类型转换函数&quot;&gt;&lt;/a&gt;5.2. 内置类型转换函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;chr(i)&lt;/p&gt;
&lt;p&gt;chr()函数返回ASCII码对应的字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print chr(65)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print chr(66)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print chr(65)+chr(66)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;complex(real[,imaginary])&lt;/p&gt;
&lt;p&gt;complex()函数可把字符串或数字转换为复数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(&amp;quot;2+1j&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+1j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(&amp;quot;2&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+0j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+1j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; complex(2L,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2+1j)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;float(x)&lt;/p&gt;
&lt;p&gt;float()函数把一个数字或字符串转换成浮点数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; float(&amp;quot;12&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; float(12L)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; float(12.2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12.199999999999999&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hex(x)&lt;/p&gt;
&lt;p&gt;hex()函数可把整数转换成十六进制数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hex(16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;0x10&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; hex(123)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;0x7b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;long(x[,base])&lt;/p&gt;
&lt;p&gt;long()函数把数字和字符串转换成长整数，base为可选的基数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; long(&amp;quot;123&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123L&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; long(11)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11L&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;list(x)&lt;/p&gt;
&lt;p&gt;list()函数可将序列对象转换成列表。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; list(&amp;quot;hello world&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;h&amp;apos;, &amp;apos;e&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos; &amp;apos;, &amp;apos;w&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos;r&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;d&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; list((1,2,3,4))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1, 2, 3, 4]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int(x[,base])&lt;/p&gt;
&lt;p&gt;int()函数把数字和字符串转换成一个整数，base为可选的基数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(3.3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(3L)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(&amp;quot;13&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; int(&amp;quot;14&amp;quot;,15)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;min(x[,y,z…])&lt;/p&gt;
&lt;p&gt;min()函数返回给定参数的最小值，参数可以为序列。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; min(1,2,3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; min((1,2,3),(2,3,4))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, 2, 3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max(x[,y,z…])&lt;/p&gt;
&lt;p&gt;max()函数返回给定参数的最大值，参数可以为序列。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; max(1,2,3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; max((1,2,3),(2,3,4))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;oct(x)&lt;/p&gt;
&lt;p&gt;oct()函数可把给出的整数转换成八进制数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; oct(8)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;010&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; oct(123)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;0173&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ord(x)&lt;/p&gt;
&lt;p&gt;ord()函数返回一个字符串参数的ASCII码或Unicode值。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ord(&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ord(u&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;str(obj)&lt;/p&gt;
&lt;p&gt;str()函数把对象转换成可打印字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(&amp;quot;4&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str(3+2j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(3+2j)&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tuple(x)&lt;/p&gt;
&lt;p&gt;tuple()函数把序列对象转换成tuple。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; tuple(&amp;quot;hello world&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&amp;apos;h&amp;apos;, &amp;apos;e&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos; &amp;apos;, &amp;apos;w&amp;apos;, &amp;apos;o&amp;apos;, &amp;apos;r&amp;apos;, &amp;apos;l&amp;apos;, &amp;apos;d&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; tuple([1,2,3,4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, 2, 3, 4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-3-序列处理函数&quot;&gt;&lt;a href=&quot;#5-3-序列处理函数&quot; class=&quot;headerlink&quot; title=&quot;5.3. 序列处理函数&quot;&gt;&lt;/a&gt;5.3. 序列处理函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用函数中的len()、max()和min()同样可用于序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;filter(function,list)&lt;/p&gt;
&lt;p&gt;调用filter()时，它会把一个函数应用于序列中的每个项，并返回该函数返回真值时的所有项，从而过滤掉返回假值的所有项。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def nobad(s):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     return s.find(&amp;quot;bad&amp;quot;) == -1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = [&amp;quot;bad&amp;quot;,&amp;quot;good&amp;quot;,&amp;quot;bade&amp;quot;,&amp;quot;we&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; filter(nobad,s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;good&amp;apos;, &amp;apos;we&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子通过把nobad()函数应用于s序列中所有项，过滤掉所有包含“bad”的项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;map(function,list[,list])&lt;/p&gt;
&lt;p&gt;map()函数把一个函数应用于序列中所有项，并返回一个列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s=[&amp;quot;python&amp;quot;,&amp;quot;zope&amp;quot;,&amp;quot;linux&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; map(string.capitalize,s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;Python&amp;apos;, &amp;apos;Zope&amp;apos;, &amp;apos;Linux&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;map()还可同时应用于多个列表。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import operator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s=[1,2,3]; t=[3,2,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; map(operator.mul,s,t)   # s[i]*t[j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[3, 4, 3]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果传递一个None值，而不是一个函数，则map()会把每个序列中的相应元素合并起来，并返回该元组。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[1,2];b=[3,4];c=[5,6]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; map(None,a,b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1, 3, 5), (2, 4, 6)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;reduce(function,seq[,init])&lt;/p&gt;
&lt;p&gt;reduce()函数获得序列中前两个项，并把它传递给提供的函数，获得结果后再取序列中的下一项，连同结果再传递给函数，以此类推，直到处理完所有项为止。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import operator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; reduce(operator.mul,[2,3,4,5])  # ((2*3)*4)*5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; reduce(operator.mul,[2,3,4,5],1) # (((1*2)*3)*4)*5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; reduce(operator.mul,[2,3,4,5],2)  # (((2*2)*3)*4)*5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;zip(seq[,seq,…])&lt;/p&gt;
&lt;p&gt;zip()函数可把两个或多个序列中的相应项合并在一起，并以元组的格式返回它们，在处理完最短序列中的所有项后就停止。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zip([1,2,3],[4,5],[7,8,9])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1, 4, 7), (2, 5, 8)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果参数是一个序列，则zip()会以一元组的格式返回每个项，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zip((1,2,3,4,5))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1,), (2,), (3,), (4,), (5,)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; zip([1,2,3,4,5])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(1,), (2,), (3,), (4,), (5,)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-6-模块&quot;&gt;&lt;a href=&quot;#Chapter-6-模块&quot; class=&quot;headerlink&quot; title=&quot;Chapter 6. 模块&quot;&gt;&lt;/a&gt;Chapter 6. 模块&lt;/h2&gt;&lt;p&gt;模块可把一个复杂的程序按功能分开，分别存放到不同文件中，使程序更容易维护和管理。在Python中的模块是一个以.py结尾的Python代码文件。可通过import命令输入，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;import会完成以下三个操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建新的名称空间（namespace），该名称空间中拥有输入模块中定义的所有对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行模块中的代码；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建该名称空间的变量名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;import语句可同时输入多个模块，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import os,sys,system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可写成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有些模块的名称很长，我们可在输入时给它起个简单的别名，这样在使用模块中的对象就方便很多，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import ftplib as ftp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有时我们可能只想使用模块中某个对象，又不想把整个模块输入，则可以用from…import语句输入特定对象。如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from ftplib import FTP&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，我们就可直接使用FTP()，而不用带前缀。&lt;/p&gt;
&lt;p&gt;如果装载模块出错，会引发ImportError异常。我们可捕获该异常进行相应处理。&lt;/p&gt;
&lt;p&gt;Python脚本和模块都是一个以.py结束的文件，那程序是如何判断一个.py文件是作为脚本还是模块呢？关键是一个名为__name__的变量，如果它的值是__main__，则不能作为模块，只能作为脚本直接运行。所以在很多脚本的最后都有一段类似下面的语句，限制只能以脚本方式运行，不作为模块：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;apos;__main__&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;几个功能相近的模块我们可组成一个Python包，存放到一个目录结构中，通过输入包的路径来调用对象。要定义包，就要建一个与包名同名的目录，接着在该目录下创建__init__.py文件。该文件是包的初始化文件，可以为空，也可定义一个代码。例如一个WebDesign包的目录如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/WebDesign&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        __init_.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        design.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        draw.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可通过以下语句输入design模块：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import WebDesign.design&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-1-String模块&quot;&gt;&lt;a href=&quot;#6-1-String模块&quot; class=&quot;headerlink&quot; title=&quot;6.1. String模块&quot;&gt;&lt;/a&gt;6.1. String模块&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;replace(string,old,new[,maxsplit])&lt;/p&gt;
&lt;p&gt;字符串的替换函数，把字符串中的old替换成new。默认是把string中所有的old值替换成new值，如果给出maxsplit值，还可控制替换的个数，如果maxsplit为1，则只替换第一个old值。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a=&amp;quot;11223344&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print string.replace(a,&amp;quot;1&amp;quot;,&amp;quot;one&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;oneone2223344&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print string.replace(a,&amp;quot;1&amp;quot;,&amp;quot;one&amp;quot;,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;one12223344&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;capitalize(string)&lt;/p&gt;
&lt;p&gt;该函数可把字符串的首个字符替换成大字。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print string.capitalize(&amp;quot;python&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;split(string,sep=None,maxsplit=-1)&lt;/p&gt;
&lt;p&gt;从string字符串中返回一个列表，以sep的值为分界符。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ip=&amp;quot;192.168.3.3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; ip_list=string.split(ip,&amp;apos;.&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print ip_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;192&amp;apos;, &amp;apos;168&amp;apos;, &amp;apos;3&amp;apos;, &amp;apos;3&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;join(string[,sep])&lt;/p&gt;
&lt;p&gt;返回用sep连接的字串，默认的sep是空格。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = [&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b = string.join(a,&amp;apos;-&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a-b-c&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-2-time模块&quot;&gt;&lt;a href=&quot;#6-2-time模块&quot; class=&quot;headerlink&quot; title=&quot;6.2. time模块&quot;&gt;&lt;/a&gt;6.2. time模块&lt;/h2&gt;&lt;p&gt;内置模块time包含很多与时间相关函数。我们可通过它获得当前的时间和格式化时间输出。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;time()，以浮点形式返回自Linux新世纪以来经过的秒数。在linux中，00:00:00 UTC, January 1, 1970是新纪元的开始。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1150269086.6630149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.ctime(1150269086.6630149)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;Wed Jun 14 15:11:26 2006&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ctime([sec])，把秒数转换成日期格式，如果不带参数，则显示当前的时间。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.ctime()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;Wed Jun 14 15:02:50 2006&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.ctime(1138068452427683)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Sat Dec 14 04:51:44 1901&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sleep(secs)，定时。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; time.sleep(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;                #10秒后才会出现&amp;gt;&amp;gt;&amp;gt;提示符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chapter-7-类&quot;&gt;&lt;a href=&quot;#Chapter-7-类&quot; class=&quot;headerlink&quot; title=&quot;Chapter 7. 类&quot;&gt;&lt;/a&gt;Chapter 7. 类&lt;/h2&gt;&lt;p&gt;类是面向对象编程的一个重要概念。通过类的创建和继承，可重用代码，减少代码复杂度。Python是一种面向对象的脚本语言，用class语句可创建类，语法规则如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class classnmae([class_parent,...]):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      def method():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class test:                              #定义一个test类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        desc = &amp;quot;这是一个测试类。&amp;quot;        #在类中定义一个属性desc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def __init__(self,name1):        #对象构造函数，初始化类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.name1 = name1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        def show(self,name2):            #在类中定义一个方法show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;apos;name1:&amp;apos;,self.name1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print &amp;apos;name2:&amp;apos;,name2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;instance = test(&amp;apos;这是传递给name1的值&amp;apos;)   #生成test类的实例对象instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print instance.desc                      #调用类中的desc属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;instance.show(&amp;apos;这是传递给name2的值&amp;apos;)     #调用类中的show()方法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把该脚本命名为test.py，并用chmod +x test.py使脚本有执行的权限 ，运行该脚本结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;debian:~/python# ./test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是一个测试类。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name1: 这是传递给name1的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name2: 这是传递给name2的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里只是Python语言中类的一个简单介绍。详细介绍可参考网站上自由文档栏目中的Python资料。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-8-异常处理&quot;&gt;&lt;a href=&quot;#Chapter-8-异常处理&quot; class=&quot;headerlink&quot; title=&quot;Chapter 8. 异常处理&quot;&gt;&lt;/a&gt;Chapter 8. 异常处理&lt;/h2&gt;&lt;p&gt;Python的异常处理能力是很强大的，可向用户准确反馈出错信息。在Python中，异常也是对象，可对它进行操作。所有异常都是基类Exception的成员。异常处理的try语法有两种，一种是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except [exception,[data...]]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该种异常处理语法的规则是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行try下的语句，如果引发异常，则执行过程会跳到第一个except语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果第一个except中定义的异常与引发的异常匹配，则执行该except中的语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果引发的异常不匹配第一个except，则会搜索第二个except，允许编写的except数量没有限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果所有的except都不匹配，则异常会传递到下一个调用本代码的最高层try代码中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果没有发生异常，则执行else块代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;try语句的第二种语法是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;finally:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   block&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该语句的执行规则是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行try下的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果发生异常，在该异常传递到下一级try时，执行finally中的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果没有发生异常，则执行finally中的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二种try语法在无论有没有发生异常都要执行代码的情况下是很有用的。例如我们在python中打开一个文件进行读写操作，我在操作过程中不管是否出现异常，最终我都是要把该文件关闭的。&lt;/p&gt;
&lt;p&gt;除了系统引发的异常外，我们还可用raise语句手工引发一个异常：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;raise [exception[,data]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-9-文件处理&quot;&gt;&lt;a href=&quot;#Chapter-9-文件处理&quot; class=&quot;headerlink&quot; title=&quot;Chapter 9. 文件处理&quot;&gt;&lt;/a&gt;Chapter 9. 文件处理&lt;/h2&gt;&lt;p&gt;文件是我们储存信息的地方，我们经常要对文件进行读、写、删除等的操作，在Python中，我们可用Python提供的函数和方法方便地操作文件。&lt;/p&gt;
&lt;h2 id=&quot;9-1-文件处理的函数和方法&quot;&gt;&lt;a href=&quot;#9-1-文件处理的函数和方法&quot; class=&quot;headerlink&quot; title=&quot;9.1. 文件处理的函数和方法&quot;&gt;&lt;/a&gt;9.1. 文件处理的函数和方法&lt;/h2&gt;&lt;p&gt;使用Open()函数可打开文件，语法格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;file_handler = open(filename,[,mode[,bufsize]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;filename是你要操作的文件名，如果不在当前路径，需指出具体路径。mode是打开文件的模式，表示你要如何操作文件，bufsize表示是否使用缓存。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 9.1. mode&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;以读方式打开文件，可读取文件信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;以写方式打开文件，可向文件写入信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;以追加方式打开文件，文件指针自动移到文件尾。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r+&lt;/td&gt;
&lt;td&gt;以读写方式打开文件，可对文件进行读和写操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w+&lt;/td&gt;
&lt;td&gt;消除文件内容，然后以读写方式打开文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a+&lt;/td&gt;
&lt;td&gt;以读写方式打开文件，并把文件指针移到文件尾。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;以二进制模式打开文件，而不是以文本模式。该模式只对Windows或Dos有效，类Unix的文件是用二进制模式进行操作的。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Table 9.2. bufsize&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;bufsize取值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;禁用缓冲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;行缓冲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;1&lt;/td&gt;
&lt;td&gt;指定缓冲区的大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;1&lt;/td&gt;
&lt;td&gt;系统默认的缓冲区大小&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;open()函数返回一个文件对象，我们可通过read()或write()函数对文件进行读写操作，下面是一些文件对象方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 9.3. 文件对象方法&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;f.close()&lt;/td&gt;
&lt;td&gt;关闭文件，记住用open()打开文件后一定要记得关闭它，否则会占用系统的可打开文件句柄数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.fileno()&lt;/td&gt;
&lt;td&gt;获得文件描述符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.flush()&lt;/td&gt;
&lt;td&gt;刷新输出缓存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.isatty()&lt;/td&gt;
&lt;td&gt;如果文件是一个交互终端，则返回True，否则返回False。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.read([count])&lt;/td&gt;
&lt;td&gt;读出文件，如果有count，则读出count个字节。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.readline()&lt;/td&gt;
&lt;td&gt;读出一行信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.readlines()&lt;/td&gt;
&lt;td&gt;读出所有行，也就是读出整个文件的信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.seek(offset[,where])&lt;/td&gt;
&lt;td&gt;把文件指针移动到相对于where的offset位置。offset为0表示文件开始处，这是默认值 ；1表示当前位置；2表示文件结尾。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.tell()&lt;/td&gt;
&lt;td&gt;获得文件指针位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.truncate([size])&lt;/td&gt;
&lt;td&gt;截取文件，使文件的大小为size。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.write(string)&lt;/td&gt;
&lt;td&gt;把string字符串写入文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f.writelines(list)&lt;/td&gt;
&lt;td&gt;把list中的字符串一行一行地写入文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;9-2-示例&quot;&gt;&lt;a href=&quot;#9-2-示例&quot; class=&quot;headerlink&quot; title=&quot;9.2. 示例&quot;&gt;&lt;/a&gt;9.2. 示例&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文件的打开或创建&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;test.txt&amp;apos;,&amp;apos;w&amp;apos;)               #以写模式打开文件，如果文件不存在则创建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.write(&amp;apos;this is a file open/create test.\nthe second line.&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;test.txt&amp;apos;,&amp;apos;a&amp;apos;)      #以追加模式打开文件，如果文件不存在则创建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.write(&amp;apos;\nappend the text in another line.\n&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;读取文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;test.txt&amp;apos;,&amp;apos;r&amp;apos;)    #以读方式打开文件，rb为二进制方式(如图片或可执行文件等)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;read() function:&amp;apos;              #读取整个文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;readline() function:&amp;apos;          #返回文件头，读取一行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;readlines() function:&amp;apos;         #返回文件头，返回所有行的列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;list all lines&amp;apos;                #返回文件头，显示所有行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textlist = filehandler.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for line in textlist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      print line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;seek() function&amp;apos;               #移位到第32个字符，从33个字符开始显示余下内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(32)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;tell() function&amp;apos;               #移位到文件头，从头开始显示2位字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.seek(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readline()          #显示第一行内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.tell()              #显示当前位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.readline()          #显示第二行内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print filehandler.read()              #显示余下所有内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()                   #关闭文件句柄&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件系统操作&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os,fnmatch,glob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for fileName in os.listdir ( &amp;apos;/root&amp;apos; ):                 #列出/root目录内容，不包括.和..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print fileName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.mkdir(&amp;apos;py&amp;apos;)                  #在当前目录下创建一个py目录，且只能创建一层&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.rmdir( &amp;apos;py&amp;apos;)                 #在当前目录下删除py目录，且只能删除一层&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.makedirs(&amp;apos;py/aa&amp;apos;)            #可创建多层目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.removedirs(&amp;apos;py/aa&amp;apos;)          #可删除多层目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;demonstration fnmatch module&amp;apos;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for fileName in os.listdir ( &amp;apos;/root/python/file&amp;apos; ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if fnmatch.fnmatch(fileName,&amp;apos;*.txt&amp;apos;):        #利用UNIX风格的通配，只显示后缀为txt的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print fileName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;apos;demonstration glob module&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for fileName in glob.glob ( &amp;apos;*.txt&amp;apos; ):               #利用UNIX风格的通配，只显示后缀为txt的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print fileName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取文件状态&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os,time,stat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileStats = os.stat ( &amp;apos;test.txt&amp;apos; )                         #获取文件/目录的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileInfo = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Size&amp;apos;:fileStats [ stat.ST_SIZE ],                         #获取文件大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;LastModified&amp;apos;:time.ctime( fileStats [ stat.ST_MTIME ] ),  #获取文件最后修改时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;LastAccessed&amp;apos;:time.ctime( fileStats [ stat.ST_ATIME ] ),  #获取文件最后访问时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;CreationTime&amp;apos;:time.ctime( fileStats [ stat.ST_CTIME ] ),  #获取文件创建时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Mode&amp;apos;:fileStats [ stat.ST_MODE ]                          #获取文件的模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#print fileInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for field in fileInfo:                                     #显示对象内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;%s:%s&amp;apos; % (field,fileInfo[field])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#for infoField,infoValue in fileInfo:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       print &amp;apos;%s:%s&amp;apos; % (infoField,infoValue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if stat.S_ISDIR ( fileStats [ stat.ST_MODE ] ):             #判断是否路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Directory. &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Non-directory.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if stat.S_ISREG ( fileStats [ stat.ST_MODE ] ):             #判断是否一般文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Regular file.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISLNK ( fileStats [ stat.ST_MODe ] ):           #判断是否链接文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Shortcut.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISSOCK ( fileStats [ stat.ST_MODe ] ):          #判断是否套接字文件     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Socket.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISFIFO ( fileStats [ stat.ST_MODe ] ):          #判断是否命名管道&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Named pipe.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISBLK ( fileStats [ stat.ST_MODe ] ):           #判断是否块设备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Block special device.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif stat.S_ISCHR ( fileStats [ stat.ST_MODe ] ):           #判断是否字符设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   print &amp;apos;Character special device.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileStats = &amp;apos;test.txt&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if os.path.isdir ( fileStats ):         #判断是否路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Directory.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif os.path.isfile ( fileStats ):      #判断是否一般文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;File.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif os.path.islink ( fileStats ):      #判断是否链接文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Shortcut.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif os.path.ismount ( fileStats ):     #判断是否挂接点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;apos;Mount point.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;stat模块描述了os.stat(filename)返回的文件属性列表中各值的意义。我们可方便地根据stat模块存取os.stat()中的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;串行化文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- encoding:UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pickle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler = open(&amp;apos;pickle.txt&amp;apos;,&amp;apos;w&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text = [&amp;apos;this is a pickle demonstrate&amp;apos;,&amp;apos;aa&amp;apos;,&amp;apos;bb&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pickle.dump(text,filehandler)           #把text的内容序列化后保存到pickle.txt文件中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler2 = open(&amp;apos;pickle.txt&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textlist = pickle.load(filehandler2)    #还原序列化字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print textlist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filehandler2.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#cpickle是用C写的pickle模块，比标准的pickle速度快很多，使用方法同pickle。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内存文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*- coding: utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import StringIO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileHandle = StringIO.StringIO ( &amp;quot;Let freedom ring.&amp;quot; )   #create file in memory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print fileHandle.read() # &amp;quot;Let freedom ring.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fileHandle.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#cStringIO是用C写的StringIO模块，执行速度比StringIO快。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;shutil模块是一个高级的文件处理模块，可实现文件的拷贝、删除等操作。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-10-正则表达式&quot;&gt;&lt;a href=&quot;#Chapter-10-正则表达式&quot; class=&quot;headerlink&quot; title=&quot;Chapter 10. 正则表达式&quot;&gt;&lt;/a&gt;Chapter 10. 正则表达式&lt;/h2&gt;&lt;p&gt;正则表达式是一个很有用的工具，可处理复杂的字符匹配和替换工作。在Python中内置了一个re模块以支持正则表达式。&lt;/p&gt;
&lt;p&gt;正则表达式有两种基本的操作，分别是匹配和替换。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;匹配就是在一个文本字符串中搜索匹配一特殊表达式；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;替换就是在一个字符串中查找并替换匹配一特殊表达式的字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;10-1-基本元素&quot;&gt;&lt;a href=&quot;#10-1-基本元素&quot; class=&quot;headerlink&quot; title=&quot;10.1. 基本元素&quot;&gt;&lt;/a&gt;10.1. 基本元素&lt;/h2&gt;&lt;p&gt;正则表达式定义了一系列的特殊字符元素以执行匹配动作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.1. 正则表达式基本字符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;匹配text字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;匹配除换行符之外的任意一个单个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;匹配一个字符串的开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;匹配一个字符串的末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在正则表达式中，我们还可用匹配限定符来约束匹配的次数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.2. 匹配限定符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;最大匹配&lt;/th&gt;
&lt;th&gt;最小匹配&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;重复匹配前表达式零次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;重复匹配前表达式一次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;重复匹配前表达式零次或一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{m}&lt;/td&gt;
&lt;td&gt;{m}&lt;/td&gt;
&lt;td&gt;精确重复匹配前表达式m次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{m,}&lt;/td&gt;
&lt;td&gt;{m,}&lt;/td&gt;
&lt;td&gt;至少重复匹配前表达式m次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{m,n}&lt;/td&gt;
&lt;td&gt;{m,n}&lt;/td&gt;
&lt;td&gt;至少重复匹配前表达式m次，至多重复匹配前表达式n次&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;据上所述，”.*“为最大匹配，能匹配源字符串所有能匹配的字符串。”.* “为最小匹配，只匹配第一次出现的字符串。如：d.*g能匹配任意以d开头，以g结尾的字符串，如”debug”和”debugging”，甚至”dog is walking”。而d.* g只能匹配”debug”，在”dog is walking”字符串中，则只匹配到”dog “。&lt;/p&gt;
&lt;p&gt;在一些更复杂的匹配中，我们可用到组和运算符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.3. 组和运算符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;组&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;[…]&lt;/td&gt;
&lt;td&gt;匹配集合内的字符，如[a-z],[1-9]或[,./;’]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^…]&lt;/td&gt;
&lt;td&gt;匹配除集合外的所有字符，相当于取反操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&amp;#124;B&lt;/td&gt;
&lt;td&gt;匹配表达式A或B，相当于OR操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(…)&lt;/td&gt;
&lt;td&gt;表达式分组，每对括号为一组，如([a-b]+)([A-Z]+)([1-9]+)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\number&lt;/td&gt;
&lt;td&gt;匹配在number表达式组内的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;有一组特殊的字符序列，用来匹配具体的字符类型或字符环境。如\b匹配字符边界，food\b匹配”food”、”zoofood”，而和”foodies”不匹配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.4. 特殊字符序列&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\A&lt;/td&gt;
&lt;td&gt;只匹配字符串的开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;匹配一个单词边界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\B&lt;/td&gt;
&lt;td&gt;匹配一个单词的非边界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;匹配任意十进制数字字符，等价于r’[0-9]’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;匹配任意非十进制数字字符，等价于r’[^0-9]’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;匹配任意空格字符（空格符、tab制表符、换行符、回车、换页符、垂直线符号）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;匹配任意非空格字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;匹配任意字母数字字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;匹配任意非字母数字字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\Z&lt;/td&gt;
&lt;td&gt;仅匹配字符串的尾部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;匹配反斜线字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;有一套声明(assertion)对具体事件进行声明。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.5. 正则表达式声明&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;声明&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;( iLmsux)&lt;/td&gt;
&lt;td&gt;匹配空字符串，iLmsux字符对应下表的正则表达式修饰符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( :…)&lt;/td&gt;
&lt;td&gt;匹配圆括号内定义的表达式，但不填充字符组表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( P&amp;lt;name&amp;gt;)&lt;/td&gt;
&lt;td&gt;匹配圆括号内定义的表达式，但匹配的表达式还可用作name标识的符号组。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( P=name)&lt;/td&gt;
&lt;td&gt;匹配所有与前面命名的字符组相匹配的文本。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( #…)&lt;/td&gt;
&lt;td&gt;引入注释，忽略圆括号内的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( =…)&lt;/td&gt;
&lt;td&gt;如果所提供的文本与下一个正则表达式元素匹配，这之间没有多余的文本就匹配。这允许在一个表达式中进行超前操作，而不影响正则表达式其余部分的分析。如”Martin”其后紧跟”Brown”，则”Martin( =Brown)”就只与”Martin”匹配。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( !…)&lt;/td&gt;
&lt;td&gt;仅当指定表达式与下一个正则表达式元素不匹配时匹配，是( =…)的反操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( &amp;lt;=…)&lt;/td&gt;
&lt;td&gt;如果字符串当前位置的前缀字符串是给定文本，就匹配，整个表达式就在当前位置终止。如( &amp;lt;=abc)def表达式与”abcdef”匹配。这种匹配是对前缀字符数量的精确匹配。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;( &amp;lt;!…)&lt;/td&gt;
&lt;td&gt;如果字符串当前位置的前缀字符串不是给定的正文，就匹配，是( &amp;lt;=…)的反操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;正则表达式还支持一些处理标志，它会影响正则式的执行方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.6. 处理标志&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标志&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;I或IGNORECASE&lt;/td&gt;
&lt;td&gt;忽略表达式的大小写来匹配文本。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;10-2-操作&quot;&gt;&lt;a href=&quot;#10-2-操作&quot; class=&quot;headerlink&quot; title=&quot;10.2. 操作&quot;&gt;&lt;/a&gt;10.2. 操作&lt;/h2&gt;&lt;p&gt;通过re模块，我们就可在python中利用正则式对字符串进行搜索、抽取和替换操作。如：re.search()函数能执行一个基本的搜索操作，它能返回一个MatchObject对象。re.findall()函数能返回匹配列表。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;quot;this is my re module test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; obj = re.search(r&amp;apos;.*is&amp;apos;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print obj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;_sre.SRE_Match object at 0xb7d7a218&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; obj.group()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;this is&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; re.findall(r&amp;apos;.*is&amp;apos;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;this is&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MatchObject对象方法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.7. MatchObject对象方法&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;expand(template)&lt;/td&gt;
&lt;td&gt;展开模板中用反斜线定义的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.group([group,…])&lt;/td&gt;
&lt;td&gt;返回匹配的文本，是个元组。此文本是与给定group或由其索引数字定义的组匹配的文本，如果没有组定组名，则返回所有匹配项。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.groups([default])&lt;/td&gt;
&lt;td&gt;返回一个元组，该元组包含模式中与所有组匹配的文本。如果给出default参数，default参数值就是与给定表达式不匹配的组的返回值。default参数的默认取值为None。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.groupdict([default])&lt;/td&gt;
&lt;td&gt;返回一个字典，该字典包含匹配的所有子组。如果给出default参数，其值就是那些不匹配组的返回值。default参数的默认取值为None。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.start([group])&lt;/td&gt;
&lt;td&gt;返回指定group的开始位置，或返回全部匹配的开始位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.end([group])&lt;/td&gt;
&lt;td&gt;返回指定group的结束位置，或返回全部匹配的结束位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.span([group])&lt;/td&gt;
&lt;td&gt;返回两元素组，此元组等价于关于一给定组或一个完整匹配表达式的(m.start(group),m.end(group)))列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.pos&lt;/td&gt;
&lt;td&gt;传递给match()或search()函数的pos值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.endpos&lt;/td&gt;
&lt;td&gt;传递给match()或search()函数的endpos值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.lastindex&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.lastgroup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.re&lt;/td&gt;
&lt;td&gt;创建这个MatchObject对象的正则式对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m.string&lt;/td&gt;
&lt;td&gt;提供给match()或search()函数的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用sub()或subn()函数可在字符串上执行替换操作。sub()函数的基本格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sub(pattern,replace,string[,count])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; str = &amp;apos;The dog on my bed&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; rep = re.sub(&amp;apos;dog&amp;apos;,&amp;apos;cat&amp;apos;,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print rep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The cat on my bed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;replace参数可接受函数。要获得替换的次数，可使用subn()函数。subn()函数返回一个元组，此元组包含替换了的文本和替换的次数。&lt;/p&gt;
&lt;p&gt;如果需用同一个正则式进行多次匹配操作，我们可把正则式编译成内部语言，提高处理速度。编译正则式用compile()函数来实现。compile()函数的基本格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;compile(str[,flags])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;str表示需编译的正则式串，flags是修饰标志符。正则式被编译后生成一个对象，该对象有多种方法和属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 10.8. 正则式对象方法/属性&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法/属性&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r.search(string[,pos[,endpos]])&lt;/td&gt;
&lt;td&gt;同search()函数，但此函数允许指定搜索的起点和终点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.match(string[,pos[,endpos]])&lt;/td&gt;
&lt;td&gt;同match()函数，但此函数允许指定搜索的起点和终点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.split(string[,max])&lt;/td&gt;
&lt;td&gt;同split()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.findall(string)&lt;/td&gt;
&lt;td&gt;同findall()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.sub(replace,string[,count])&lt;/td&gt;
&lt;td&gt;同sub()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.subn(replace,string[,count])&lt;/td&gt;
&lt;td&gt;同subn()函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.flags&lt;/td&gt;
&lt;td&gt;创建对象时定义的标志&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.groupindex&lt;/td&gt;
&lt;td&gt;将r’( Pid)’定义的符号组名字映射为组序号的字典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r.pattern&lt;/td&gt;
&lt;td&gt;在创建对象时使用的模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;转义字符串用re.escape()函数。&lt;/p&gt;
&lt;p&gt;通过getattr获取对象引用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li=[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)(&amp;apos;c&amp;apos;)          #相当于li.append(&amp;apos;c&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler=getattr(li,&amp;apos;append&amp;apos;,None)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;built-in method append of list object at 0xb7d4a52c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler(&amp;apos;cc&amp;apos;)                      #相当于li.append(&amp;apos;cc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;result = handler(&amp;apos;bb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;,&amp;apos;bb&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;None&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Chapter-11-调试&quot;&gt;&lt;a href=&quot;#Chapter-11-调试&quot; class=&quot;headerlink&quot; title=&quot;Chapter 11. 调试&quot;&gt;&lt;/a&gt;Chapter 11. 调试&lt;/h2&gt;&lt;p&gt;Python自带了一个调试器叫pdb，和Gnu的gbd类似。下面用一个简单的程序来演示pdb的功能。程序代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pdb.set_trace()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = &amp;quot;ccc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;final = a + b + c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print final&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该程序已导入pdb模块，并在代码中添加的pdb.set_trace()跟踪点。现在让我们来运行该程序。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;localhost:~/python/pdb# python pdbtest.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--Return--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /usr/lib/python2.3/pdb.py(992)set_trace()-&amp;gt;None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; Pdb().set_trace()              # 从跟踪点开始执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n                           # n 读入下一行代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(6) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; b = &amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(7) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; c = &amp;quot;ccc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) p b                         # p 打印变量值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;bbb&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) l                           # l 显示当前执行位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  3     import pdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  4     a = &amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  5     pdb.set_trace()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  6     b = &amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  7  -&amp;gt; c = &amp;quot;ccc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  8     final = a + b + c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  9     print final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[EOF]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(8) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; final = a + b + c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n                           # 如果命令和上次的一样，也可直接按回车，不用输入&amp;apos;n&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(9) ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; print final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aaabbbccc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--Return--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /root/python/pdb/pdbtest.py(9) ()-&amp;gt;None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; print final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) p a,b,c,final&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&amp;apos;aaa&amp;apos;, &amp;apos;bbb&amp;apos;, &amp;apos;ccc&amp;apos;, &amp;apos;aaabbbccc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&amp;apos;aaa&amp;apos;, &amp;apos;bbb&amp;apos;, &amp;apos;ccc&amp;apos;, &amp;apos;aaabbbccc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Pdb) n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localhost:~/python/pdb#           # 返回shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;pdb还有很多命令，用help命令就可以列出所有的pdb命令，用help p可以查询p命令的说明。&lt;/p&gt;
&lt;h2 id=&quot;Chapter-12-HOW-TO&quot;&gt;&lt;a href=&quot;#Chapter-12-HOW-TO&quot; class=&quot;headerlink&quot; title=&quot;Chapter 12. HOW-TO&quot;&gt;&lt;/a&gt;Chapter 12. HOW-TO&lt;/h2&gt;&lt;p&gt;本章内容记录Python的一些小技巧小知识。来源是网上摘录或自己学习所得。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如何判断操作系统类型&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print sys.platform&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print sys.version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;显示和修改python的Module搜索路径&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print sys.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;&amp;apos;, &amp;apos;/usr/lib/python23.zip&amp;apos;, &amp;apos;/usr/lib/python2.3&amp;apos;, &amp;apos;/usr/lib/python2.3/plat-linux2&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;/usr/lib/python2.3/lib-tk&amp;apos;, &amp;apos;/usr/lib/python2.3/lib-dynload&amp;apos;, &amp;apos;/usr/local/lib/python2.3/site-packages&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;/usr/lib/python2.3/site-packages&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; sys.path.append(&amp;apos;/usr/lib/mypath&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print sys.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;&amp;apos;, &amp;apos;/usr/lib/python23.zip&amp;apos;, &amp;apos;/usr/lib/python2.3&amp;apos;, &amp;apos;/usr/lib/python2.3/plat-linux2&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;/usr/lib/python2.3/lib-tk&amp;apos;, &amp;apos;/usr/lib/python2.3/lib-dynload&amp;apos;, &amp;apos;/usr/local/lib/python2.3/site-packages&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;/usr/lib/python2.3/site-packages&amp;apos;, &amp;apos;/usr/lib/mypath&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把列表转换成字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t=[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print string.join(t)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a b c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行系统程序&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;os.system(&amp;apos;ls&amp;apos;)            #用os.system()可执行系统命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;exec &amp;quot;os.system(&amp;apos;ls&amp;apos;)&amp;quot;     #用exec可执行字符串中的命令，两个命令的效果一样。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上两个命令的输出都是直接显示在屏幕上，不能保存到变量中，如果我们要把输出保存起来，可用os.pope\ n()函数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;cmd = &amp;apos;/usr/bin/mkntpwd %s&amp;apos; % password&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;handler = os.popen(cmd,&amp;apos;r&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;passwordString=handler.read()   #passwordString为mkntpwd程序的输出结果&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用commands模块也可以获取程序的输出，它包含一些基于os.popen()的封装函数，使我们能更方便地获取运行系统命令和获取命令的输出，但该模块只在Unix系统下有效，不能用于Windows平台。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; status,output = commands.getstatusoutput(&amp;apos;ls -l&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;总计 96564&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  1 root     root         4459 2005-12-01 10:23 2005.sxw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  1 root     root        27511 2006-04-12 16:54 20060412_user.ods&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  1 root     root       202258 2006-01-06 16:48 2006风景-1月.jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在Python2.4中引入一个新的模块叫subprocess，用于取代os.system、os.spawn*、os.popen*、popen2.*、commands.*。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编码转换&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#-*-coding:utf-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=u&amp;quot;测试&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b=a.encode(&amp;apos;gb2312&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交换两个变量&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b = 1,2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b = b,a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a,b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试数据类型&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b=&amp;apos;test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(a,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; isinstance(b,str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用in判断是否包含子字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=&amp;apos;this is my test&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;is&amp;apos; in a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;mm&amp;apos; in a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;False&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;__iter__迭代器&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = &amp;quot;iterator&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t = iter(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;i&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;e&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;r&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;o&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;r&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; t.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StopIteration&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自已写一个迭代器类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; class reverse:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     def __init__(self,data):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             self.data=data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             self.index=len(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     def __iter__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             return self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     def next(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             if self.index == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                     raise StopIteration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             self.index = self.index - 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...             return self.data[self.index]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for char in reverse(&amp;apos;iterator&amp;apos;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print char&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过getattr可以得到一个在运行时才知道具体函数名的对象的引用，能增强我们程序的灵活性。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li=[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; getattr(li,&amp;apos;append&amp;apos;)(&amp;apos;c&amp;apos;)          #相当于li.append(&amp;apos;c&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler=getattr(li,&amp;apos;append&amp;apos;,None)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;built-in method append of list object at 0xb7d4a52c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; handler(&amp;apos;cc&amp;apos;)                      #相当于li.append(&amp;apos;cc&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;result = handler(&amp;apos;bb&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;,&amp;apos;b&amp;apos;,&amp;apos;c&amp;apos;,&amp;apos;cc&amp;apos;,&amp;apos;bb&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;None&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编程示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import statsout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def output(data, format=&amp;quot;text&amp;quot;):                              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    output_function = getattr(statsout, &amp;quot;output_%s&amp;quot; % format)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return output_function(data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上代码表示，output函数接收一个data参数和format参数，根据format参数的值，从statsout模块中取出output_text函数运行，data参数通过output_function(data)传递给了statsout模块中的output_text函数。format取不同值可从statsout模块中取出不同的函数运行（output_xxxx）。也就是说我们要运行的函数是在程序运行后才确定的。这样我们可把不同的函数以output_xxx形式命名放在statout模块中，通过以上程序可动态调用各种函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hasattr用于确定一个对象是否具有某个属性。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hasattr(object, name) -&amp;gt; bool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;判断object中是否有name属性，返回一个布尔值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拆分序列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[c for c in &amp;apos;abcdefg&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;d&amp;apos;, &amp;apos;e&amp;apos;, &amp;apos;f&amp;apos;, &amp;apos;g&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按if条件拆分序列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[c for c in &amp;apos;123456&amp;apos; if int(c)&amp;lt;3]      如果if的条件为真，则执行for循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;1&amp;apos;, &amp;apos;2&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=[c for c in &amp;apos;123456&amp;apos; if int(c)&amp;gt;3]      如果if的条件为假，则不执行for循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;apos;4&amp;apos;, &amp;apos;5&amp;apos;, &amp;apos;6&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;__dict__记录模块或类中所有对象的信息，它以字典{name:object}的形式记录这些信息，如果wikiaction是一个模块，则可以这样显示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;import wikiaction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;print wikiaction.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;do_test&amp;apos;: &amp;lt;function do_test at 0xb7c10534&amp;gt;, &amp;apos;do_diff&amp;apos;: &amp;lt;function do_diff at 0xb7c0ef0c&amp;gt;, &amp;apos;do_refresh&amp;apos;: &amp;lt;fun&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ction do_refresh at 0xb7c1025c&amp;gt;, &amp;apos;do_userform&amp;apos;: &amp;lt;function do_userform at 0xb7c103e4&amp;gt;, &amp;apos;getHandler&amp;apos;: &amp;lt;function&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; getHandler at 0xb7c105a4&amp;gt;, &amp;apos;do_raw&amp;apos;: &amp;lt;function do_raw at 0xb7c10454&amp;gt;, &amp;apos;do_chart&amp;apos;: &amp;lt;function do_chart at 0xb7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c104c4&amp;gt;, &amp;apos;re&amp;apos;: &amp;lt;module &amp;apos;re&amp;apos; from &amp;apos;/usr/lib/python2.3/re.pyc&amp;apos;&amp;gt;, &amp;apos;pysupport&amp;apos;: &amp;lt;module &amp;apos;MoinMoin.util.pysupport&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; from &amp;apos;/usr/lib/python2.3/site-packages/MoinMoin/util/pysupport.pyc&amp;apos;&amp;gt;, &amp;apos;config&amp;apos;: &amp;lt;module &amp;apos;MoinMoin.config&amp;apos; fr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;om &amp;apos;/usr/lib/python2.3/site-packages/MoinMoin/config.pyc&amp;apos;&amp;gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘and’的特殊用法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; and &amp;apos;b&amp;apos;         #如果两个都为真值，返回最后一个真值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;b&amp;apos; and &amp;apos;a&amp;apos;         #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; and &amp;apos;b&amp;apos; and &amp;apos;c&amp;apos; #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;c&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;&amp;apos; and &amp;apos;a&amp;apos;          #如果有假值，则返回假值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; and &amp;apos;&amp;apos; and &amp;apos;c&amp;apos;  #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;&amp;apos; and 0            #如果两个都为假值，返回第一个假值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 0 and &amp;apos;&amp;apos;            #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘or’的的特殊用法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; or &amp;apos;b&amp;apos;          #如果有一个为真值，则返回第一个真值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;b&amp;apos; or &amp;apos;a&amp;apos;          #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;b&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;apos;a&amp;apos; or &amp;apos;b&amp;apos; or &amp;apos;&amp;apos;    #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 0 and &amp;apos;&amp;apos; and &amp;#123;&amp;#125;     #如果所有都是假值，则返回第一个假值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;#123;&amp;#125; and &amp;apos;&amp;apos; and &amp;#123;&amp;#125;    #同上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;lambda匿名函数的用法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a=lambda c:c*2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;function &amp;lt;lambda&amp;gt; at 0xb7dd710c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理：Jims of &lt;a href=&quot;http://www.ringkee.com&quot;&gt;肥肥世家&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:jims.yang@gmail.com&quot;&gt;jims.yang@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright © 2004，2005，2006 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。&lt;/p&gt;
&lt;p&gt;发布时间：2004年07月10日&lt;/p&gt;
&lt;p&gt;更新时间：2006年06月14日，把参考篇的内容合并进来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://it-ebooks.flygon.net/tags/python/"/>
    
  </entry>
  
</feed>
